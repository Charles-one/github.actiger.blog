<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AcTiger跳跳虎</title>
    <link>https://charles-one.github.io/actiger/</link>
    <description>Recent content on AcTiger跳跳虎</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 08 Mar 2021 10:36:29 +0800</lastBuildDate><atom:link href="https://charles-one.github.io/actiger/index.xml" rel="self" type="application/rss+xml" />
    <item>
    <title>申诉很多次无法拿回ins账号</title>
    <link>https://charles-one.github.io/actiger/blog/thought/%E7%94%B3%E8%AF%89%E5%BE%88%E5%A4%9A%E6%AC%A1%E6%97%A0%E6%B3%95%E6%8B%BF%E5%9B%9Eins%E8%B4%A6%E5%8F%B7/</link>
    <pubDate>Mon, 08 Mar 2021 10:36:29 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/thought/%E7%94%B3%E8%AF%89%E5%BE%88%E5%A4%9A%E6%AC%A1%E6%97%A0%E6%B3%95%E6%8B%BF%E5%9B%9Eins%E8%B4%A6%E5%8F%B7/</guid>
    <description>
        &lt;h3 id=&#34;申请多次无法拿回封禁账户&#34;&gt;申请多次无法拿回封禁账户&lt;/h3&gt;
&lt;h3 id=&#34;不过还是不会用提交照片方式拿回-就样&#34;&gt;不过还是不会用提交照片方式拿回, 就样&lt;/h3&gt;
&lt;h3 id=&#34;有点可以不明白-判定违反社区规则-却不列出哪一项-上传入狱照就能证明无罪-这什么鬼逻辑-奇特&#34;&gt;有点可以不明白, 判定违反社区规则, 却不列出哪一项, 上传入狱照就能证明无罪??? 这什么鬼逻辑, 奇特.&lt;/h3&gt;
&lt;h3 id=&#34;重新注册一个了&#34;&gt;重新注册一个了&lt;/h3&gt;

    </description>
    </item>
    
    <item>
    <title>安装MariaDB和设置utf-8mb4字符集</title>
    <link>https://charles-one.github.io/actiger/blog/mysql/%E5%AE%89%E8%A3%85mariadb%E5%92%8C%E8%AE%BE%E7%BD%AEutf-8mb4%E5%AD%97%E7%AC%A6%E9%9B%86/</link>
    <pubDate>Thu, 14 Jan 2021 21:29:04 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/mysql/%E5%AE%89%E8%A3%85mariadb%E5%92%8C%E8%AE%BE%E7%BD%AEutf-8mb4%E5%AD%97%E7%AC%A6%E9%9B%86/</guid>
    <description>
        &lt;h3 id=&#34;0-不用k8s了-要直接安装mariadb-并设置真正的utf-8-mariadb的utf-8只有3个字节-不是真正的utf-8-utf-8mb4才是&#34;&gt;0. 不用k8s了, 要直接安装MariaDB, 并设置真正的utf-8, MariaDB的utf-8只有3个字节, 不是真正的utf-8, utf-8mb4才是.&lt;/h3&gt;
&lt;h3 id=&#34;1-安装mariadb-二种方式-使用默认源和自建官方源&#34;&gt;1. 安装MariaDB. 二种方式, 使用默认源和自建官方源.&lt;/h3&gt;
&lt;h4 id=&#34;1-使用默认源&#34;&gt;1. 使用默认源&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;yum -y install mariadb-server mariadb-client
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;安装后执行, mysql_secure_installation是初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;systemctl enable mariadb
systemctl start mariadb
mysql_secure_installation
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-使用自建官方源-可安装mariadb-105稳定版-a-target_blank-hrefhttpsdownloadsmariadborgmariadbrepositoriesdistrocentosdistro_releasecentos7-amd64--centos7mirrorustc-hefeiversion105官方文档地址a&#34;&gt;2. 使用自建官方源, 可安装MariaDB 10.5稳定版. &lt;a target=&#34;_blank&#34; href=&#34;https://downloads.mariadb.org/mariadb/repositories/#distro=CentOS&amp;distro_release=centos7-amd64--centos7&amp;mirror=ustc-hefei&amp;version=10.5&#34;&gt;官方文档地址&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;vim /etc/yum.repos.d/MariaDB.repo&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# MariaDB 10.5 CentOS repository list - created 2021-01-14 03:58 UTC
# http://downloads.mariadb.org/mariadb/repositories/
[mariadb]
name = MariaDB
baseurl = http://yum.mariadb.org/10.5/centos7-amd64
gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
gpgcheck=1
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;再执行安装命令即可&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;yum install -y mariadb-server mariadb-client
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;安装后执行, mysql_secure_installation是初始化.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;systemctl enable mariadb
systemctl start mariadb
mysql_secure_installation
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-设置mariadb字符集-需要设置4个文件mycnf-clientcnf-mysql-clientscnf-servercnf&#34;&gt;2. 设置MariaDB字符集. 需要设置4个文件my.cnf, client.cnf, mysql-clients.cnf, server.cnf.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;vim /etc/my.cnf 增加以下内容&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;[client]
default-character-set = utf8mb4

[mysql]
default-character-set = utf8mb4

[mysqld]
character-set-client-handshake = FALSE
character-set-server = utf8mb4
collation-server = utf8mb4_unicode_ci
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;vim /etc/my.cnf.d/client.cnf 在[client]后增加 default-character-set=utf8&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;[client]
default-character-set=utf8mb4
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;vim /etc/my.cnf.d/mysql-clients.cnf在[mysql]增加default-character-set=utf8mb4&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;[mysql]
default-character-set=utf8mb4
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;vim /etc/my.cnf.d/server.cnf 在[server]后增加character-set-server=utf8mb4&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;[server]
character-set-server=utf8mb4
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-重启mariadb-连接数据库检查字符集&#34;&gt;3. 重启MariaDB, 连接数据库,检查字符集.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;重启MariaDB&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;systemctl restart mariadb
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;连接数据库.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# 回车输入密码即可
mysql -uroot -hlocalhost -P3306 -p
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;检查字符集&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;show variables like &amp;quot;%character%&amp;quot;;
show variables like &amp;quot;%collation%&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;img src=&#34;https://img.actiger.com/blog/tech/utf-8mb4.png&#34; alt=&#34;utf8mb4&#34;&gt;
&lt;h3 id=&#34;4-补充utf8mb4_unicode_ci和utf8mb4_general_ci区别-mysql可以使用utf8mb4_0900_ai_ci-character_set_system是固定utf8不可更改&#34;&gt;4. 补充utf8mb4_unicode_ci和utf8mb4_general_ci区别, MySQL可以使用utf8mb4_0900_ai_ci, character_set_system是固定utf8不可更改.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;utf8mb4_unicode_ci和utf8mb4_general_ci区别&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;utf8mb4_unicode_ci: 基于标准的Unicode来排序和比较，能够在各种语言之间精确排序，在特殊情况下，Unicode排序规则为了能够处理特殊字符的情况，实现了略微复杂的排序算法，所以兼容度比较高，但是性能不高。&lt;/p&gt;
&lt;p&gt;utf8mb4_general_ci: 没有实现Unicode排序规则，在遇到某些特殊语言或者字符集，排序结果可能不一致，但是在比较和排序的时候速度更快。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL可以使用utf8mb4_0900_ai_ci, 对应位置替换,show variables like &amp;ldquo;%character%&amp;quot;;与MariaDB一致,show variables like &amp;ldquo;%collation%&amp;quot;;有区别&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;collation_connection utf8mb4_0900_ai_ci
collation_database utf8mb4_general_ci
collation_server utf8mb4_0900_ai_ci
default_collation_for_utf8mb4 utf8mb4_0900_ai_ci
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;放个图
&lt;img src=&#34;https://img.actiger.com/blog/tech/msqlutf8mb4.png&#34; alt=&#34;msqlutf8mb4&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;character_set_system固定utf8格式, 不可更改.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参考&lt;a href=&#34;https://mariadb.com/kb/en/supported-character-sets-and-collations/&#34;&gt;MariaDB官方支持字符集&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建用户和授权, 全部本地远程访问%代替, ssh方式使用固定ip代替localhost.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;CREATE DATABASE testdatabase;
CREATE USER &#39;testuser&#39;@&#39;%&#39; IDENTIFIED BY &#39;password&#39;;
GRANT ALL ON testdatabase.* TO &#39;testuser&#39;@&#39;%&#39;;
FLUSH PRIVILEGES;
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>解决shell中bash空格问题</title>
    <link>https://charles-one.github.io/actiger/blog/linux/%E8%A7%A3%E5%86%B3shell%E4%B8%ADbash%E7%A9%BA%E6%A0%BC%E9%97%AE%E9%A2%98/</link>
    <pubDate>Tue, 12 Jan 2021 17:19:48 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/%E8%A7%A3%E5%86%B3shell%E4%B8%ADbash%E7%A9%BA%E6%A0%BC%E9%97%AE%E9%A2%98/</guid>
    <description>
        &lt;h3 id=&#34;1-mac上如果有空格的文件夹-在脚本中进入不了-如test-space文件夹&#34;&gt;1. mac上如果有空格的文件夹, 在脚本中进入不了, 如test space文件夹.&lt;/h3&gt;
&lt;p&gt;vim  testcd.sh&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd &amp;quot;test\ space&amp;quot;
pwd

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行./testcd.sh, 报错找不到&lt;/p&gt;
&lt;h4 id=&#34;testsh-line-1-cd-test--no-such-file-or-directory&#34;&gt;./test.sh: line 1: cd: test : No such file or directory&lt;/h4&gt;
&lt;h3 id=&#34;2-解决方式eval命令-eval会扫描并替换参数-在引号内的命令也会执行-官网-a-hrefhttpswwwunixcomman-pageposix1posixeval-target_blankhttpswwwunixcomman-pageposix1posixevala&#34;&gt;2. 解决方式eval命令. eval会扫描并替换参数, 在引号内的命令也会执行. 官网 &lt;a href=&#34;https://www.unix.com/man-page/posix/1posix/eval/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://www.unix.com/man-page/posix/1posix/eval/&#34;&gt;https://www.unix.com/man-page/posix/1posix/eval/&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;eval cd &amp;quot;test\ space&amp;quot;
pwd
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;就可以正常执行./testcd.sh&lt;/p&gt;
&lt;h3 id=&#34;3-可执行操作的文件夹-命名尽量避免有空格的名字&#34;&gt;3. 可执行操作的文件夹, 命名尽量避免有空格的名字.&lt;/h3&gt;

    </description>
    </item>
    
    <item>
    <title>企业私刑--Instagram被禁入狱照才能解封</title>
    <link>https://charles-one.github.io/actiger/blog/thought/%E4%BC%81%E4%B8%9A%E7%A7%81%E5%88%91-instagram%E8%A2%AB%E7%A6%81%E5%85%A5%E7%8B%B1%E7%85%A7%E6%89%8D%E8%83%BD%E8%A7%A3%E5%B0%81/</link>
    <pubDate>Tue, 12 Jan 2021 11:51:33 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/thought/%E4%BC%81%E4%B8%9A%E7%A7%81%E5%88%91-instagram%E8%A2%AB%E7%A6%81%E5%85%A5%E7%8B%B1%E7%85%A7%E6%89%8D%E8%83%BD%E8%A7%A3%E5%B0%81/</guid>
    <description>
        &lt;h2 id=&#34;1-起因&#34;&gt;1. 起因&lt;/h2&gt;
&lt;h4 id=&#34;新注册一个号-到其他城市时-就开心多发几次ins-就封禁了&#34;&gt;新注册一个号, 到其他城市时, 就开心多发几次ins, 就封禁了.&lt;/h4&gt;
&lt;h4 id=&#34;震惊-解禁需要个人举着号码有面脸的照片&#34;&gt;震惊, 解禁需要个人举着号码有面脸的照片.&lt;/h4&gt;
&lt;h2 id=&#34;2-是否针对中国用户&#34;&gt;2. 是否针对中国用户?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;搜索网络上的信息, 发现网友有很多被封禁了, 和我一样, 如果不交出个人信息就不给账号. 而其他国家不需要提供个人信息.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通常这种事发生在某些网站, 没想到Instagram Facebook这种大公司也会, 开始以账号安全问题盗取个人信息.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有人选择给了个人信息, 有人没有.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-大公司这种对待用户的权利是否太大了&#34;&gt;3. 大公司这种对待用户的权利是否太大了?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;像Facebook禁用我的账户, 要想申诉, 必须跪着交出个人信息.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Twitter和Facebook 禁用Donald J. Trump, 虽然有言论煽动暴力方面的嫌疑, 这是违反法律未定罪.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这就有点像你在法律面前可以自由讲话, 到了私人企业内, 就有私人法律, 触犯私人法律, 企业就开始动用私刑.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;国内企业私刑接触最多的腾讯, 只有分享的内容是敌台的, 一律禁止. 抖音分享, 淘宝的盖楼分享的信息都没法显示了, 这种事情已经存续好多年.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-互联网本应该自由平等-企业歧视企业私刑-感觉烂透了&#34;&gt;4. 互联网本应该自由平等, 企业歧视,企业私刑, 感觉烂透了.&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;垄断, 真的可以为所欲为.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果最大的垄断是**, 那才是真的可悲.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

    </description>
    </item>
    
    <item>
    <title>2021</title>
    <link>https://charles-one.github.io/actiger/blog/thought/2021/</link>
    <pubDate>Sun, 03 Jan 2021 23:32:33 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/thought/2021/</guid>
    <description>
        &lt;h2 id=&#34;回顾2020&#34;&gt;回顾2020&lt;/h2&gt;
&lt;h3 id=&#34;旅游-随心飞&#34;&gt;旅游, 随心飞&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;随心飞14次, 去过6城市, 5个省份, 比过去4年到的地方都多.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;觉得最美城市是大理, 在洱海下观看的苍山和云海最难忘&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://img.actiger.com/blog/travel/苍山云海.JPG&#34; alt=&#34;苍山去海&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;丽江腊排骨, 泸沽湖的耗牛肉, 北京的烤羊肉, 西安的肉夹膜&amp;hellip; 我都喜欢&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;爬山可累了, 下次不爬山了😂&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有被搭讪1次🤩  不过匆匆一别&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;分手&#34;&gt;分手&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;开始, 觉得可以&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;后来才觉得自己才太年经, 很累, 大可不必, 各回各家各找各妈就行了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;感情的事, 以后还是要慎重一些&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;购物&#34;&gt;购物&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;给老妈买了几件衣服, iPhone SE.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;给侄女们买了几件礼物&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自己买了iPhone 12Pro, Apple Watch 6&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;投资&#34;&gt;投资&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;幸运的是股票亏的钱也挣回来了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;还买了一个大大件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;展望2021&#34;&gt;展望2021&lt;/h2&gt;
&lt;img src=&#34;https://img.actiger.com/blog/travel/2021.JPG&#34; alt=&#34;2021&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;计划看4本书, 毕竟人丑还是要多读书, 做个有趣的灵魂&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运动也不能忘&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VLOG可以做起来, 先评测下身边买的东东&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

    </description>
    </item>
    
    <item>
    <title>Ohmyzsh与fzf搜索历史命令</title>
    <link>https://charles-one.github.io/actiger/blog/linux/ohmyzsh%E4%B8%8Efzf%E6%90%9C%E7%B4%A2%E5%8E%86%E5%8F%B2%E5%91%BD%E4%BB%A4/</link>
    <pubDate>Mon, 28 Sep 2020 20:43:48 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/ohmyzsh%E4%B8%8Efzf%E6%90%9C%E7%B4%A2%E5%8E%86%E5%8F%B2%E5%91%BD%E4%BB%A4/</guid>
    <description>
        &lt;h3 id=&#34;1-经常终端里活动-打的命令比较多-怎么搜索历史命令-controlr和controls的搜索不够直观-还有没有比较好的搜索-答案是有的fzf&#34;&gt;1. 经常终端里活动, 打的命令比较多, 怎么搜索历史命令, control+r和control+s的搜索不够直观, 还有没有比较好的搜索, 答案是有的fzf.&lt;/h3&gt;
&lt;h3 id=&#34;2-安装oh-my-zsh和fzf&#34;&gt;2. 安装oh-my-zsh和fzf&lt;/h3&gt;
&lt;h4 id=&#34;1-安装oh-my-zsh-参考a-hrefhttpsgithubcomohmyzshohmyzsh-target_blankoh-my-zsh-github地址a&#34;&gt;1. 安装Oh my zsh, 参考&lt;a href=&#34;https://github.com/ohmyzsh/ohmyzsh&#34; target=&#34;_blank&#34;&gt;Oh my zsh github地址&lt;/a&gt;.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sh -c &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-更改shell为zsh&#34;&gt;2. 更改shell为zsh&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
# chsh后输入 /bin/zsh, 如果没有zsh.则需要安装zsh.
chsh
/bin/zsh

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-安装fzf-参考a-hrefhttpsgithubcomjunegunnfzf-target_blankfzf-github地址a&#34;&gt;2. 安装fzf, 参考&lt;a href=&#34;https://github.com/junegunn/fzf&#34; target=&#34;_blank&#34;&gt;fzf github地址&lt;/a&gt;.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
# mac
brew install fzf

# Debian, Ubuntu
apt-get install fzf

# CentOS, 发现dnf和yum没有fzf的包.
# 安装的时候全部同意就可以.
git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-在oh-my-zsh中启用fzf&#34;&gt;3. 在Oh my zsh中启用fzf&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# vim ~/.zshrc下插件括内增加fzf

plugins=(git fzf)

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;再按下control--r就神奇了-还能搜索历史命令如vim&#34;&gt;再按下control + r就神奇了, 还能搜索历史命令如vim.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://img.actiger.com/blog/tech/ohmyzsh-fzf.png&#34; alt=&#34;ohmyzsh-fzf&#34;&gt;&lt;/p&gt;

    </description>
    </item>
    
    <item>
    <title>Sed命令替换文件中字符串</title>
    <link>https://charles-one.github.io/actiger/blog/linux/sed%E5%91%BD%E4%BB%A4%E6%9B%BF%E6%8D%A2%E6%96%87%E4%BB%B6%E4%B8%AD%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
    <pubDate>Thu, 24 Sep 2020 23:57:03 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/sed%E5%91%BD%E4%BB%A4%E6%9B%BF%E6%8D%A2%E6%96%87%E4%BB%B6%E4%B8%AD%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
    <description>
        &lt;h3 id=&#34;1-因为把域名从wwwactigercom更改为actigercom了-博客中大量引用的地址要替换-所以就有了替换文件中字符串&#34;&gt;1. 因为把域名从www.actiger.com更改为actiger.com了, 博客中大量引用的地址要替换, 所以就有了替换文件中字符串.&lt;/h3&gt;
&lt;h3 id=&#34;2-随意查了下sed使用率比较高-linux-mac平台都有-那就它了&#34;&gt;2. 随意查了下sed使用率比较高, linux, mac平台都有, 那就它了.&lt;/h3&gt;
&lt;h4 id=&#34;1-linux&#34;&gt;1. linux&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
# 替换文件中每行中第1个a为b

sed -i &#39;s/a/b/&#39; 文件

# 替换文件中所有的a为b

sed -i &#39;s/a/b/g&#39; 文件

# 不替换文件内容, 仅打印出替换后的效果, 下面命令打印所有行匹配的字符串.

sed -e &#39;s/a/b/g&#39; 文件



&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-mac&#34;&gt;2. mac&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
# 替换文件中所有的a为b, mac这里必须指定备份文件名称, &amp;quot;&amp;quot;表示空, 也可&amp;quot;_backup&amp;quot;原文件做个备份.

sed -i &amp;quot;&amp;quot; &#39;s/a/b/g&#39; 文件

sed -i &amp;quot;_backup&amp;quot; &#39;s/a/b/g&#39; 文件

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-还能和其他命令连着用-比如正则匹配一些文件-替换匹配文件中的内容-sed与grep和ag都可连用&#34;&gt;3. 还能和其他命令连着用, 比如正则匹配一些文件, 替换匹配文件中的内容. sed与grep和ag都可连用.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
# 当前目前下test开头文件结尾所有main替换成hello

sed -i &#39;s/a/b/g&#39; `grep -rl hello --include=&amp;quot;test*&amp;quot; .`


# 把.c文件结尾所有main替换成hello, find与ag过滤文件,
# find ${HOME}/WorkPlace/test当前目录所有文件, 一定要写全路径, 防止误操作.
# ag &amp;quot;\.c$&amp;quot;中.需要转译,$表示结尾

sed -i &amp;quot;&amp;quot; &#39;s/main/hello/g&#39; `find ${HOME}/WorkPlace/test |ag &amp;quot;\.c$&amp;quot;`

&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>Fswatch监控文件变化rsync上传文件</title>
    <link>https://charles-one.github.io/actiger/blog/linux/fswatch%E7%9B%91%E6%8E%A7%E6%96%87%E4%BB%B6%E5%8F%98%E5%8C%96rsync%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/</link>
    <pubDate>Wed, 16 Sep 2020 23:31:10 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/fswatch%E7%9B%91%E6%8E%A7%E6%96%87%E4%BB%B6%E5%8F%98%E5%8C%96rsync%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6/</guid>
    <description>
        &lt;h3 id=&#34;1-上次手动上传总觉得不够智能-能自动最好-查询下fswatch可监控文件变动&#34;&gt;1. 上次手动上传总觉得不够智能, 能自动最好. 查询下fswatch可监控文件变动.&lt;/h3&gt;
&lt;h3 id=&#34;2-写了个小脚本&#34;&gt;2. 写了个小脚本&lt;/h3&gt;
&lt;h4 id=&#34;vim-rsyncblogsh--1参数表示监控到1次文件变动就退出监控&#34;&gt;vim rsyncblog.sh, -1参数表示监控到1次文件变动就退出监控.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;LOCAL_PATH=&amp;quot;${HOME}/Pictures/img/blog/&amp;quot;

SERVER_PATH=&amp;quot;img/blog/&amp;quot;

function rsyncblog(){
    echo &amp;quot;\033[42;30m Begin rsync... \033[0m&amp;quot;
    rsync -rut --exclude &#39;.DS_Store&#39; ${LOCAL_PATH} b:${SERVER_PATH}
    echo &amp;quot;\033[42;30m Finash rsync.  \033[0m&amp;quot;
    fswatch_blog
}

function fswatch_blog(){
    echo &amp;quot;\033[42;30m watch ${LOCAL_PATH}  \033[0m&amp;quot;
    fswatch --exclude=&#39;.DS_Store&#39; -1 ${LOCAL_PATH}
    rsyncblog
}

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-运行&#34;&gt;3. 运行&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;./rsyncblog.sh
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;结束运行-键盘controlc&#34;&gt;结束运行, 键盘Control+C.&lt;/h4&gt;

    </description>
    </item>
    
    <item>
    <title>Rsync同步文件或图片到服务器</title>
    <link>https://charles-one.github.io/actiger/blog/linux/rsync%E5%90%8C%E6%AD%A5%E6%96%87%E4%BB%B6%E6%88%96%E5%9B%BE%E7%89%87%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
    <pubDate>Sat, 12 Sep 2020 20:48:14 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/rsync%E5%90%8C%E6%AD%A5%E6%96%87%E4%BB%B6%E6%88%96%E5%9B%BE%E7%89%87%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
    <description>
        &lt;h3 id=&#34;1-上次用nginx做了静态资源-图片图床-同步是个问题&#34;&gt;1. 上次用nginx做了静态资源, 图片图床. 同步是个问题.&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;单纯使用scp每次传输, 覆盖文件, 文件更新时间就没了.&lt;/li&gt;
&lt;li&gt;思考有没有更好的工具.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-网上查询发现rsync-同步神器了&#34;&gt;2. 网上查询发现rsync, 同步神器了.&lt;/h3&gt;
&lt;h4 id=&#34;安装-homebrew&#34;&gt;安装, Homebrew.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;brew install rsync
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;参数解释-r目录递归u增量更新本地文件时间比上标文件新才更新-t保留修改时间---exclude排除文件&#34;&gt;参数解释-r目录递归,u增量更新(本地文件时间比上标文件新才更新), t保留修改时间. &amp;ndash;exclude排除文件&lt;/h4&gt;
&lt;h4 id=&#34;在本地删除文件后-rsync同步到服务器端时是不会删除对应的文件的-需要加上参数--delete-会删除服务端比本地多余的文件-重要文件同步谨慎使用&#34;&gt;在本地删除文件后, rsync同步到服务器端时是不会删除对应的文件的, 需要加上参数&amp;ndash;delete, 会删除服务端比本地多余的文件, 重要文件同步谨慎使用.&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;${HOME}/Pictures/img/&lt;/strong&gt;表示上传img文件夹下的所有文件, 不上传img.
&lt;strong&gt;${HOME}/Pictures/img&lt;/strong&gt;表示上传img这个文件夹.
&lt;strong&gt;所以这个要注意&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;vim-zshrc&#34;&gt;vim .zshrc&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
alias up=&amp;quot;rsync -rut --exclude &#39;.DS_Store&#39;&amp;quot;

uponestoblog(){
    echo &amp;quot;\033[42;30m Begin rsync Files...  \033[0m&amp;quot;
    SERVER_PATH=&amp;quot;img/blog/&amp;quot;
    for i in &amp;quot;$@&amp;quot;; do
        rsync -rut --exclude &#39;.DS_Store&#39; $i b:${SERVER_PATH}
    done
}
upblog(){
    LOCAL_PATH=&amp;quot;${HOME}/Pictures/img/blog/&amp;quot;
    SERVER_PATH=&amp;quot;img/blog/&amp;quot;
    echo &amp;quot;\033[42;30m Begin rsync ${LOCAL_PATH} b:${SERVER_PATH}...  \033[0m&amp;quot;
    rsync -rut --exclude &#39;.DS_Store&#39; ${LOCAL_PATH} b:${SERVER_PATH}
    echo &amp;quot;\033[42;30m Finash.  \033[0m&amp;quot;
}

upimg(){
    LOCAL_PATH=&amp;quot;${HOME}/Pictures/img/&amp;quot;
    SERVER_PATH=&amp;quot;img/&amp;quot;
    echo &amp;quot;\033[42;30m Begin rsync ${LOCAL_PATH} b:${SERVER_PATH}...  \033[0m&amp;quot;
    rsync -rut --exclude &#39;.DS_Store&#39; ${LOCAL_PATH} b:${SERVER_PATH}
    echo &amp;quot;\033[42;30m Finash.  \033[0m&amp;quot;
}

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;重新生效zshrc&#34;&gt;重新生效.zshrc&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;source .zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-开心上传图床了-平时用的就几个文件夹-需要参数化嘛&#34;&gt;3. 开心上传图床了, 平时用的就几个文件夹, 需要参数化嘛😃&lt;/h3&gt;
&lt;h4 id=&#34;使用alias重命名的up命令-b是服务器名称a-target_blank-hrefhttpsactigercombloglinuxssh密钥生成配置和登陆服务器与github使用钥匙参考ssh密钥配置a&#34;&gt;使用alias重命名的up命令, b是服务器名称.&lt;a target=&#34;_blank&#34; href=&#34;https://actiger.com/blog/linux/ssh密钥生成配置和登陆服务器与github使用钥匙/&#34;&gt;参考SSH密钥配置&lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;upimg

# 或者up命令
up ~/Pictures/img/ b:img/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://img.actiger.com&#34;&gt;img.actiger.com&lt;/a&gt;&lt;/p&gt;

    </description>
    </item>
    
    <item>
    <title>Kubernetes下nginx静态图床</title>
    <link>https://charles-one.github.io/actiger/blog/linux/kubernetes%E4%B8%8Bnginx%E9%9D%99%E6%80%81%E5%9B%BE%E5%BA%8A/</link>
    <pubDate>Fri, 11 Sep 2020 00:50:44 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/kubernetes%E4%B8%8Bnginx%E9%9D%99%E6%80%81%E5%9B%BE%E5%BA%8A/</guid>
    <description>
        &lt;h3 id=&#34;1-为什么需要图床&#34;&gt;1. 为什么需要图床&lt;/h3&gt;
&lt;h4 id=&#34;1-自己的搭建的图床地址不会更改-长期可用-服务保证-第3方服务-随时因为各种异常封禁的&#34;&gt;1. 自己的搭建的图床地址不会更改, 长期可用, 服务保证, 第3方服务, 随时因为各种异常封禁的.&lt;/h4&gt;
&lt;h4 id=&#34;2-hugo写markdown过程中需要使用图片-使用hugo相对地址比较麻烦&#34;&gt;2. Hugo写markdown过程中需要使用图片. 使用Hugo相对地址比较麻烦.&lt;/h4&gt;
&lt;h4 id=&#34;3-七牛又拍云之类需要备案和认证-时间和精力成本比较高&#34;&gt;3. 七牛,又拍云之类需要备案和认证, 时间和精力成本比较高.&lt;/h4&gt;
&lt;h4 id=&#34;4-而且自己搭建后-凡是可使用markdown的地方都可使用-富文本也可用-公众号之类文章也可以使用-综上图床必须的&#34;&gt;4. 而且自己搭建后, 凡是可使用markdown的地方都可使用, 富文本也可用, 公众号之类文章也可以使用, 综上图床必须的.&lt;/h4&gt;
&lt;h3 id=&#34;2-图床原理-需要搭建什么的图床&#34;&gt;2. 图床原理, 需要搭建什么的图床.&lt;/h3&gt;
&lt;h4 id=&#34;1-原理的话&#34;&gt;1. 原理的话&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;就是服务器上的一个一个图片文件, 通过nginx apeache类服务器访问这些图片.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;2-搭建什么的图床&#34;&gt;2. 搭建什么的图床.&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Chevereto + nginx可网页上传, 稍微有点难度, 有需求再上.&lt;/li&gt;
&lt;li&gt;Nginx 这个目前觉得最简单, 就用这个了.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3-在kubernetes下nginx-pod创建图床&#34;&gt;3. 在Kubernetes下nginx pod创建图床.&lt;/h3&gt;
&lt;h4 id=&#34;1-vim-nginx-deploymentyaml-使用到pvc-命名空间命名的是nginx-space&#34;&gt;1. vim nginx-deployment.yaml, 使用到pvc, 命名空间命名的是nginx-space&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-nginx
  namespace: nginx-space
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-nginx
  template:
    metadata:
      namespace: nginx-space
      labels:
        app: my-nginx
    spec:
      containers:
      - name: my-nginx
        image: nginx:1.16.0
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: www-actiger-com
          ####### img就是存放图片的
        - mountPath: /usr/share/nginx/img
          name: img-actiger-com
        - mountPath: /etc/nginx/
          name: nginx-config
      volumes:
      - name: www-actiger-com
        persistentVolumeClaim:
          claimName: pvc-www
      - name: img-actiger-com
        persistentVolumeClaim:
          claimName: pvc-img
      - name: nginx-config
        persistentVolumeClaim:
          claimName: pvc-nginxconfig
      nodeSelector:
        kubernetes.io/hostname: cc6.com
---
apiVersion: v1
kind: Service
metadata:
  name: my-nginx
  namespace: nginx-space
  labels:
    run: my-nginx
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: my-nginx
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-vim-pv-pvc-imgyaml&#34;&gt;2. vim pv-pvc-img.yaml&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;kind: PersistentVolume
metadata:
  name: pv-img
  namespace: nginx-space
spec:
  capacity:
    storage: 500Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: &amp;quot;/root/img&amp;quot;

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-img
  namespace: nginx-space
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: &amp;quot;&amp;quot;
  resources:
    requests:
      storage: 500Mi
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;3-vim-etcnginxconfddefaultconf-nginx的配置文件-autoindex-on自动生成目录了&#34;&gt;3. vim etc/nginx/conf.d/default.conf, nginx的配置文件, autoindex on自动生成目录了.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;## For img
server {
    listen       80;
    server_name  img.actiger.com;

    location / {
        root   /usr/share/nginx/img;
        index  index.html index.htm;
        autoindex on;
        autoindex_localtime on;
        autoindex_exact_size off;
    }
    error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/img;
    }
}

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;4-vim-my-nginxyml-增加imgactigercom地址ingress-nginx转发的service上&#34;&gt;4. vim my-nginx.yml, 增加img.actiger.com地址ingress nginx转发的service上.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: nginx-space
  name: my-nginx
spec:
  tls:
  - hosts:
    - www.actiger.com
    secretName: ingress-secret
  - hosts:
    - actiger.com
    secretName: ingress-top-secret
  rules:
  - host: img.actiger.com
    http:
      paths:
      - backend:
          serviceName: my-nginx
          servicePort: 80
  - host: www.actiger.com
    http:
      paths:
      - backend:
          serviceName: my-nginx
          servicePort: 80
  - host: actiger.com
    http:
      paths:
      - backend:
          serviceName: my-nginx
          servicePort: 80

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;使用kubectl-apply--f-上面的yaml文件-即可&#34;&gt;使用kubectl apply -f 上面的yaml文件, 即可.&lt;/h4&gt;
&lt;h3 id=&#34;4-上传文件在服务器的rootimg目录下-即可在见面上访问到-右键链接复制地址-贴到markdown中就可以随意用了&#34;&gt;4. 上传文件在服务器的/root/img目录下, 即可在见面上访问到. 右键链接复制地址, 贴到markdown中就可以随意用了.&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://img.actiger.com/blog/&#34;&gt;img.actiger.com/blog/&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;如图&#34;&gt;如图&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://img.actiger.com/blog/tech/right-copy-link-address.png&#34; alt=&#34;CopyLinkAddress&#34;&gt;&lt;/p&gt;

    </description>
    </item>
    
    <item>
    <title>往哪走</title>
    <link>https://charles-one.github.io/actiger/blog/thought/%E5%BE%80%E5%93%AA%E8%B5%B0/</link>
    <pubDate>Sun, 30 Aug 2020 18:32:49 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/thought/%E5%BE%80%E5%93%AA%E8%B5%B0/</guid>
    <description>
        &lt;h3 id=&#34;生活要往哪走&#34;&gt;生活要往哪走&lt;/h3&gt;
&lt;h3 id=&#34;继续还是放弃&#34;&gt;继续还是放弃&lt;/h3&gt;
&lt;h3 id=&#34;永远都是个问题&#34;&gt;永远都是个问题&lt;/h3&gt;
&lt;h3 id=&#34;心里总是想着凭什么&#34;&gt;心里总是想着凭什么&lt;/h3&gt;
&lt;h3 id=&#34;迟早成仇人&#34;&gt;迟早成仇人&lt;/h3&gt;
&lt;h3 id=&#34;哎&#34;&gt;哎&amp;hellip;&lt;/h3&gt;

    </description>
    </item>
    
    <item>
    <title>C程序设计语言1.9字符数组示例</title>
    <link>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%801.9%E5%AD%97%E7%AC%A6%E6%95%B0%E7%BB%84%E7%A4%BA%E4%BE%8B/</link>
    <pubDate>Tue, 12 May 2020 21:25:26 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%801.9%E5%AD%97%E7%AC%A6%E6%95%B0%E7%BB%84%E7%A4%BA%E4%BE%8B/</guid>
    <description>
        &lt;h2 id=&#34;1-要求-程序读入一组文本行-并把最长的文本行打印出来&#34;&gt;1. 要求: 程序读入一组文本行, 并把最长的文本行打印出来.&lt;/h2&gt;
&lt;h2 id=&#34;2-分析&#34;&gt;2. 分析.&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;要做什么, 读取一行, 与最长行比较, 保存最长行, 读取完, 比较完了, 打印最长行.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;读取一行, 碰到换行符或EOF结束符是一行, 能读取的最大长度也是一行, 记录行的长度.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;循环内当前行长度与最大行长度比较, 当前行比最大行长, 最大行=当前行, 否则不变.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;循环结束后, 结束行与最大行比较, 结束行长度&amp;gt;最大行, 最大行=结束行.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打印最大行.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://img.actiger.com/blog/tech/1e9.c.png&#34; alt=&#34;思维导图&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-代码&#34;&gt;3. 代码.&lt;/h2&gt;
&lt;h4 id=&#34;1-为了结束循环-结束行的长度返回负数-负数比较时需要转为正数&#34;&gt;1. 为了结束循环, 结束行的长度返回负数. 负数比较时需要转为正数.&lt;/h4&gt;
&lt;h4 id=&#34;2-int数组中0表示结束-这个特殊需要记下&#34;&gt;2. int数组中&#39;\0&amp;rsquo;表示结束, 这个特殊需要记下.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
#include&amp;lt;stdio.h&amp;gt;
#include&amp;lt;stdlib.h&amp;gt;
#define MAXLINE 1000

int getLine(char line[], int maxline);
void copy(char to[], char from[], int maxline);
int main(){
    int index;
    int len;
    int max;
    max = 0;
    char line[MAXLINE];
    char maxlong[MAXLINE];
    while((len=getLine(line, MAXLINE)) &amp;gt; 0){
        if(len &amp;gt; max){
            max = len;
            copy(maxlong, line, MAXLINE);
        }
    }
    if(len&amp;lt;0){
        if(abs(len) &amp;gt; max){
            copy(maxlong, line, MAXLINE);
        }
    }
    for(index=0;maxlong[index] != &#39;\0&#39; &amp;amp;&amp;amp; index &amp;lt; MAXLINE; index++){
        printf(&amp;quot;%c&amp;quot;, maxlong[index]);
        if(index == MAXLINE - 1){
            printf(&amp;quot;test&amp;quot;);
        }
    }


    return 0;
}


int getLine(char line[], int maxline){
    int input, i;
    i = 0;
    while((input=getchar()) != EOF &amp;amp;&amp;amp;  input != &#39;\n&#39; &amp;amp;&amp;amp; i&amp;lt;maxline){
        line[i] = input;
        ++i;
    }
    if(i &amp;lt;= maxline -1){
        line[i] = &#39;\0&#39;;
    }

    if(input == EOF){
        return -i;
    }else{
        return i;
    }
}

void copy(char to[], char from[], int max){
    int i;
    for(i=0; i&amp;lt;max ;i++){
        to[i] = from[i];
    }
}


&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>C程序设计语言练习1-15</title>
    <link>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-15/</link>
    <pubDate>Thu, 23 Apr 2020 23:01:51 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-15/</guid>
    <description>
        &lt;h2 id=&#34;1-要求-重新编写12节中的测试计划转换程序-使用函数实现温度转换计算&#34;&gt;1. 要求: 重新编写1.2节中的测试计划转换程序, 使用函数实现温度转换计算.&lt;/h2&gt;
&lt;h2 id=&#34;2-分析&#34;&gt;2. 分析.&lt;/h2&gt;
&lt;h3 id=&#34;1-c--5--9-f---32&#34;&gt;1. C = (5 / 9) (F - 32)&lt;/h3&gt;
&lt;h3 id=&#34;2-华氏温度与摄氏温度都是整数-故输入是整数-输出也是整数&#34;&gt;2. 华氏温度与摄氏温度都是整数, 故输入是整数, 输出也是整数.&lt;/h3&gt;
&lt;h2 id=&#34;3-代码&#34;&gt;3. 代码.&lt;/h2&gt;
&lt;h3 id=&#34;1-整数&#34;&gt;1. 整数.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;
// 华氏温度转摄氏温度
int transfc(int f);
int main(){
    int i;
    for(i=0;i&amp;lt;=300;i=i+20){
        printf(&amp;quot;%-3d %-3d\n&amp;quot;, i, transfc(i));
    }
    return 0;
}

int transfc(int f){
    return (f - 32) * 5 / 9;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-补充double数&#34;&gt;2. 补充double数.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;
// 华氏温度转摄氏温度
double transfc(double f);
int main(){
    double i;
    for(i=0;i&amp;lt;=300;i=i+20){
        printf(&amp;quot;%-3.1f %-3.1f\n&amp;quot;, i, transfc(i));
    }
    return 0;
}

double transfc(double f){
    return (f - 32.0) * 5.0 / 9.0;
}

&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>C程序设计语言练习1-14</title>
    <link>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-14/</link>
    <pubDate>Wed, 22 Apr 2020 22:39:05 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-14/</guid>
    <description>
        &lt;h2 id=&#34;1-要求-编写一个程序-打印输入中各个字符出现频度的直方图&#34;&gt;1. 要求: 编写一个程序, 打印输入中各个字符出现频度的直方图.&lt;/h2&gt;
&lt;h2 id=&#34;2-分析&#34;&gt;2. 分析.&lt;/h2&gt;
&lt;h3 id=&#34;一输入部分&#34;&gt;一.输入部分:&lt;/h3&gt;
&lt;h4 id=&#34;1-统计什么样的字符-这里就统计ascii表中可显示字符-查询ascii表可显示字符知-字符-32126是可见的-共95个&#34;&gt;1. 统计什么样的字符? 这里就统计ASCII表中可显示字符, 查询ASCII表可显示字符知, 字符 32~126是可见的, 共95个.&lt;/h4&gt;
&lt;h4 id=&#34;2-使用一维数组来计数&#34;&gt;2. 使用一维数组来计数.&lt;/h4&gt;
&lt;h4 id=&#34;3-不在32126中的字符-单独统计到sum中&#34;&gt;3. 不在32~126中的字符, 单独统计到sum中.&lt;/h4&gt;
&lt;h4 id=&#34;4-超出最大个数则用h打印出&#34;&gt;4. 超出最大个数则用H打印出.&lt;/h4&gt;
&lt;h3 id=&#34;二输出部分&#34;&gt;二.输出部分:&lt;/h3&gt;
&lt;h4 id=&#34;1-水平直方图-每行进行判断-字符统计个数hist-打印字符和字符统计个数的-字符统计个数hist-打印h&#34;&gt;1. 水平直方图, 每行进行判断, 字符统计个数&amp;lt;=HIST, 打印字符和字符统计个数的*, 字符统计个数&amp;gt;HIST, 打印H.&lt;/h4&gt;
&lt;h4 id=&#34;2-垂直直方图-每行进行判断&#34;&gt;2. 垂直直方图, 每行进行判断.&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;字符统计个数&amp;lt;=HIST(能统计的最大数), HIST-字符统计个数&amp;gt;当前行row, 打印空格, HIST-字符统计个数&amp;lt;=当前行row, 打印*号.&lt;/li&gt;
&lt;li&gt;字符统计个数&amp;gt;HIST(能统计的最大数), 最后一行MAX-1(因为数组0开始数, 最后一行MAX-1)打印H, 其余打印空格.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;3-代码&#34;&gt;3. 代码.&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;
#include&amp;lt;stdio.h&amp;gt;
#define MAX 95
#define HIST 20
int main(){
    int input;
    int a[MAX];
    int sum, row, col;
    sum = 0;
    for(row=0;row&amp;lt;MAX;row++){
        a[row] = 0;
    }
    while( (input=getchar()) != EOF ){
        if(input&amp;gt;=32 &amp;amp;&amp;amp; input &amp;lt;=126){
            a[(input-32)]++;
        }else{
            sum++;
        }
    }

    printf( &amp;quot;H MEANS OVER HIST%d\n&amp;quot;, HIST );
    for(row=0;row&amp;lt;MAX;row++){
        printf(&amp;quot;%c&amp;quot;, (row+32));
        if(a[row]&amp;lt;=HIST){
            for(col=0;col&amp;lt;a[row];col++){
                printf(&amp;quot;*&amp;quot;);
            }
        }else{
            printf(&amp;quot;H&amp;quot;);
        }
        printf(&amp;quot;\n&amp;quot;);
    }

    for(row=0;row&amp;lt;HIST;row++){
        for(col=0;col&amp;lt;MAX;col++){
            if(a[col] &amp;lt;= HIST){
                if(HIST-a[col]&amp;gt; row ){
                    printf(&amp;quot;  &amp;quot;);
                }else{
                    printf(&amp;quot; *&amp;quot;);
                }
            }else if(a[col]&amp;gt;HIST &amp;amp;&amp;amp; row != (HIST-1)){
                printf(&amp;quot;  &amp;quot;);
            }else if(a[col] &amp;gt; HIST &amp;amp;&amp;amp; row == (HIST -1)){
                printf(&amp;quot; H&amp;quot;);
            }
        }
        printf(&amp;quot;\n&amp;quot;);
    }
    for(row=0;row&amp;lt;MAX;row++){
            printf(&amp;quot;%2c&amp;quot;, (row+32));
    }
    printf(&amp;quot;\n%d个不属于可见字符\n&amp;quot;, sum);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>C程序设计语言练习1-13</title>
    <link>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-13/</link>
    <pubDate>Wed, 15 Apr 2020 15:21:54 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-13/</guid>
    <description>
        &lt;h3 id=&#34;1-要求-编写一个程序-打印输入中单词长度的直方图-水平方向的直方图学校录取容易绘制-垂直方向的直方图则要困难些&#34;&gt;1. 要求: 编写一个程序, 打印输入中单词长度的直方图. 水平方向的直方图学校录取容易绘制, 垂直方向的直方图则要困难些.&lt;/h3&gt;
&lt;h3 id=&#34;2-水平直方图和垂直直方图&#34;&gt;2. 水平直方图和垂直直方图.&lt;/h3&gt;
&lt;h4 id=&#34;1-水平方向的直方图&#34;&gt;1. 水平方向的直方图:&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;清楚直方图的定义: 又称质量分布图，是一种统计报告图，由一系列高度不等的纵向条纹或线段表示数据分布的情况。 一般用横轴表示数据类型，纵轴表示分布情况.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单词长度的直方图, 就是打印输入单词的长度.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;水平方向的, 容易, 打印这个单词的长度就可以.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;需要注意: 单词组成的字符个数不能超过MAXHIST20位, 暂时可以这么定义, 超出这20位用X表示.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;统计单词的数量MAXWORDS最多15个, 使用数组来存储单词长度.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;读取单词的字符长度练习1-12更改下即可得到.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-垂直直图&#34;&gt;2. 垂直直图.&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用数组来存单词长度&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;说明打印规则, 在第0行时, w1列打印空格还是*号, 取决于(HIST-w1长度) 和 当前行row比较, 大于当前行则打印空格, 小于等于则打印*号.
为何从0开始, 数组是从0开始. 下面举例HIST是4, w3单词的长度是2, 在第0行时, w1列是, 4-2 &amp;gt;0 则打印空格.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;考虑到有些单词长度可能超出限制,如果有则打印X, 判断逻辑(单词长度&amp;gt;HIST) &amp;amp;&amp;amp; 当前不在(row-1)行打印空格, 否则打印X.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为防止数组越界, 需要if(sum&amp;lt;MAXWORDS), 在单词数组内才进行计算字符数.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;row
0
1        *
2  *  *  *
3  *  *  *  X
  w1 w2 w3 w4  (col)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-代码&#34;&gt;3. 代码.&lt;/h3&gt;
&lt;h4 id=&#34;1-随便统计了多少个单词-可计算出多少个单词未打印&#34;&gt;1. 随便统计了多少个单词, 可计算出多少个单词未打印.&lt;/h4&gt;
&lt;h4 id=&#34;2-clion-signal-sigabrt-错误-一般是数组越界&#34;&gt;2. clion Signal: SIGABRT 错误, 一般是数组越界.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
#include &amp;lt;stdio.h&amp;gt;
#define MAXHIST 20
#define MAXWORDS 15
#define IN 1
#define OUT 0
int main()
{
    int a[MAXWORDS];
    int input;
    int sum; // 单词个数
    int row; // 行
    int col; // 列
    int flag;
    row = col = sum = 0;
    flag = OUT;
    for(row=0;row&amp;lt;MAXWORDS;row++){
        a[row] = 0;
    }
    while( (input=getchar()) != EOF){
        if(input != &#39; &#39; &amp;amp;&amp;amp; input != &#39;\n&#39; &amp;amp;&amp;amp; input != &#39;\t&#39;){
            flag = IN;
            if(sum&amp;lt;MAXWORDS){
                a[sum] ++;
                if(a[sum] &amp;gt; MAXHIST){
                    continue;
                }
            }else{
                continue;
            }
        }else{
            if(flag == IN){
                flag = OUT;
                sum ++;
                continue;
            }
            else{
                continue;
            }
        }
    }

    for(row=0;row&amp;lt;MAXWORDS;row++){
        if(row == 0){
            printf(&amp;quot;开始打印最多前15个单词的直方图\n&amp;quot;);
        }
        printf(&amp;quot;%3d|&amp;quot;, row+1);
        for(col=0;col&amp;lt;a[row];col++){
            if(a[row] &amp;gt; MAXHIST){
                printf(&amp;quot;X&amp;quot;);
                break;
            }
            printf( &amp;quot;-&amp;quot; );
        }
        printf(&amp;quot;\n&amp;quot;);
        if(row == ( MAXWORDS-1 )){
            printf( &amp;quot;ALIAS: X MEANS THIS WORD OVER MAXHIST%d\n&amp;quot;, MAXHIST );
        }
    }
    if(sum &amp;gt; 15){
        printf( &amp;quot;还有%d个单词未打印出直方图\n&amp;quot;,sum-15 );
    }

    for(row=0;row&amp;lt;MAXHIST;row++){
        if(row == 0){
            printf(&amp;quot;开始打印最多前15个单词的直方图\n&amp;quot;);
        }
        for(col=0;col&amp;lt;MAXWORDS;col++){
            if(a[col]&amp;gt;MAXHIST &amp;amp;&amp;amp; row != (MAXHIST-1)){
                printf(&amp;quot;   &amp;quot;);
            }else if(a[col] &amp;gt; MAXHIST &amp;amp;&amp;amp; row == (MAXHIST -1)){
                printf(&amp;quot;  X&amp;quot;);
            }else if(a[col] &amp;lt;= MAXHIST){
                if(MAXHIST-a[col]&amp;gt; row ){
                    printf(&amp;quot;   &amp;quot;);
                }else{
                    printf(&amp;quot;  *&amp;quot;);
                }
            }
        }
        printf(&amp;quot;\n&amp;quot;);
    }
    for(row=0;row&amp;lt;MAXWORDS;row++){
        /*printf(&amp;quot;hello&amp;quot;);*/
        printf(&amp;quot;%3d&amp;quot;, row+1);
    }

    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>C程序设计语言练习1-12</title>
    <link>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-12/</link>
    <pubDate>Sat, 11 Apr 2020 23:44:24 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-12/</guid>
    <description>
        &lt;h2 id=&#34;1-要求-编写一个程序-以每行一个单词的形式打印其输入&#34;&gt;1. 要求: 编写一个程序, 以每行一个单词的形式打印其输入.&lt;/h2&gt;
&lt;h2 id=&#34;2-分析&#34;&gt;2. 分析.&lt;/h2&gt;
&lt;h3 id=&#34;1-在每个单词的结尾处换行-单词结尾的判断-即前一个字符即不是空格-制表符-也不是换行符后面跟着空格或制表符或换行符&#34;&gt;1. 在每个单词的结尾处换行, 单词结尾的判断, 即前一个字符即不是空格, 制表符, 也不是换行符,后面跟着空格或制表符或换行符.&lt;/h3&gt;
&lt;h3 id=&#34;2-在遇到不是空格不是制表符-不是换行符时输出-设置标记为1&#34;&gt;2. 在遇到不是空格,不是制表符, 不是换行符时输出, 设置标记为1;&lt;/h3&gt;
&lt;h3 id=&#34;3-遇到空格或制表符或换行符时-同时判断标记&#34;&gt;3. 遇到空格或制表符或换行符时, 同时判断标记&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;标记是1则打印换行符(\n), 重置标记位为0.&lt;/li&gt;
&lt;li&gt;标记是0(表示上一个输入字符是空格或制表符或换行符)则不处理, 什么也不打印.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;3-代码&#34;&gt;3. 代码&lt;/h2&gt;
&lt;h4 id=&#34;注意-在执行的时候每次回车都是输入-程序在while就开始循环判断-同时打印数据-c程序设计语言练习1-12之前的习题则在eof之后才打印&#34;&gt;注意: 在执行的时候每次回车都是输入, 程序在while就开始循环判断, 同时打印数据. C程序设计语言练习1-12之前的习题则在EOF之后才打印.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;

#define IN 1
#define OUT 0

int main(){
    int c, state;
    state = OUT;
    while( (c= getchar() ) !=EOF ){
        if( c != &#39; &#39; &amp;amp;&amp;amp; c != &#39;\t&#39; &amp;amp;&amp;amp; c != &#39;\n&#39;){
            putchar(c);
            state = IN;
        }else if( ( c == &#39; &#39; || c == &#39;\t&#39; || c != &#39;\n&#39;) &amp;amp;&amp;amp; IN == state ){
            state = OUT;
            printf(&amp;quot;\n&amp;quot;);
        }else if( ( c == &#39; &#39; || c == &#39;\t&#39; || c != &#39;\n&#39;) &amp;amp;&amp;amp; OUT == state ){
            continue;
        }
    }
    return 0;
}

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;可简化写为&#34;&gt;可简化写为.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;

#define IN 1
#define OUT 0

int main(){
    int c, state;
    state = OUT;
    while( (c= getchar() ) !=EOF ){
        if( c != &#39; &#39; &amp;amp;&amp;amp; c != &#39;\t&#39; &amp;amp;&amp;amp; c != &#39;\n&#39;){
            putchar(c);
            state = IN;
        }else if( IN == state ){
            state = OUT;
            printf(&amp;quot;\n&amp;quot;);
        }
    }
    return 0;
}

&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>C程序设计语言练习1-10</title>
    <link>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-10/</link>
    <pubDate>Sat, 11 Apr 2020 15:06:58 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-10/</guid>
    <description>
        &lt;h2 id=&#34;1-要求-编写一个将输入复制到全输出的程序-并将其中的制表符替换为t-将回退符替换为b-将反斜杠替换为-这样可以将制表符和回退符以可见的方式显示出来&#34;&gt;1. 要求: 编写一个将输入复制到全输出的程序, 并将其中的制表符替换为\t, 将回退符替换为\b, 将反斜杠替换为\. 这样可以将制表符和回退符以可见的方式显示出来&lt;/h2&gt;
&lt;h2 id=&#34;2-分析&#34;&gt;2. 分析:&lt;/h2&gt;
&lt;h4 id=&#34;1-制表符是t-输出是t-反斜杠的输入输出2个-那输出是&#34;&gt;1. 制表符是\t, 输出是\\t, 反斜杠的输入\输出2个\, 那输出是\\\\.&lt;/h4&gt;
&lt;h2 id=&#34;3-代码&#34;&gt;3. 代码.&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;
#include&amp;lt;stdio.h&amp;gt;
int main(){
    int input;
    while((input=getchar()) != EOF){
        if(input == &#39;\\&#39;){
            printf(&amp;quot;\\\\&amp;quot;);
        }else if(input == &#39;\t&#39;){
            printf(&amp;quot;\\t&amp;quot;);
        }else if(input == &#39;\b&#39;){
            printf(&amp;quot;\\b&amp;quot;);
        }else{
            putchar(input);
        }
    }
    return 0;
}

&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>C程序设计语言练习1-9</title>
    <link>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-9/</link>
    <pubDate>Fri, 10 Apr 2020 12:28:11 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-9/</guid>
    <description>
        &lt;h2 id=&#34;1-要求-编写一个输入复制到输出的程序-将其中多个空格用一个空格代替&#34;&gt;1. 要求: 编写一个输入复制到输出的程序, 将其中多个空格用一个空格代替.&lt;/h2&gt;
&lt;h2 id=&#34;2-分析&#34;&gt;2. 分析.&lt;/h2&gt;
&lt;h4 id=&#34;1-比较前一个字符和当前字符如果同为空格--则不打印-否则打印&#34;&gt;1. 比较前一个字符和当前字符如果同为空格(&#39; &amp;lsquo;), 则不打印, 否则打印.&lt;/h4&gt;
&lt;h2 id=&#34;3-代码&#34;&gt;3. 代码.&lt;/h2&gt;
&lt;h4 id=&#34;1-a的上一个字符可设默认一个非空格字符-方便判断&#34;&gt;1. a的上一个字符可设默认一个非空格字符, 方便判断.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;
int main(){
    int a, alast;
    alast=0;
    while((a=getchar()) !=EOF){
        if(a==&#39; &#39; &amp;amp;&amp;amp; alast ==&#39; &#39;){
            continue;
        }
        else{
            putchar(a);
        }
        alast = a;
    }
}

&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>C程序设计语言练习1-8</title>
    <link>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-8/</link>
    <pubDate>Thu, 09 Apr 2020 23:56:23 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-8/</guid>
    <description>
        &lt;h2 id=&#34;1-要求-编写一个统计空格制表符与换行符个数的程序&#34;&gt;1. 要求: 编写一个统计空格,制表符与换行符个数的程序&lt;/h2&gt;
&lt;h2 id=&#34;2-分析&#34;&gt;2. 分析.&lt;/h2&gt;
&lt;h4 id=&#34;1-使用getchar获取输入的字符&#34;&gt;1. 使用getchar()获取输入的字符&lt;/h4&gt;
&lt;h4 id=&#34;2-判断输入的符-查询ascii对照表-空格ascii值32也可使用--制表符t-换行n&#34;&gt;2. 判断输入的符. 查询ASCII对照表, 空格ASCII值32(也可使用&#39; &amp;lsquo;). 制表符&amp;rsquo;\t&#39;, 换行&#39;\n&#39;.&lt;/h4&gt;
&lt;h2 id=&#34;3-代码&#34;&gt;3. 代码&lt;/h2&gt;
&lt;h4 id=&#34;1-想输入eof-linux是按ctrl--d组合键2次-windows-ctrl--z&#34;&gt;1. 想输入EOF, linux是按Ctrl + D组合键2次, windows Ctrl + Z,&lt;/h4&gt;
&lt;h4 id=&#34;2-else-if的条件成立就进行下一次循环-如果3个if条件程序判断3次-没有效率&#34;&gt;2. else if的条件成立就进行下一次循环, 如果3个if条件程序判断3次, 没有效率.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
#include&amp;lt;stdio.h&amp;gt;
int main(){
    int sumspace = 0;
    int sumt = 0;
    int sumn = 0;
    int c ;
    while( (c = getchar()) != EOF ){
        if( c == 32){
            sumspace++;
        }
        else if(c == &#39;\t&#39;){
            sumt++;
        }
        else if(c == &#39;\n&#39;){
            sumn++;
        }
    }
    printf(&amp;quot;空格数%d 制表符数%d 换行符数%d\n&amp;quot;, sumspace, sumt, sumn);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>C程序设计语言练习1-7</title>
    <link>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-7/</link>
    <pubDate>Thu, 09 Apr 2020 23:34:43 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-7/</guid>
    <description>
        &lt;h2 id=&#34;1-要求-编写一个打印eof值的程序&#34;&gt;1. 要求: 编写一个打印EOF值的程序&lt;/h2&gt;
&lt;h2 id=&#34;2-分析&#34;&gt;2. 分析&lt;/h2&gt;
&lt;h4 id=&#34;1-查询得到eof的值是-1-帮用d即可打印出来&#34;&gt;1. 查询得到EOF的值是-1, 帮用%d即可打印出来&lt;/h4&gt;
&lt;h2 id=&#34;3-代码&#34;&gt;3. 代码&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;
int main(){
    printf(&amp;quot;EOF is %d\n&amp;quot;, EOF);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>C程序设计语言练习1-6</title>
    <link>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-6/</link>
    <pubDate>Thu, 09 Apr 2020 23:15:05 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-6/</guid>
    <description>
        &lt;h2 id=&#34;1-要求-验证表达式getchar--eof的值是0还是1&#34;&gt;1. 要求: 验证表达式getchar() != EOF的值是0还是1&lt;/h2&gt;
&lt;h2 id=&#34;2-分析&#34;&gt;2. 分析.&lt;/h2&gt;
&lt;h4 id=&#34;1-getchar是获取一个输入字符-判断是否为输入结尾-结尾特定eofend-of-file&#34;&gt;1. getchar()是获取一个输入字符, 判断是否为输入结尾, 结尾特定EOF(End of File)&lt;/h4&gt;
&lt;h4 id=&#34;2-linux中在新的一行的开头按下ctrl-d就代表eof如果在一行的中间按下ctrl-d则表示输出标准输入的缓存区所以这时必须按两次ctrl-dwindows中ctrl-z表示eof顺便提一句linux中按下ctrl-z表示将该进程中断在后台挂起用fg命令可以重新切回到前台按下ctrl-c表示终止该进程&#34;&gt;2. Linux中，在新的一行的开头，按下Ctrl-D，就代表EOF（如果在一行的中间按下Ctrl-D，则表示输出&amp;quot;标准输入&amp;quot;的缓存区，所以这时必须按两次Ctrl-D）；Windows中，Ctrl-Z表示EOF。（顺便提一句，Linux中按下Ctrl-Z，表示将该进程中断，在后台挂起，用fg命令可以重新切回到前台；按下Ctrl-C表示终止该进程。）&lt;/h4&gt;
&lt;h2 id=&#34;3-代码&#34;&gt;3. 代码&lt;/h2&gt;
&lt;h4 id=&#34;1-注意a--getchare--eof与a--getchar--eof等价-原因是是赋值-比的优先级高-就像四则运算号的优先级比号高一样&#34;&gt;1. 注意a = getchare() != EOF与a = (getchar() != EOF)等价, 原因是=是赋值, !=比=的优先级高, 就像四则运算/号的优先级比+号高一样.&lt;/h4&gt;
&lt;h4 id=&#34;2-while的判断到eof时会中止执行-里面语句不会执行-故需要在外部打印getchar--eof的值&#34;&gt;2. while的判断到EOF时会中止执行, 里面语句不会执行, 故需要在外部打印getchar() != EOF的值.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
#include&amp;lt;stdio.h&amp;gt;
int main(){
    int a ;
    while(a = (getchar() != EOF)){
        printf(&amp;quot;%d\n&amp;quot;, a);
    }
    printf(&amp;quot;%d\n&amp;quot;, a);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>C程序设计语言练习1-4</title>
    <link>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-4/</link>
    <pubDate>Thu, 09 Apr 2020 22:51:12 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/c/c%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A01-4/</guid>
    <description>
        &lt;h2 id=&#34;1-要求-编写一个程序打印摄氏温度转换为相应华氏温度的转换表&#34;&gt;1. 要求: 编写一个程序打印摄氏温度转换为相应华氏温度的转换表.&lt;/h2&gt;
&lt;h2 id=&#34;2-分析&#34;&gt;2. 分析.&lt;/h2&gt;
&lt;h4 id=&#34;1-由c--59f-32得到f--c9532&#34;&gt;1. 由C = (5/9)(F-32)得到F = C(9/5)+32&lt;/h4&gt;
&lt;h4 id=&#34;2-c摄氏和f华氏温度都有小数-可使用float&#34;&gt;2. C摄氏和F华氏温度都有小数, 可使用float&lt;/h4&gt;
&lt;h2 id=&#34;3-代码&#34;&gt;3. 代码&lt;/h2&gt;
&lt;h4 id=&#34;注意事项-61f表示6个数字宽右对齐且保留1位小数&#34;&gt;注意事项: %6.1f表示6个数字宽右对齐且保留1位小数&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){
    &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; f;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; c;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; minc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; maxc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;;
    c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; minc;
    printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;摄氏温度转换华氏度&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;( c &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; maxc ){
        f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;;
        printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%3.0f %6.1f&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, c, f);
        c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; c &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; step;
    }
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    </description>
    </item>
    
    <item>
    <title>不准确的01-浮点数</title>
    <link>https://charles-one.github.io/actiger/blog/c/%E4%B8%8D%E5%87%86%E7%A1%AE%E7%9A%8401-%E6%B5%AE%E7%82%B9%E6%95%B0/</link>
    <pubDate>Tue, 03 Mar 2020 11:57:04 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/c/%E4%B8%8D%E5%87%86%E7%A1%AE%E7%9A%8401-%E6%B5%AE%E7%82%B9%E6%95%B0/</guid>
    <description>
        &lt;h3 id=&#34;1-整数时-二进制与十进制可准确转换-小数时与二进制转换起来情况就复杂了-二进制不能准确表示某些十进制的小数&#34;&gt;1. 整数时, 二进制与十进制可准确转换, 小数时与二进制转换起来情况就复杂了, 二进制不能准确表示某些十进制的小数.&lt;/h3&gt;
&lt;h3 id=&#34;2-整数-二进制与十进制转换-整数转换规则-除2-得商和余数-商除2得商和余数-直到商为0&#34;&gt;2. 整数, 二进制与十进制转换. 整数转换规则: 除2, 得商和余数, 商除2得商和余数, 直到商为0.&lt;/h3&gt;
&lt;h4 id=&#34;以125为例-十进制转换为二进制&#34;&gt;以125为例, 十进制转换为二进制.&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数&lt;/th&gt;
&lt;th&gt;商&lt;/th&gt;
&lt;th&gt;余数&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;125/2&lt;/td&gt;
&lt;td&gt;62&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;62/2&lt;/td&gt;
&lt;td&gt;31&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;31/2&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15/2&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7/2&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3/2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1/2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;由个位数向前除得最高位数&#34;&gt;由个位数向前除得最高位数.&lt;/h4&gt;
&lt;h4 id=&#34;1251x20--0x21--1x22--1x23--1x24--1x25--1x26得到二进制数1111101&#34;&gt;125=1x2^0 + 0x2^1 + 1x2^2 + 1x2^3 + 1x2^4 + 1x2^5 + 1x2^6得到二进制数1111101&lt;/h4&gt;
&lt;h3 id=&#34;3-有小数-十里与十进制转换-小数转换规则-乘2-如有整数-去除整数-小数再乘以2-直到小数部分为0或小数部分与原始小数部分相等为止&#34;&gt;3. 有小数, 十里与十进制转换. 小数转换规则: 乘2, 如有整数, 去除整数, 小数再乘以2, 直到小数部分为0或小数部分与原始小数部分相等为止.&lt;/h3&gt;
&lt;h4 id=&#34;补充下以float为例-8b即32b-从左到右-1b符号位ssign-8b指数位eexponent-23b尾数位或称系数位significand&#34;&gt;补充下以float为例, 8B即32b, 从左到右, 1b符号位S(Sign), 8b指数位E(Exponent), 23b尾数位(或称系数位Significand)&lt;/h4&gt;
&lt;h4 id=&#34;float-首位是1-默认不存储-提高一位精度-节省空间-实际截取尾数对应着二进制中第2-24位-从第25位开始舍弃-如果25位是1时24位1-0则直接舍弃&#34;&gt;float, 首位是1, 默认不存储, 提高一位精度, 节省空间, 实际截取尾数对应着二进制中第2-24位, 从第25位开始舍弃, 如果25位是1时24位+1, 0则直接舍弃.&lt;/h4&gt;
&lt;h4 id=&#34;特殊情况上一步24位1后-进位溢出即出现类似111-1111-1111-1111-1111-1111-1-111情况-1000-0000-0000-0000-0000-0-则需要向右移-舍弃当前24位100-0000-0000-0000-0000-0-同时指数e1&#34;&gt;特殊情况上一步24位+1后, 进位溢出即(出现类似1.11 1111 1111 1111 1111 1111 1 111情况, 10.00 0000 0000 0000 0000 0), 则需要向右移, 舍弃当前24位1.00 0000 0000 0000 0000 0, 同时指数E+1&lt;/h4&gt;
&lt;h4 id=&#34;例一-075的二进制&#34;&gt;例一. 0.75的二进制.&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数&lt;/th&gt;
&lt;th&gt;整数部分&lt;/th&gt;
&lt;th&gt;小数部分&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0.75*2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;05*2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;ieee754表示法07510--11--11-x-2-1-075括号外的10在右下角&#34;&gt;IEEE754表示法(+0.75)10 = .11 = 1.1 x 2^-1. (0.75括号外的10在右下角)&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;
符号位部分0(正数)
指数位计算, E-127=-1, 帮E就是126, 0111 1110
尾数位计算, 110 0000 0000 0000 0000 0000, 去除第1位的1, 100 0000 0000 0000 0000 0000

&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;075浮点数在内存中表示0-0111-1110-100-0000-0000-0000-0000-0000-再整理下得到0011-1111-0100-0000-0000-0000-0000-0000&#34;&gt;0.75浮点数在内存中表示0 0111 1110 100 0000 0000 0000 0000 0000, 再整理下得到0011 1111 0100 0000 0000 0000 0000 0000&lt;/h5&gt;
&lt;h4 id=&#34;例二-32的二进制&#34;&gt;例二. 3.2的二进制.&lt;/h4&gt;
&lt;h5 id=&#34;整数3部分&#34;&gt;整数3部分&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数&lt;/th&gt;
&lt;th&gt;商&lt;/th&gt;
&lt;th&gt;余数&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;3/2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1/2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;小数02部分&#34;&gt;小数0.2部分&lt;/h5&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数&lt;/th&gt;
&lt;th&gt;整数部分&lt;/th&gt;
&lt;th&gt;小数部分&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0.2*2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.4*2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0.8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.8*2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.6*2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0.2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;32-二进制110011-二进制计算-1x21--1x20--0x2-1--0x2-2--1x2-3--1x2-4--31875并不是32&#34;&gt;3.2 二进制11.0011, 二进制计算 1x2^1 + 1x2^0 + 0x2^-1 + 0x2^-2 + 1x2^-3 + 1x2^-4 = 3.1875并不是3.2.&lt;/h5&gt;
&lt;h5 id=&#34;实际在110011后-循环11001100110011直到用完所有指数&#34;&gt;实际在11.0011后, 循环11.001100110011&amp;hellip;直到用完所有指数&lt;/h5&gt;
&lt;h5 id=&#34;32--1100110011--21&#34;&gt;3.2 = 1.100110011&amp;hellip; * 2^1&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;符号位计算0(正数)

指数位计算, E-127=1, E=128, 1000 0000

尾数位计算, 110 0110 0110 0110 0110 0110 0110 0110 01
去除第1位的1, 第24位是0, 第25位是1,故应 100 1100 1100 1100 1100 1101

&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;32浮点在内存表示-0-1000-0000-100-1100-1100-1100-1100-1100-再整理下-0100-0000-0100-1100-1100-1100-1100-1100&#34;&gt;3.2浮点在内存表示, 0 1000 0000 100 1100 1100 1100 1100 1100, 再整理下, 0100 0000 0100 1100 1100 1100 1100 1100.&lt;/h5&gt;
&lt;h5 id=&#34;计算1100-1100-1100-1100-1100-1101--32-32-42-72-82-112-122-152-162-192-202-22--3200000048&#34;&gt;计算1.100 1100 1100 1100 1100 1101 = 3+2^-3+2^-4+2^-7+2^-8+2^-11+2^-12+2^-15+2^-16+2^-19+2^-20+2^-22 = 3.200000048&lt;/h5&gt;
&lt;h3 id=&#34;看浮点是不准确的01&#34;&gt;看!浮点是不准确的01.&lt;/h3&gt;

    </description>
    </item>
    
    <item>
    <title>acme.sh获取域名并自动更新到kubernetes中</title>
    <link>https://charles-one.github.io/actiger/blog/linux/acmesh%E8%8E%B7%E5%8F%96%E5%9F%9F%E5%90%8D%E5%B9%B6%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E5%88%B0kubernetes%E4%B8%AD/</link>
    <pubDate>Mon, 10 Feb 2020 10:06:11 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/acmesh%E8%8E%B7%E5%8F%96%E5%9F%9F%E5%90%8D%E5%B9%B6%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E5%88%B0kubernetes%E4%B8%AD/</guid>
    <description>
        &lt;h3 id=&#34;0-原因letsencrypt获取的证书只有3个月有效期-每次手动更新易出错也会忘记-所以使用crontab定时acmesh定时更新最好不过了&#34;&gt;0. 原因letsencrypt获取的证书只有3个月有效期, 每次手动更新易出错也会忘记, 所以使用crontab定时acme.sh定时更新最好不过了.&lt;/h3&gt;
&lt;h5 id=&#34;放下文章结构&#34;&gt;放下文章结构&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://img.actiger.com/blog/tech/acmesh-autoupdate-kubernetes-cert.png&#34; alt=&#34;图片&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-安装acmesh-a-hrefhttpsgithubcomacmesh-officialacmeshwiki说明-target_blankacmesh官网中文链接a&#34;&gt;1. 安装acme.sh, &lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/说明&#34; target=&#34;_blank&#34;&gt;acme.sh官网中文链接&lt;/a&gt;.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# 推荐使用root用户, 后续也以root用户操作的.
curl  https://get.acme.sh | sh
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-使用acmesh的dns方式-这里服务商以cloudflare为例&#34;&gt;2. 使用acme.sh的dns方式, 这里服务商以cloudflare为例.&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;域名使用cloudflare解析(注册cloudflare官方教程更换域名), 拿到Global API Key和邮箱.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/acmesh-official/acme.sh/wiki/dnsapi&#34; target=&#34;_blank&#34;&gt;参照官方教程中cloudflare部分&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# Global API Key和邮箱

export CF_Key=&amp;quot;cloudflare设置中的Global API Key&amp;quot;
export CF_Email=&amp;quot;cloudflare注册邮箱&amp;quot;

# 首次生成域名证书(\*号需要转译)
/root/.acme.sh/acme.sh --issue --dns dns_cf -d \*.actiger.com

TLSCRT=$(cat /root/.acme.sh/\*.actiger.com/\*.actiger.com.cer)

TLSKEY=$(cat /root/.acme.sh/\*.actiger.com/\*.actiger.com.key)

# base64转换

ACTIGER_TLSCRT=$(echo &amp;quot;${TLSCRT}&amp;quot;|base64 -w 10000)

ACTIGER_TLSKEY=$(echo &amp;quot;${TLSKEY}&amp;quot;|base64 -w 10000)

# 生成新的secret.

FILE_ACTIGER=&amp;quot;/root/kubernetes/pro-blog-cc6/ingress-secret.yml&amp;quot;

cat &amp;lt;&amp;lt; EOF | tee ${FILE_ACTIGER}
apiVersion: v1
data:
  tls.crt: ${ACTIGER_TLSCRT}
  tls.key: ${ACTIGER_TLSKEY}
kind: Secret
metadata:
  name: ingress-secret
  namespace: nginx-space
type: Opaque
EOF

# 生效
cd /root/kubernetes/pro-blog-cc6/ &amp;amp;&amp;amp; kubectl apply -f ingress-secret.yml

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-自动更新证书脚本&#34;&gt;3. 自动更新证书脚本.&lt;/h3&gt;
&lt;h4 id=&#34;vim-rootautoupdatecertsh-脚本内容&#34;&gt;vim /root/autoupdatecert.sh, 脚本内容.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;/root/.acme.sh/acme.sh --cron

TLSCRT=$(cat /root/.acme.sh/\*.actiger.com/\*.actiger.com.cer)

TLSKEY=$(cat /root/.acme.sh/\*.actiger.com/\*.actiger.com.key)


ACTIGER_TLSCRT=$(echo &amp;quot;${TLSCRT}&amp;quot;|base64 -w 10000)

ACTIGER_TLSKEY=$(echo &amp;quot;${TLSKEY}&amp;quot;|base64 -w 10000)

# kubernetes中secret在该位置
FILE_ACTIGER=&amp;quot;/root/kubernetes/pro-blog-cc6/ingress-secret.yml&amp;quot;

cat &amp;lt;&amp;lt; EOF | tee ${FILE_ACTIGER}
apiVersion: v1
data:
  tls.crt: ${ACTIGER_TLSCRT}
  tls.key: ${ACTIGER_TLSKEY}
kind: Secret
metadata:
  name: ingress-secret
  namespace: nginx-space
type: Opaque
EOF

cd /root/kubernetes/pro-blog-cc6/ &amp;amp;&amp;amp; kubectl apply -f ingress-secret.yml

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-添加到定时任务中-每月1号和15号尝试更新证书-可参考-a-hrefhttpsactigercombloglinuxcrontab定时任务-target_blankcrontab用法a&#34;&gt;4. 添加到定时任务中, 每月1号和15号尝试更新证书, 可参考 &lt;a href=&#34;https://actiger.com/blog/linux/crontab定时任务/&#34; target=&#34;_blank&#34;&gt;crontab用法&lt;/a&gt;.&lt;/h3&gt;
&lt;h4 id=&#34;41-vim-rootrootcron&#34;&gt;4.1 vim /root/root.cron&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;#进入脚本目录, 并执行更新证书脚本, 表示每月1号和15号 0点0分去更新证书.

0 0 1,15 * *  cd /root/ &amp;amp;&amp;amp; ./autoupdatecert.sh
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;42-添加上面定时任务&#34;&gt;4.2 添加上面定时任务&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;crontab -uroot /root/root.cron
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;5-附录常见错误&#34;&gt;5. 附录常见错误.&lt;/h3&gt;
&lt;h4 id=&#34;1-echo-cat-actigercomcer与echo-cat-actigercomcer区别-第1个输出换行符被替换成了空格-第2个不会-在本文脚本中第2个才是正确&#34;&gt;1. echo $(cat *.actiger.com.cer)与echo &amp;ldquo;$(cat *.actiger.com.cer)&amp;ldquo;区别, 第1个输出换行符被替换成了空格, 第2个不会. 在本文脚本中第2个才是正确.&lt;/h4&gt;
&lt;h4 id=&#34;2-unset-变量名-删除变量名&#34;&gt;2. unset ${变量名} 删除变量名&lt;/h4&gt;

    </description>
    </item>
    
    <item>
    <title>重现sudo漏洞</title>
    <link>https://charles-one.github.io/actiger/blog/linux/%E9%87%8D%E7%8E%B0sudo%E6%BC%8F%E6%B4%9E/</link>
    <pubDate>Fri, 10 Jan 2020 14:30:13 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/%E9%87%8D%E7%8E%B0sudo%E6%BC%8F%E6%B4%9E/</guid>
    <description>
        &lt;h3 id=&#34;1-首先创建onetiger用户-然后在etcsudoers中添加onetiger用户的sudo命令-即etcsudoers中添加下面代码root身份&#34;&gt;1. 首先创建onetiger用户, 然后在/etc/sudoers中添加onetiger用户的sudo命令, 即/etc/sudoers中添加下面代码(root身份)&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;onetiger ALL=/bin/vim
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-登录onetiger用户&#34;&gt;2. 登录onetiger用户&lt;/h3&gt;
&lt;h3 id=&#34;3-以onetiger用户执行下面命令-以用户id--1或4294967295运行后-再0用户id是0是root用户运行命令成功&#34;&gt;3. 以onetiger用户执行下面命令, 以用户id -1或4294967295运行后, 再0(用户id是0是root)用户运行命令成功.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo -u#-1 vim /etc/sudoers

sudo -u#0 vim /etc/sudoers

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-解决办法&#34;&gt;4. 解决办法.&lt;/h3&gt;
&lt;h4 id=&#34;41-cve-2019-14287-漏洞影响-1828-之前的-sudo-版本-将-sudo-软件包更新为最新版本&#34;&gt;4.1 CVE-2019-14287 漏洞影响 1.8.28 之前的 Sudo 版本, 将 sudo 软件包更新为最新版本.&lt;/h4&gt;
&lt;h4 id=&#34;42-禁用非root用户的sudo权限&#34;&gt;4.2 禁用非root用户的sudo权限.&lt;/h4&gt;

    </description>
    </item>
    
    <item>
    <title>Jira中问题Bug的工作流</title>
    <link>https://charles-one.github.io/actiger/blog/test/jira%E4%B8%AD%E9%97%AE%E9%A2%98bug%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81/</link>
    <pubDate>Fri, 10 Jan 2020 11:01:12 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/test/jira%E4%B8%AD%E9%97%AE%E9%A2%98bug%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid>
    <description>
        &lt;h3 id=&#34;新的项目需要设置问题bug的工作流-故整理下&#34;&gt;新的项目需要设置问题Bug的工作流, 故整理下.&lt;/h3&gt;
&lt;h4 id=&#34;1-先看整理好的工作流图片-a-target_blank-hrefhttpsimgactigercomblogtechsoftware-simplified-workflow-for-project-wddjdpowjwb点击下载jira问题工作流a&#34;&gt;1. 先看整理好的工作流图片, &lt;a target=&#34;_blank&#34; href=&#34;https://img.actiger.com/blog/tech/Software-Simplified-Workflow-for-Project-WDDJDPOW.jwb&#34;&gt;点击下载Jira问题工作流&lt;/a&gt;.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://img.actiger.com/blog/tech/jira-bug-workflow.png&#34; alt=&#34;ico&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;2-问题bug可能的状态-依据项目来定-以我的项目为例-共有9个状态&#34;&gt;2. 问题(Bug)可能的状态, 依据项目来定, 以我的项目为例, 共有9个状态.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
待办(new)

处理中

已解决

测试中

验证通过(closed)

线上验证中

线上验证通过

重新打开(reopened)

已取消(canceled)

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;3-开发与测试能够更改的状态&#34;&gt;3. 开发与测试能够更改的状态.&lt;/h4&gt;
&lt;h4 id=&#34;31-开发能够更改的状态&#34;&gt;3.1 开发能够更改的状态&lt;/h4&gt;
&lt;p&gt;待办-&amp;gt;处理中&lt;/p&gt;
&lt;p&gt;处理中-&amp;gt;已解决&lt;/p&gt;
&lt;p&gt;重新打开-&amp;gt;处理中&lt;/p&gt;
&lt;h4 id=&#34;32-测试能够更改的状态&#34;&gt;3.2 测试能够更改的状态&lt;/h4&gt;
&lt;p&gt;已解决-&amp;gt;测试中-&amp;gt;验证通过-&amp;gt;线上验证中-&amp;gt;线上验证通过&lt;/p&gt;
&lt;p&gt;测试中-&amp;gt;重新打开&lt;/p&gt;
&lt;p&gt;验证通过(closed)-&amp;gt;重新打开&lt;/p&gt;
&lt;p&gt;线上验证中-&amp;gt;重新打开&lt;/p&gt;
&lt;p&gt;线上验证通过-&amp;gt;重新打开&lt;/p&gt;
&lt;p&gt;全部状态-&amp;gt;已取消&lt;/p&gt;

    </description>
    </item>
    
    <item>
    <title>MariaDB MySQL连接的2种错误</title>
    <link>https://charles-one.github.io/actiger/blog/mysql/mariadb-mysql%E8%BF%9E%E6%8E%A5%E7%9A%842%E7%A7%8D%E9%94%99%E8%AF%AF/</link>
    <pubDate>Thu, 12 Dec 2019 16:04:14 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/mysql/mariadb-mysql%E8%BF%9E%E6%8E%A5%E7%9A%842%E7%A7%8D%E9%94%99%E8%AF%AF/</guid>
    <description>
        &lt;h3 id=&#34;1-常见mysql-mariadb连接的2种错误&#34;&gt;1. 常见MySQL Mariadb连接的2种错误&lt;/h3&gt;
&lt;h3 id=&#34;错误一&#34;&gt;错误一&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ERROR 1045 (28000): Access denied
for user &#39;usera&#39;@&#39;localhost&#39; (using password:YES)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;错误二&#34;&gt;错误二&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ERROR 1045 (28000): Access denied
for user &#39;usera&#39;@&#39;localhost&#39; (using password:NO).
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-错误一-常见错误是密码错误&#34;&gt;2. 错误一 常见错误是密码错误&lt;/h3&gt;
&lt;h4 id=&#34;重置密码即可&#34;&gt;重置密码即可&lt;/h4&gt;
&lt;h3 id=&#34;3-错误二-输入账号密码时没有输入密码&#34;&gt;3. 错误二 输入账号密码时没有输入密码.&lt;/h3&gt;
&lt;h4 id=&#34;1-命令行中没有-p进行无密码登录&#34;&gt;1. 命令行中没有-p进行无密码登录&lt;/h4&gt;
&lt;h4 id=&#34;2-如果是ide中的yaml文件确定password的缩进正确&#34;&gt;2. 如果是IDE中的yaml文件确定password的缩进正确&lt;/h4&gt;
&lt;p&gt;cat application.yaml&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;spring:
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3306/admin
    username: admin
password: 123456

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;上面的password缩进错误-就会提示using-passwordno&#34;&gt;上面的password缩进错误, 就会提示(using password:No)&lt;/h4&gt;
&lt;h4 id=&#34;正确的是&#34;&gt;正确的是&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;spring:
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3306/admin
    username: admin
    password: 123456

&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>腾讯云安装docker碰到的问题</title>
    <link>https://charles-one.github.io/actiger/blog/docker/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%AE%89%E8%A3%85docker%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</link>
    <pubDate>Wed, 04 Dec 2019 23:55:11 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/docker/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%AE%89%E8%A3%85docker%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
    <description>
        &lt;h3 id=&#34;1-centos-76版本-docker版本yum-install--y-docker-ce-18099-3el7-docker-ce-cli-18099-3el7&#34;&gt;1. CentOS 7.6版本 docker版本yum install -y docker-ce-18.09.9-3.el7 docker-ce-cli-18.09.9-3.el7&lt;/h3&gt;
&lt;h3 id=&#34;2-解决docker启动失败问题&#34;&gt;2. 解决docker启动失败问题&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Error starting daemon: error initializing graphdriver: \&amp;quot;/var/lib/docker\&amp;quot; contains several
valid graphdrivers: devicemapper, overlay; Please cleanup or explicitly choose storage driver (-s &amp;lt;DRIVER&amp;gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;删除varlibdocker中的devicemapper即可&#34;&gt;删除/var/lib/docker中的devicemapper即可&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
Error starting daemon: Error initializing network controller: list bridge addresses failed: no available network
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;缺少桥接添加一个&#34;&gt;缺少桥接,添加一个&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ip link add name docker0 type bridge
ip addr add dev docker0 172.17.0.1/16
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;重启docker&#34;&gt;重启docker&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;systemctl restart docker
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>Kubernetes扩容增加node节点</title>
    <link>https://charles-one.github.io/actiger/blog/docker/kubernetes%E6%89%A9%E5%AE%B9%E5%A2%9E%E5%8A%A0node%E8%8A%82%E7%82%B9/</link>
    <pubDate>Sat, 30 Nov 2019 16:37:47 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/docker/kubernetes%E6%89%A9%E5%AE%B9%E5%A2%9E%E5%8A%A0node%E8%8A%82%E7%82%B9/</guid>
    <description>
        &lt;h3 id=&#34;1-kubernetes扩容增加node节点&#34;&gt;1. Kubernetes扩容增加node节点&lt;/h3&gt;
&lt;h4 id=&#34;创建token&#34;&gt;创建token&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
kubeadm token create
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;查看kubernetes认证的sha256加密字符串是多少&#34;&gt;查看kubernetes认证的SHA256加密字符串是多少&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2&amp;gt;/dev/null | openssl dgst -sha256 -hex | sed &#39;s/^.* //&#39;

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;加入master节点&#34;&gt;加入master节点&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
kubeadm join &amp;lt;主master ip&amp;gt;:6443 --token &amp;lt;刚刚创建的token&amp;gt;     --discovery-token-ca-cert-hash sha256:&amp;lt;上面的加密字符串&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;操作这些时先更新下系统&#34;&gt;操作这些时先更新下系统.&lt;/h4&gt;

    </description>
    </item>
    
    <item>
    <title>解决腾讯云PVC网络指定公网ip安装kubernetes master节点失败问题</title>
    <link>https://charles-one.github.io/actiger/blog/docker/%E8%A7%A3%E5%86%B3%E8%85%BE%E8%AE%AF%E4%BA%91pvc%E7%BD%91%E7%BB%9C%E6%8C%87%E5%AE%9A%E5%85%AC%E7%BD%91ip%E5%AE%89%E8%A3%85kubernetes-master%E8%8A%82%E7%82%B9%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/</link>
    <pubDate>Thu, 28 Nov 2019 16:31:20 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/docker/%E8%A7%A3%E5%86%B3%E8%85%BE%E8%AE%AF%E4%BA%91pvc%E7%BD%91%E7%BB%9C%E6%8C%87%E5%AE%9A%E5%85%AC%E7%BD%91ip%E5%AE%89%E8%A3%85kubernetes-master%E8%8A%82%E7%82%B9%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/</guid>
    <description>
        &lt;h3 id=&#34;1-问题描述-使用腾讯云vpcvirtual-private-cloud即专有网络-初始化kubernetes-init指定公网ip-初始化失败&#34;&gt;1. 问题描述, 使用腾讯云VPC(Virtual Private Cloud)即专有网络, 初始化kubernetes init指定公网ip, 初始化失败&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=&amp;lt;公网ip&amp;gt; --ignore-preflight-errors=NumCPU
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;截取提示错误信息&#34;&gt;截取提示错误信息&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Nov 23 20:09:16 mm.com kubelet[22940]: E1123 20:09:16.997560 22940 kubelet.go:2252] node &amp;quot;mm.com&amp;quot; not found
Nov 23 20:09:17 mm.com kubelet[22940]: E1123 20:09:17.053858 22940 controller.go:125] failed to ensure node lease exists, will retry in 7s, error: Get https://118.89.82.5:6443/apis/coordination.k8s.io/v1beta1
Nov 23 20:09:17 mm.com kubelet[22940]: E1123 20:09:17.097695 22940 kubelet.go:2252] node &amp;quot;mm.com&amp;quot; not found
Nov 23 20:09:17 mm.com kubelet[22940]: E1123 20:09:17.101372 22940 reflector.go:125] k8s.io/kubernetes/pkg/kubelet/config/apiserver.go:47: Failed to list *v1.Pod: Get
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-查找原因&#34;&gt;2. 查找原因&lt;/h3&gt;
&lt;h4 id=&#34;1-确认安全组开启&#34;&gt;1. 确认安全组开启&lt;/h4&gt;
&lt;h4 id=&#34;2-确认防火墙端口全部开启&#34;&gt;2. 确认防火墙端口全部开启&lt;/h4&gt;
&lt;h4 id=&#34;3-对比之前使用kvm-vps的网络ifconfig-发现vpc专有网络只有内网ip-使用内网ip是可初始化成功的-确认原因在网卡这里&#34;&gt;3. 对比之前使用KVM VPS的网络ifconfig, 发现VPC专有网络只有内网IP, 使用内网IP是可初始化成功的, 确认原因在网卡这里.&lt;/h4&gt;
&lt;h4 id=&#34;4-对比vpc与弹性公网ip与ecs公网ip区别-vpc看不实例网卡-帮指定公网ip初化时失败&#34;&gt;4. 对比VPC与弹性公网IP与ECS公网IP区别, VPC看不实例网卡, 帮指定公网ip初化时失败.&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;比较点&lt;/th&gt;
&lt;th&gt;VPC&lt;/th&gt;
&lt;th&gt;EIP&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;支持的网络环境&lt;/td&gt;
&lt;td&gt;专有网络&lt;/td&gt;
&lt;td&gt;专有银山乡与经典网络&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是否能够单独持有&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;不支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是否支持在ECS上的弹性插拔&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;不支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ECS实例网卡上是否能看到该IP&lt;/td&gt;
&lt;td&gt;EIP网卡可见模式和多EIP网卡可见模式下可见&lt;/td&gt;
&lt;td&gt;经典网络:能看到 专有网络VPC:看不到&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;3-解决-进行腾讯eip直通-网卡可见公网ip-参考地址a-hrefhttpscloudtencentcomdocumentproduct21312540-targetblankeip直通a&#34;&gt;3. 解决, 进行腾讯EIP直通, 网卡可见公网ip. 参考地址&lt;a href=&#34;https://cloud.tencent.com/document/product/213/12540&#34; target=&#34;blank&#34;&gt;EIP直通&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&#34;1-工单申请eip&#34;&gt;1. 工单申请EIP&lt;/h4&gt;
&lt;h4 id=&#34;2-运行脚本前确认ifcfg-eth0原文件未修改-如有更改请恢复&#34;&gt;2. 运行脚本前确认ifcfg-eth0原文件未修改, 如有更改请恢复.&lt;/h4&gt;
&lt;h4 id=&#34;3-下载脚本-解压-运行脚本&#34;&gt;3. 下载脚本, 解压, 运行脚本.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
wget https://main.qcloudimg.com/raw/7d07d336030fb1324f3d55c891434612/eip_direct.zip

unzip eip_direct.zip 

chmod +x eip_direct.sh  

./eip_direct.sh install &amp;lt;公网ip&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;4-查看是否成功-在内网ip下有还有个公网ip&#34;&gt;4. 查看是否成功, 在内网ip下有还有个公网ip.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ip a
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;5-登录腾讯云a-hrefhttpsconsolecloudtencentcomcvmeiprid4-targetblank控制台a-在更多中选择直通并确定&#34;&gt;5. 登录腾讯云&lt;a href=&#34;https://console.cloud.tencent.com/cvm/eip?rid=4&#34; target=&#34;blank&#34;&gt;控制台&lt;/a&gt;, 在更多中选择直通并确定.&lt;/h4&gt;
&lt;h4 id=&#34;6-可能碰到的问题&#34;&gt;6. 可能碰到的问题&lt;/h4&gt;
&lt;h5 id=&#34;如果你之前开了直通-且重装了系统-这时候在系统内无法上网的-因为之前的ip是直通的&#34;&gt;如果你之前开了直通, 且重装了系统, 这时候在系统内无法上网的, 因为之前的IP是直通的.&lt;/h5&gt;
&lt;h5 id=&#34;需要你解绑删除刚刚的直通ip-重新申请一个ip-重复2-5步骤&#34;&gt;需要你解绑删除刚刚的直通ip, 重新申请一个IP, 重复2-5步骤.&lt;/h5&gt;
&lt;h5 id=&#34;检查ip-a-不是ifconfig&#34;&gt;检查ip a, 不是ifconfig.&lt;/h5&gt;
&lt;h4 id=&#34;7-重新指定公网ip初始化kubernetes&#34;&gt;7. 重新指定公网IP初始化kubernetes&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=&amp;lt;公网ip&amp;gt; --ignore-preflight-errors=NumCPU
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>解决mac文件损坏不能打开问题</title>
    <link>https://charles-one.github.io/actiger/blog/mac/%E8%A7%A3%E5%86%B3mac%E6%96%87%E4%BB%B6%E6%8D%9F%E5%9D%8F%E4%B8%8D%E8%83%BD%E6%89%93%E5%BC%80%E9%97%AE%E9%A2%98/</link>
    <pubDate>Thu, 28 Nov 2019 11:33:43 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/mac/%E8%A7%A3%E5%86%B3mac%E6%96%87%E4%BB%B6%E6%8D%9F%E5%9D%8F%E4%B8%8D%E8%83%BD%E6%89%93%E5%BC%80%E9%97%AE%E9%A2%98/</guid>
    <description>
        &lt;h3 id=&#34;1-mac下载后安装的文件提示文件损坏-需要换到垃圾桶中&#34;&gt;1. mac下载后安装的文件提示文件损坏, 需要换到垃圾桶中.&lt;/h3&gt;
&lt;h3 id=&#34;2-解决方法-打开终端terminal&#34;&gt;2. 解决方法, 打开终端terminal&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# 切换到管理员, su后输入管理员root密码
su

# xxx就是你安装的程序
xattr -d com.apple.quarantine /Applications/xxxx.app

# 退出管理员root

exit
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-重新去打开安装的程序&#34;&gt;3. 重新去打开安装的程序&lt;/h3&gt;

    </description>
    </item>
    
    <item>
    <title>解决NodePod模式外网无法访问mysql服务问题</title>
    <link>https://charles-one.github.io/actiger/blog/docker/%E8%A7%A3%E5%86%B3nodepod%E6%A8%A1%E5%BC%8F%E5%A4%96%E7%BD%91%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AEmysql%E6%9C%8D%E5%8A%A1%E9%97%AE%E9%A2%98/</link>
    <pubDate>Thu, 28 Nov 2019 10:56:24 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/docker/%E8%A7%A3%E5%86%B3nodepod%E6%A8%A1%E5%BC%8F%E5%A4%96%E7%BD%91%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AEmysql%E6%9C%8D%E5%8A%A1%E9%97%AE%E9%A2%98/</guid>
    <description>
        &lt;h2 id=&#34;1-创建nodepod的mysql或mariadb服务-请参考a-hrefhttpsactigercomblogdockerkubernetes-mariadb-mysql-target_blankkubernetes-mariadb-mysql安装a&#34;&gt;1. 创建NodePod的mysql或MariaDB服务, 请参考&lt;a href=&#34;https://actiger.com/blog/docker/kubernetes-mariadb-mysql/&#34; target=&#34;_blank&#34;&gt;Kubernetes Mariadb Mysql安装&lt;/a&gt;.&lt;/h2&gt;
&lt;h2 id=&#34;2-安装完成使用ip30016-用户-密码连接失败-使用over-ssh方式却可以连接成功&#34;&gt;2. 安装完成使用ip:30016 用户 密码连接失败, 使用over ssh方式却可以连接成功.&lt;/h2&gt;
&lt;h3 id=&#34;排查问题&#34;&gt;排查问题&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;查看防火墙端口打开30016端口&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;
firewall-cmd --list-ports

# 没有则添加
firewall-cmd --zone=public --add-port=30016/tcp --permanent
firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;关闭防火墙, 为啥关闭以后再开一篇解释&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;systemctl stop firewalld
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;查询iptables规则,&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;iptables -L -n

# iptables 被kubernetes接管后的规则比较多，仔细看下FORWARD规则发现，
# policy DROP状态，
# 这就导致了我们直接访问node节点的IP加上端口会无法访问容器.

# 临时生效
iptables -P FORWARD ACCEPT
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;永久生效&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;vim /usr/lib/systemd/system/docker.service


# 在[Service]下增加一条规则
............
ExecStartPost=/sbin/iptables -I FORWARD -s 0.0.0.0/0 -j ACCEPT

# 重启docker生效

systemctl daemon-reload
systemctl restart docker
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;重新使用刚才mysql或mariadb连接测试.&lt;/li&gt;
&lt;/ol&gt;

    </description>
    </item>
    
    <item>
    <title>Centos8网络设置</title>
    <link>https://charles-one.github.io/actiger/blog/linux/centos8%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/</link>
    <pubDate>Tue, 05 Nov 2019 23:46:51 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/centos8%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/</guid>
    <description>
        &lt;h3 id=&#34;1-安装centos8时-设置网络发现networkservice不能使用-搜索得知服务已更改为nmcli管理-那就学习下&#34;&gt;1. 安装Centos8时, 设置网络发现network.service不能使用, 搜索得知服务已更改为nmcli管理, 那就学习下&lt;/h3&gt;
&lt;h3 id=&#34;2-有2种方式设置静态ip&#34;&gt;2. 有2种方式设置静态IP&lt;/h3&gt;
&lt;h4 id=&#34;21-方法一-更改网络配置文件-重启网络&#34;&gt;2.1 方法一. 更改网络配置文件, 重启网络.&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;更改配置文件&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;vim /etc/sysconfig/network-scripts/ifcfg-enp0s5

添加内容

BOOTPROTO=&#39;static&#39;
GATEWAY=192.168.50.1
NETMASK=255.255.255.255
IPADDR=192.168.50.200

PREFIX=32

&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;重启网络, 重点, 相比CentOS 7有变化, CentOS 8已删除network.service. 使用nmcli来管理.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# 显示连接
nmcli c show

# 生效连接
nmcli connect up enp0s5
可简写为 nmcli c up enp0s5

&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;如SSH连接, 应该会断线, 重新连接需要主机执行下面操作.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;删除本机~/.ssh/know_hosts中ip

重启虚拟机

reboot
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;22-方法二-通过nmcli直接更改网卡信息-重启网络&#34;&gt;2.2 方法二, 通过nmcli直接更改网卡信息, 重启网络.&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;创建一个名字是cc的连接connection, 其中ifname后的enp0s5必须是nmcli d中的device, ipv4.method manual表示静态ip, type ethernet指定以太网.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;nmcli c add type ethernet con-name cc ifname enp0s5 ipv4.addr 192.168.50.200/24 ipv4.gateway 192.168.50.1 ipv4.method manual
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;启用名字为cc的connect连接.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;nmcli c up cc
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;查看当前ip地址&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;ifconfig
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-补充命令&#34;&gt;3. 补充命令&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# 更改名字cc的connect连接的静态ip. 其他属性也可一并修改
nmcli c modify cc ipv4.addr 192.168.50.100/24

# 停止connect
nmcli c down

# 删除 connect
nmcli c delete cc

# 查看connect详细信息
nmcli c show cc

# 查看device列表
nmcli d

# 查看devcie详细信息
nmcli d show

# 查看指定device详细信息
nmcli d show enp0s5

# 设置不连接
nmcli d disconnect enp0s5

# 关闭无线网络（NM默认启用无线网络）
nmcli r all off

# 查看NM本身状态
nmcli

# 检测NM是否在线可用
nm-online


&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-暂时没看到设置默认的connect-开机自动连接nmcli-c排列在第1个的连接connect&#34;&gt;4. 暂时没看到设置默认的connect, 开机自动连接nmcli c排列在第1个的连接connect.&lt;/h3&gt;

    </description>
    </item>
    
    <item>
    <title>基本SQL语句用法二</title>
    <link>https://charles-one.github.io/actiger/blog/mysql/%E5%9F%BA%E6%9C%ACsql%E8%AF%AD%E5%8F%A5%E7%94%A8%E6%B3%95%E4%BA%8C/</link>
    <pubDate>Fri, 20 Sep 2019 15:56:15 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/mysql/%E5%9F%BA%E6%9C%ACsql%E8%AF%AD%E5%8F%A5%E7%94%A8%E6%B3%95%E4%BA%8C/</guid>
    <description>
        &lt;h4 id=&#34;1创建表&#34;&gt;1.创建表&lt;/h4&gt;
&lt;p&gt;create table if not exists usrinfo(
id INT(11),
number INT(11),
name VARCHAR(255),
birthday DATE
);&lt;/p&gt;
&lt;h4 id=&#34;2查询表结构&#34;&gt;2.查询表结构&lt;/h4&gt;
&lt;p&gt;show full columns from usrinfo;&lt;/p&gt;
&lt;p&gt;desc usrinfo;&lt;/p&gt;
&lt;p&gt;describe usrinfo;&lt;/p&gt;
&lt;h4 id=&#34;3查询创建表的语句&#34;&gt;3.查询创建表的语句&lt;/h4&gt;
&lt;p&gt;show create table usrinfo;&lt;/p&gt;
&lt;h4 id=&#34;4插入数据&#34;&gt;4.插入数据&lt;/h4&gt;
&lt;h5 id=&#34;插入单选数据&#34;&gt;插入单选数据&lt;/h5&gt;
&lt;p&gt;insert into usrinfo values (12123123,&amp;ldquo;hello&amp;rdquo;,&amp;ldquo;1990-02-15&amp;rdquo;);&lt;/p&gt;
&lt;h5 id=&#34;插入多行数据&#34;&gt;插入多行数据&lt;/h5&gt;
&lt;p&gt;insert into usrinfo values (12123123,&amp;ldquo;hello&amp;rdquo;,&amp;ldquo;1990-02-15&amp;rdquo;),
(12123123,&amp;ldquo;cc&amp;rdquo;,&amp;ldquo;1991-03-01&amp;rdquo;);&lt;/p&gt;
&lt;h5 id=&#34;插入某些列&#34;&gt;插入某些列&lt;/h5&gt;
&lt;p&gt;insert into usrinfo(number,name) values (121234123,&amp;ldquo;eefef&amp;rdquo;);&lt;/p&gt;
&lt;h5 id=&#34;插入某些列多行&#34;&gt;插入某些列多行&lt;/h5&gt;
&lt;p&gt;insert into usrinfo(number,name) values (121234123,&amp;ldquo;eefef&amp;rdquo;),
(121234123,&amp;ldquo;eefef&amp;rdquo;);&lt;/p&gt;
&lt;h4 id=&#34;5查询某一列不重复的值&#34;&gt;5.查询某一列不重复的值&lt;/h4&gt;
&lt;p&gt;select distinct number from usrinfo;&lt;/p&gt;
&lt;h4 id=&#34;6增加新的列&#34;&gt;6.增加新的列&lt;/h4&gt;
&lt;h5 id=&#34;增加新列&#34;&gt;增加新列&lt;/h5&gt;
&lt;p&gt;alter table usrinfo add id int(11);&lt;/p&gt;
&lt;h5 id=&#34;并给修改新列的属性&#34;&gt;并给修改新列的属性&lt;/h5&gt;
&lt;p&gt;alter table usrinfo change id id int not null auto_increment primary key;&lt;/p&gt;
&lt;h5 id=&#34;更改新加列的排序&#34;&gt;更改新加列的排序:&lt;/h5&gt;
&lt;p&gt;把id这列,放到第1列
alter table usrinfo modify id int(11) first;&lt;/p&gt;
&lt;h5 id=&#34;把birthday这列放在number后面&#34;&gt;把birthday这列放在number后面&lt;/h5&gt;
&lt;p&gt;alter table usrinfo modify birthday date after number;&lt;/p&gt;
&lt;h4 id=&#34;7重命名表-和-列名&#34;&gt;7.重命名表 和 列名.&lt;/h4&gt;
&lt;h5 id=&#34;更改表名&#34;&gt;更改表名&lt;/h5&gt;
&lt;p&gt;alter table &amp;lt;old_name&amp;gt;  rename &amp;lt;new_name&amp;gt;;&lt;/p&gt;
&lt;h5 id=&#34;更改列名后面必须有属性值才能修改成功&#34;&gt;更改列名,后面必须有属性值,才能修改成功&lt;/h5&gt;
&lt;p&gt;alter table usrinfo change id new_id int(10) ;&lt;/p&gt;
&lt;h5 id=&#34;更改列名-属性由int-转换为varchar&#34;&gt;更改列名+ 属性,由int 转换为varchar&lt;/h5&gt;
&lt;p&gt;alter table usrinfo change id new_id varchar(11);&lt;/p&gt;
&lt;h4 id=&#34;8删除列&#34;&gt;8.删除列.&lt;/h4&gt;
&lt;h5 id=&#34;提前新建一个列-alter-table-usrinfo-add-dd-varchar11&#34;&gt;提前新建一个列 alter table usrinfo add dd varchar(11);&lt;/h5&gt;
&lt;h5 id=&#34;mysql适用于下面的语句-别的数据库未知&#34;&gt;mysql适用于下面的语句, 别的数据库未知.&lt;/h5&gt;
&lt;p&gt;alter table usrinfo drop dd;&lt;/p&gt;
&lt;h4 id=&#34;9删除某个列中某行为null的数据注意是is-null-不是null&#34;&gt;9.删除某个列中某行为null的数据,注意是is null 不是=null&lt;/h4&gt;
&lt;p&gt;delete from usrinfo where birthday is null;&lt;/p&gt;
&lt;h4 id=&#34;10删除一个表&#34;&gt;10.删除一个表&lt;/h4&gt;
&lt;h5 id=&#34;为了删除我先创建一个表create-table-delid-int11-not-null-primary-key-auto_incrementname-varchar255phone-int11&#34;&gt;为了删除我先创建一个表create table del(id int(11) not null primary key auto_increment,name varchar(255),phone int(11));&lt;/h5&gt;
&lt;p&gt;drop table del;&lt;/p&gt;
&lt;h4 id=&#34;11返回唯一不同的值&#34;&gt;11.返回唯一不同的值&lt;/h4&gt;
&lt;h5 id=&#34;查询单行的唯一不同的值&#34;&gt;查询单行的唯一不同的值&lt;/h5&gt;
&lt;p&gt;select DISTINCT birthday from usrinfo;&lt;/p&gt;
&lt;h5 id=&#34;查询多行唯一不同的值组合起来是唯一不同的值&#34;&gt;查询多行唯一不同的值,组合起来是唯一不同的值&lt;/h5&gt;
&lt;p&gt;select DISTINCT number,birthday from usrinfo;&lt;/p&gt;
&lt;h4 id=&#34;12where的简单查询语句&#34;&gt;12.where的简单查询语句&lt;/h4&gt;
&lt;h5 id=&#34;in-和-like&#34;&gt;In 和 like&lt;/h5&gt;
&lt;p&gt;select * from usrinfo where name in (&amp;ldquo;Hello&amp;rdquo;);&lt;/p&gt;
&lt;p&gt;select * from usrinfo where name like &amp;lsquo;%ello&amp;rsquo;;
%表示多个字符,_ 下划线表示一个字母,like不区分大小写的&lt;/p&gt;
&lt;h5 id=&#34;binary-区分大小写&#34;&gt;binary 区分大小写&lt;/h5&gt;
&lt;p&gt;select * from usrinfo where name like binary &amp;lsquo;Hello&amp;rsquo;;&lt;/p&gt;
&lt;h4 id=&#34;13and和or&#34;&gt;13.and和or&lt;/h4&gt;
&lt;p&gt;select * from usrinfo where name=&amp;lsquo;hello&amp;rsquo; and number=&amp;lsquo;1233&amp;rsquo;;
select * from usrinfo where name=&amp;lsquo;hello&amp;rsquo; or name=&amp;lsquo;Hello&amp;rsquo;;
select * from usrinfo where name=&amp;lsquo;hello&amp;rsquo; or number=1233;&lt;/p&gt;
&lt;h4 id=&#34;14order-by&#34;&gt;14.order by&lt;/h4&gt;
&lt;h5 id=&#34;升序默认方式也是这种&#34;&gt;升序,默认方式也是这种&lt;/h5&gt;
&lt;p&gt;select * from usrinfo order by number asc;&lt;/p&gt;
&lt;h5 id=&#34;降序&#34;&gt;降序&lt;/h5&gt;
&lt;p&gt;select * from usrinfo order by number desc;&lt;/p&gt;
&lt;h4 id=&#34;15update&#34;&gt;15.update&lt;/h4&gt;
&lt;h5 id=&#34;update-记录&#34;&gt;update 记录&lt;/h5&gt;
&lt;p&gt;update usrinfo set number=999 where id=18;
update usrinfo set number=999 wehre id in(18,19);
&lt;strong&gt;update更新必须带where,否则会更新所有的数据&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;16limit&#34;&gt;16.limit&lt;/h4&gt;
&lt;h5 id=&#34;查询数据库中从2行到后n行的数据&#34;&gt;查询数据库中从2行到后n行的数据&lt;/h5&gt;
&lt;p&gt;select * from usrinfo limit 2,n;&lt;/p&gt;
&lt;h5 id=&#34;查询起始后n行数据如顶部的5行数据&#34;&gt;查询起始后n行数据,如顶部的5行数据.&lt;/h5&gt;
&lt;p&gt;等价于select * from usrinfo limit 5;&lt;/p&gt;
&lt;h4 id=&#34;17min-和-max&#34;&gt;17.Min 和 Max&lt;/h4&gt;
&lt;h5 id=&#34;查询某列的最小值并赋值给参数&#34;&gt;查询某列的最小值并赋值给参数&lt;/h5&gt;
&lt;p&gt;select min(id) as small_id from usrinfo;
select max(id) as max_id from usrinfo;&lt;/p&gt;
&lt;h4 id=&#34;18count计算搜索得到的行数-sum求合-avg求平均值&#34;&gt;18.count计算搜索得到的行数, sum求合 avg求平均值&lt;/h4&gt;
&lt;h5 id=&#34;sum-和-avg-仅针对所有int数据&#34;&gt;sum 和 avg 仅针对所有int数据&lt;/h5&gt;
&lt;p&gt;select count(id) from usrinfo;&lt;/p&gt;
&lt;p&gt;select avc(number) from usrinfo;&lt;/p&gt;
&lt;h4 id=&#34;19alias-重命名&#34;&gt;19.alias 重命名&lt;/h4&gt;
&lt;h5 id=&#34;mysql中语句&#34;&gt;MySQL中语句&lt;/h5&gt;
&lt;p&gt;select id,CONCAT(name,&#39; , &amp;lsquo;,address) as cc from usrinfo;&lt;/p&gt;
&lt;h5 id=&#34;其它数据库写法&#34;&gt;其它数据库写法&lt;/h5&gt;
&lt;p&gt;select id,name,&amp;rsquo; , &amp;lsquo;, address as cc from usrinfo;&lt;/p&gt;
&lt;h4 id=&#34;20inner-join-left-join-rigth-join-full-join&#34;&gt;20.inner join, left join, rigth join, full join&lt;/h4&gt;
&lt;h4 id=&#34;mysql-not-have-fulljush-left-join-union-right-join&#34;&gt;Mysql not have full,jush left join union right join.&lt;/h4&gt;
&lt;h5 id=&#34;默认为join为inner-join两个表的交集-left-join-取左边表的集合包括交集但不包含右表没有交集的部分&#34;&gt;默认为join为inner join两个表的交集, left join 取左边表的集合包括交集但不包含右表没有交集的部分,&lt;/h5&gt;
&lt;h5 id=&#34;右连接与左连接相反全连接是左右表的并集&#34;&gt;右连接与左连接相反,全连接是左右表的并集.&lt;/h5&gt;
&lt;p&gt;select o.id,o.name,c.id,c.number from order as o (inner) join customers as c on o.id = c.id;
select o.id,o.name,c.id,c.number from order as o left join customers as c on o.id = c.id;
select o.id,o.name,c.id,c.number from order as o right join customers as c on o.id = c.id;&lt;/p&gt;
&lt;h5 id=&#34;全连接&#34;&gt;全连接&lt;/h5&gt;
&lt;p&gt;select o.id,o.name,c.id,c.number from order as o right join customers as c on o.id = c.id
union
select o.id,o.name,c.id,c.number from order as o left join customers as c on o.id = c.id;&lt;/p&gt;
&lt;h5 id=&#34;三个表inner-join&#34;&gt;三个表inner join&lt;/h5&gt;
&lt;p&gt;select o.orderId,o.customerID,cu.costomerID,cu.costomerName,cp.CustomerID,cp.phone1 from
(orders as o join customers as cu on where o.CustomerID = cu.CustomerID)
join cphone as cp on o.CustomerID = cp.CustomerID;&lt;/p&gt;
&lt;h4 id=&#34;21-self-join&#34;&gt;21. self join&lt;/h4&gt;
&lt;p&gt;select A.CustomerName as CustomerName1,B.CustomerName as CustomerName2,A.Country
from customers A, customers B
where A.CustomerID &amp;lt;&amp;gt; B.CustomerID and A.Country= B.Country
order by A.Country;&lt;/p&gt;
&lt;h4 id=&#34;22-union&#34;&gt;22. union&lt;/h4&gt;
&lt;p&gt;select CustomerID from orders
union
select CustomerID from customers;&lt;/p&gt;
&lt;h5 id=&#34;重复值用all&#34;&gt;重复值用ALL&lt;/h5&gt;
&lt;p&gt;select CustomerID from orders
union
select CustomerID from customers;&lt;/p&gt;
&lt;h4 id=&#34;23-group-by-把查询到的结果分组&#34;&gt;23. group by 把查询到的结果分组&lt;/h4&gt;
&lt;h5 id=&#34;以国家为组统计有多少个id&#34;&gt;以国家为组统计有多少个id&lt;/h5&gt;
&lt;p&gt;select count(c.CustomerID),c.Country
from orders as o join customers as c on o.customerID = c.CustomerID group by c.Country;&lt;/p&gt;
&lt;h5 id=&#34;以国家为组统计有多少个id并按照id个数排序从小到大&#34;&gt;以国家为组统计有多少个id,并按照id个数排序,从小到大&lt;/h5&gt;
&lt;p&gt;select count(c.CustomerID),c.Country
from orders as o join customers as c on o.customerID = c.CustomerID group by c.Country order by count(c.CustomerID);&lt;/p&gt;
&lt;h4 id=&#34;24-having-having是分组group-by后的筛选条件分组后的数据组内再筛选where则是在分组前筛选&#34;&gt;24. having, having是分组(group by)后的筛选条件,分组后的数据组内再筛选,where则是在分组前筛选.&lt;/h4&gt;
&lt;h5 id=&#34;以country分组然后找个数超过1的&#34;&gt;以country分组,然后找个数超过1的.&lt;/h5&gt;
&lt;p&gt;select count(CustomerID) as number,Country from customers where CustomerID&amp;gt;1 group by Country having count(CustomerID) &amp;gt; 1;&lt;/p&gt;
&lt;h4 id=&#34;25-select-into-复制表或表结构的时候-只得到一个外壳-clone一个躯体-原表的主键外键约束触发器索引都不会被复制过来&#34;&gt;25. select into, 复制表或表结构的时候, 只得到一个&amp;quot;外壳&amp;quot;, clone一个躯体, 原表的主键,外键,约束,触发器,索引都不会被复制过来.&lt;/h4&gt;
&lt;h5 id=&#34;非mysql用法&#34;&gt;非mysql用法&lt;/h5&gt;
&lt;p&gt;select * into orders_back from orders;&lt;/p&gt;
&lt;h5 id=&#34;mysql用法&#34;&gt;mysql用法&lt;/h5&gt;
&lt;p&gt;create table orders_back (select * from orders);&lt;/p&gt;
&lt;h5 id=&#34;复制部分列&#34;&gt;复制部分列&lt;/h5&gt;
&lt;p&gt;create table order_b1(select orderId,orderDate from orders);&lt;/p&gt;
&lt;h5 id=&#34;可以增加where语句&#34;&gt;可以增加where语句&lt;/h5&gt;
&lt;p&gt;create table order_b2(select orderId,orderDate from orders where orderId &amp;gt; 123);&lt;/p&gt;
&lt;h5 id=&#34;只复制表&#34;&gt;只复制表&lt;/h5&gt;
&lt;p&gt;create table orders_back3 (select * from orders where 1=2)&lt;/p&gt;
&lt;h4 id=&#34;26-insert-into-select-从一个表拿数据插入另一个表中&#34;&gt;26. Insert into select, 从一个表拿数据插入另一个表中,&lt;/h4&gt;
&lt;h5 id=&#34;复制某些字段到另一个表中&#34;&gt;复制某些字段到另一个表中&lt;/h5&gt;
&lt;p&gt;insert into orders_back(orderId,customerID,orderDate) select orderId,customerID,orderDate from orders;&lt;/p&gt;
&lt;h5 id=&#34;复制整个表到另一个表中两张表的结构属性是一样的&#34;&gt;复制整个表到另一个表中,两张表的结构属性是一样的&lt;/h5&gt;
&lt;p&gt;insert into orders_back select * from orders;&lt;/p&gt;
&lt;h5 id=&#34;也可以后面跟where语句进入-筛选要复制的列&#34;&gt;也可以后面跟where语句进入, 筛选要复制的列&lt;/h5&gt;
&lt;p&gt;insert into orders_back select * from orders where orderId &amp;gt; 1;&lt;/p&gt;
&lt;h4 id=&#34;27-创建一个数据库-删除一个数据&#34;&gt;27. 创建一个数据库, 删除一个数据&lt;/h4&gt;
&lt;h5 id=&#34;你必须有创建或者删除数据库的权限&#34;&gt;你必须有创建或者删除数据库的权限&lt;/h5&gt;
&lt;p&gt;create database mydata;&lt;/p&gt;
&lt;h4 id=&#34;删除数据&#34;&gt;删除数据&lt;/h4&gt;
&lt;p&gt;drop database mydata;&lt;/p&gt;
&lt;h4 id=&#34;28-创建一个表时列的属性的限定&#34;&gt;28. 创建一个表时,列的属性的限定&lt;/h4&gt;
&lt;p&gt;NOT NULL
UNIQUE
PRIMARY KEY
FOREIGN KEY
CHECK
DEFAULT
INDEX&lt;/p&gt;
&lt;h4 id=&#34;check&#34;&gt;check&lt;/h4&gt;
&lt;h5 id=&#34;mysql-用法&#34;&gt;Mysql 用法&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;create table person(
    id int(11) primary key,
    Age int(11),
    CHECK (Age &amp;gt; = 18)
);
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;oracle-sql-server用法&#34;&gt;Oracle SQL server用法&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;create table person(
    id int(11) primary key,
    Age int CHECK (Age&amp;gt;=18)
        );
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;多个check条件-能用mysql-oracle都可用&#34;&gt;多个check条件, 能用mysql, oracle都可用&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;create tables person(
    id int primary key,
    Age int(11),
    City varchar(255),
    CONSTRAINT CHK_person check (Age&amp;gt;=18 and City=&#39;Shanghai&#39;)
);
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;增加一个check条件&#34;&gt;增加一个check条件&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;alter table person add CHECK (Age&amp;gt;=18);
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;增加多个check条件-mysql-oracle都可用&#34;&gt;增加多个check条件, mysql oracle都可用&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;alter table person add CONSTRAINT CHK_personAge CHECK (Age&amp;gt;=18 and city=&#39;Shanghai&#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;删除表中一个check条件&#34;&gt;删除表中一个check条件&lt;/h5&gt;
&lt;h5 id=&#34;mysql用法-1&#34;&gt;Mysql用法&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;alter table person drop CHECK CHK_personAge;
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;oracesql-server用法&#34;&gt;orace/SQL server用法&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;alter table person drop CONSTRAINT CHK_personAge;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;29-default-用法&#34;&gt;29. Default 用法&lt;/h4&gt;
&lt;h5 id=&#34;创建表的时间&#34;&gt;创建表的时间&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;create table person(
    id int(11) primary key,
    Age int,
    City varchar(255) DEFAULT &#39;Shanghai&#39;
);
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;增加表的属性时&#34;&gt;增加表的属性时&lt;/h4&gt;
&lt;h5 id=&#34;mysql用法-2&#34;&gt;Mysql用法&lt;/h5&gt;
&lt;p&gt;alter table person alter City set DEFAULT &amp;lsquo;Shanghai&amp;rsquo;;&lt;/p&gt;
&lt;h5 id=&#34;oracle用法&#34;&gt;oracle用法&lt;/h5&gt;
&lt;p&gt;alter table person modify City DEFAULT &amp;lsquo;Shanghai&amp;rsquo;;&lt;/p&gt;
&lt;h4 id=&#34;删除默认&#34;&gt;删除默认&lt;/h4&gt;
&lt;h5 id=&#34;mysql-用法-1&#34;&gt;Mysql 用法&lt;/h5&gt;
&lt;p&gt;alter table person alter City drop default;&lt;/p&gt;
&lt;h5 id=&#34;oracle-sql-server-用法&#34;&gt;Oracle SQL server 用法&lt;/h5&gt;
&lt;p&gt;alter table person alter COLUMN City drop default;&lt;/p&gt;
&lt;h4 id=&#34;30-index-索引-聚集索引一个表最多有一个&#34;&gt;30. Index 索引, 聚集索引一个表最多有一个&lt;/h4&gt;
&lt;h5 id=&#34;创建一个索引和创建多个索引&#34;&gt;创建一个索引和创建多个索引&lt;/h5&gt;
&lt;p&gt;create index ind_orderId on orders(orderId);
create index ind_orderid on orders(orderId, orderDate);&lt;/p&gt;
&lt;h5 id=&#34;删除一个索引&#34;&gt;删除一个索引&lt;/h5&gt;
&lt;h5 id=&#34;mysql格式是alter-table-table_name-drop-index-index_name&#34;&gt;mysql,格式是alter table table_name drop INDEX index_name;&lt;/h5&gt;
&lt;p&gt;alter table orders drop INDEX ind_orderId;&lt;/p&gt;
&lt;h5 id=&#34;oracle-db2&#34;&gt;Oracle DB2&lt;/h5&gt;
&lt;p&gt;drop index index_name;&lt;/p&gt;
&lt;h5 id=&#34;sql-server&#34;&gt;SQL server&lt;/h5&gt;
&lt;p&gt;drop index table_name.index_name;&lt;/p&gt;
&lt;h4 id=&#34;31-auto_increment-自动增加值&#34;&gt;31. Auto_INCREMENT 自动增加值&lt;/h4&gt;
&lt;h5 id=&#34;mysql&#34;&gt;Mysql&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;create table person(
    id int(11) auto_increment primary key,
    age int(3)
);
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;sql-server-1&#34;&gt;SQL server&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;create table person(
    id int(11) IDENTITY(1,1) primary key,
    Age int(11)
);
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;oracle-未知待更新&#34;&gt;Oracle 未知待更新&lt;/h5&gt;
&lt;h4 id=&#34;32-view-视图是原表某些列的影分身-更改视图也就是更改原表的数据&#34;&gt;32. View 视图是原表某些列的影分身, 更改视图也就是更改原表的数据.&lt;/h4&gt;
&lt;p&gt;create VIEW view_orders_list as select orderId,orderDate from orders;&lt;/p&gt;
&lt;p&gt;update view_orders_list set orderId=222 where orderId=22;&lt;/p&gt;
&lt;h5 id=&#34;更新一个视图-可以更新列的直接在下面语句中增加就可以了&#34;&gt;更新一个视图, 可以更新列的,直接在下面语句中增加就可以了.&lt;/h5&gt;
&lt;p&gt;create or replace view view_list
as
select orderId,orderDate,customerID
from orders ;&lt;/p&gt;
&lt;h5 id=&#34;删除一个视图&#34;&gt;删除一个视图&lt;/h5&gt;
&lt;p&gt;drop view view_list;&lt;/p&gt;
&lt;h4 id=&#34;33-null-functions&#34;&gt;33. Null Functions&lt;/h4&gt;
&lt;p&gt;select productName, unitPrice*(unitInstock+IFNULL(unitOrder,0)) from products;
select productName, unitPrice*(unitInstock+COALESCE(unitOrder,0)) from products;&lt;/p&gt;
&lt;h4 id=&#34;34-cross-join-是两个表笛卡尔集&#34;&gt;34. Cross join 是两个表笛卡尔集&lt;/h4&gt;
&lt;p&gt;select * from orders cross join usrinfo;&lt;/p&gt;
&lt;h4 id=&#34;35-update-与-inner-join连用&#34;&gt;35. update 与 inner join连用&lt;/h4&gt;
&lt;h5 id=&#34;oracle-中用法&#34;&gt;oracle 中用法&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;update orders set orderDate=&amp;quot;1991-02-09&amp;quot; where orders.customerID in(
    select customers.CustomerID from orders join customers on
    orders.customerID = customers.CustomerID;
    );
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;mysql用法-3&#34;&gt;Mysql用法&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;update orders  as o join
(select c.customerID from orders as o join customers as c on o.customerID = c.CustomerID)
c on o.customerID = c.customerID
set o.orderDate=&amp;quot;1990-09-08&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;36-date日期查询特定year-month-day的人&#34;&gt;36 date日期查询特定year month day的人&lt;/h5&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; student &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;year&lt;/span&gt;(birthday)&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1990&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;month&lt;/span&gt;(birthday)&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;day&lt;/span&gt;(birthday)&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    </description>
    </item>
    
    <item>
    <title>垃圾与垃圾篓</title>
    <link>https://charles-one.github.io/actiger/blog/thought/%E5%9E%83%E5%9C%BE%E4%B8%8E%E5%9E%83%E5%9C%BE%E7%AF%93/</link>
    <pubDate>Wed, 28 Aug 2019 16:19:59 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/thought/%E5%9E%83%E5%9C%BE%E4%B8%8E%E5%9E%83%E5%9C%BE%E7%AF%93/</guid>
    <description>
        &lt;p&gt;今天准备在厨房里扔干垃圾&lt;/p&gt;
&lt;p&gt;厨房里两个垃圾篓&lt;/p&gt;
&lt;p&gt;两个干净没有扔过垃圾的篓&lt;/p&gt;
&lt;p&gt;思考哪个才是放干垃圾的&lt;/p&gt;
&lt;p&gt;忽然想到, 扔到哪个篓, 哪个篓就是干垃圾篓&lt;/p&gt;
&lt;p&gt;篓并不重要&lt;/p&gt;
&lt;p&gt;是什么垃圾才重要&lt;/p&gt;
&lt;p&gt;容器都是一样的, 重要的是你用什么来填满&lt;/p&gt;
&lt;p&gt;就像今天, 你用什么填满, 今天就是什么样的&lt;/p&gt;

    </description>
    </item>
    
    <item>
    <title>申请单个域名方式</title>
    <link>https://charles-one.github.io/actiger/blog/linux/%E7%94%B3%E8%AF%B7%E5%8D%95%E4%B8%AA%E5%9F%9F%E5%90%8D%E6%96%B9%E5%BC%8F/</link>
    <pubDate>Tue, 27 Aug 2019 10:30:00 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/%E7%94%B3%E8%AF%B7%E5%8D%95%E4%B8%AA%E5%9F%9F%E5%90%8D%E6%96%B9%E5%BC%8F/</guid>
    <description>
        &lt;h2 id=&#34;1-起因&#34;&gt;1. 起因&lt;/h2&gt;
&lt;h4 id=&#34;一级域名和二级域名都使用dns-01验证方式申请证书-申请一级域名的时候更改了_acme-challengeactigercom&#34;&gt;一级域名和二级域名都使用dns-01验证方式申请证书, 申请一级域名的时候更改了&lt;code&gt;_acme-challenge.actiger.com&lt;/code&gt;,&lt;/h4&gt;
&lt;h4 id=&#34;续期的时候发现二级域名申请证书时的配置_acme-challengeactigercom验证失败-续期失败&#34;&gt;续期的时候发现二级域名申请证书时的配置&lt;code&gt;_acme-challenge.actiger.com&lt;/code&gt;验证失败, 续期失败&lt;/h4&gt;
&lt;h2 id=&#34;2-解决方式-使用不同方式申请证书-续期不会有冲突&#34;&gt;2. 解决方式, 使用不同方式申请证书, 续期不会有冲突&lt;/h2&gt;
&lt;h4 id=&#34;一级域名actigercom使用http文件申请证书&#34;&gt;一级域名Actiger.com使用http文件申请证书&lt;/h4&gt;
&lt;h4 id=&#34;二级通用actigercom用例dns-01的方式申请证书&#34;&gt;二级通用&lt;code&gt;*.actiger.com&lt;/code&gt;用例dns-01的方式申请证书&lt;/h4&gt;
&lt;h2 id=&#34;3-申请单个域名&#34;&gt;3. 申请单个域名&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;certbot certonly --manual --preferred-challenges http --email example@icloud.com --domains actiger.com
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;提示在actigercomwell-knownacme-challenge-创建一个文件&#34;&gt;提示在actiger.com/.well-known/acme-challenge/ 创建一个文件&lt;/h4&gt;
&lt;h4 id=&#34;假如你设置actigercom跳转到wwwactigercom-可以把创建的文件放在wwwactigercomwell-knownacme-challenge下&#34;&gt;假如你设置actiger.com跳转到www.actiger.com, 可以把创建的文件放在&lt;code&gt;www.actiger.com/.well-known/acme-challenge/&lt;/code&gt;下&lt;/h4&gt;
&lt;h4 id=&#34;在服务器对应目录创建文件&#34;&gt;在服务器对应目录创建文件&lt;/h4&gt;
&lt;h4 id=&#34;创建文件成功后-继续申请证书&#34;&gt;创建文件成功后, 继续申请证书&lt;/h4&gt;
&lt;h4 id=&#34;申请证书成功后-存放在etcletsencrypt下&#34;&gt;申请证书成功后, 存放在/etc/letsencrypt下&lt;/h4&gt;

    </description>
    </item>
    
    <item>
    <title>Ingress-Ningx配置多个SSL证书</title>
    <link>https://charles-one.github.io/actiger/blog/docker/ingress-ningx%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AAssl%E8%AF%81%E4%B9%A6/</link>
    <pubDate>Thu, 20 Jun 2019 00:29:39 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/docker/ingress-ningx%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AAssl%E8%AF%81%E4%B9%A6/</guid>
    <description>
        &lt;h3 id=&#34;1-起因&#34;&gt;1. 起因&lt;/h3&gt;
&lt;h4 id=&#34;我删除域名服务商对顶级域名即一级域名的默认的重定向-直接指向的我服务地址&#34;&gt;我删除域名服务商对顶级域名(即一级域名)的默认的重定向, 直接指向的我服务地址&lt;/h4&gt;
&lt;h4 id=&#34;使用的通配的二级域名证书&#34;&gt;使用的通配的二级域名证书&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://actiger.com&#34; target=&#34;_blank&#34;&gt;actiger.com&lt;/a&gt;, 浏览器弹出安全提示了.&lt;/p&gt;
&lt;h4 id=&#34;发现-通配的二级域名证书不能用在a-hrefhttpactigercom-target_blankactigercoma的证书&#34;&gt;发现, 通配的二级域名证书不能用在&lt;a href=&#34;http://actiger.com&#34; target=&#34;_blank&#34;&gt;actiger.com&lt;/a&gt;的证书.&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://actiger.com/blog/linux/acmesh获取域名并自动更新到kubernetes中/&#34; target=&#34;_blank&#34;&gt;参考这里&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-ingress-nginx的配置my-nginxyml&#34;&gt;3. Ingress Nginx的配置my-nginx.yml&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: nginx-space
  name: my-nginx
spec:
  tls:
  - hosts:
    - weini.actiger.com
    - www.actiger.com
    secretName: ingress-secret
  - hosts:
    - actiger.com
    secretName: ingress-top-secret
  rules:
  - host: weini.actiger.com
    http:
      paths:
      - backend:
          serviceName: my-nginx
          servicePort: 80
  - host: www.actiger.com
    http:
      paths:
      - backend:
          serviceName: my-nginx
          servicePort: 80
  - host: actiger.com
    http:
      paths:
      - backend:
          serviceName: my-nginx
          servicePort: 80
  - host: test.actiger.com
    http:
      paths:
      - backend:
          serviceName: my-nginx
          servicePort: 80

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-配置域名解析到服务ip-测试https有没有生效&#34;&gt;4. 配置域名解析到服务IP, 测试https有没有生效&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
curl -vL actiger.com

# 类似下面的表示证书配置成功

* Ignoring the response-body
* Connection #0 to host actiger.com left intact
* Issue another request to this URL: &#39;https://actiger.com/&#39;
*   Trying &amp;lt;ip&amp;gt;...
* TCP_NODELAY set
* Connected to actiger.com (&amp;lt;ip&amp;gt;) port 443 (#1)
* ALPN, offering http/1.1
* TLS 1.2 connection using TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
* Server certificate: actiger.com
* Server certificate: Let&#39;s Encrypt Authority X3
* Server certificate: DST Root CA X3
&amp;gt; GET / HTTP/1.1
&amp;gt; Host: actiger.com
&amp;gt; User-Agent: curl/7.63.0
&amp;gt; Accept: */*

&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>Moco示例</title>
    <link>https://charles-one.github.io/actiger/blog/test/moco%E7%A4%BA%E4%BE%8B/</link>
    <pubDate>Sun, 16 Jun 2019 23:59:47 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/test/moco%E7%A4%BA%E4%BE%8B/</guid>
    <description>
        &lt;h3 id=&#34;1-moco是什么-简单的模拟服务器的程序库工具-有请求给出响应在a-hrefhttpcentralmavenorgmaven2comgithubdreamheadmoco-runner-target_blank地址a中下载moco-runner-0120-standalonejar&#34;&gt;1. Moco是什么? 简单的模拟服务器的程序库/工具, 有请求给出响应.在&lt;a href=&#34;http://central.maven.org/maven2/com/github/dreamhead/moco-runner/&#34; target=&#34;_blank&#34;&gt;地址&lt;/a&gt;中下载moco-runner-0.12.0-standalone.jar.&lt;/h3&gt;
&lt;h3 id=&#34;2-使用示例&#34;&gt;2. 使用示例&lt;/h3&gt;
&lt;h4 id=&#34;1-创建testjson&#34;&gt;1. 创建test.json&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;[
  {
    &amp;quot;description&amp;quot;: &amp;quot;First test&amp;quot;,
    &amp;quot;request&amp;quot;: {
      &amp;quot;uri&amp;quot;: &amp;quot;/demo&amp;quot;
    },
    &amp;quot;response&amp;quot;: {
      &amp;quot;text&amp;quot;: &amp;quot;First Response&amp;quot;
    }
  }
]
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-命令行启动服务-moco-runner-0120-standalonejar与testjson在相同目录下&#34;&gt;2. 命令行启动服务, moco-runner-0.12.0-standalone.jar与test.json在相同目录下.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
java -jar ./moco-runner-0.12.0-standalone.jar http -p 8888 -c test.json

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;3-验证&#34;&gt;3. 验证&lt;/h4&gt;
&lt;h4 id=&#34;访问-a-hrefhttplocalhost8888demo-target_blankhttplocalhost8888demoa&#34;&gt;访问 &lt;a href=&#34;http://localhost:8888/demo&#34; target=&#34;_blank&#34;&gt;http://localhost:8888/demo&lt;/a&gt;&lt;/h4&gt;
&lt;h3 id=&#34;2-模拟一个带参数的请求-parajson&#34;&gt;2. 模拟一个带参数的请求, para.json&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[
  {
    &amp;quot;description&amp;quot;: &amp;quot;模拟一个有参数的Get请求&amp;quot;,
    &amp;quot;request&amp;quot;: {
      &amp;quot;uri&amp;quot;: &amp;quot;/getpara&amp;quot;,
      &amp;quot;method&amp;quot;: &amp;quot;get&amp;quot;,
      &amp;quot;queries&amp;quot;: {
        &amp;quot;name&amp;quot;: &amp;quot;xiaoming&amp;quot;,
        &amp;quot;age&amp;quot;: &amp;quot;20&amp;quot;
      }
    },
    &amp;quot;response&amp;quot;: {
      &amp;quot;text&amp;quot;: &amp;quot;I am on the way.&amp;quot;
    }
  }
]
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;
java -jar ./moco-runner-0.12.0-standalone.jar http -p 8888 -c para.json

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-模拟post请求&#34;&gt;3. 模拟post请求&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[
  {
    &amp;quot;description&amp;quot;: &amp;quot;post请求&amp;quot;,
    &amp;quot;request&amp;quot;: {
      &amp;quot;uri&amp;quot;: &amp;quot;/post&amp;quot;,
      &amp;quot;method&amp;quot;:&amp;quot;post&amp;quot;
      },
    &amp;quot;response&amp;quot;: {
      &amp;quot;text&amp;quot;: &amp;quot;First moco post request&amp;quot;
    }
  }
]
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-带参的post请求&#34;&gt;4. 带参的post请求&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[
  {
    &amp;quot;description&amp;quot;: &amp;quot;post请求&amp;quot;,
    &amp;quot;request&amp;quot;: {
      &amp;quot;uri&amp;quot;: &amp;quot;/postpara&amp;quot;,
      &amp;quot;method&amp;quot;:&amp;quot;post&amp;quot;,
      &amp;quot;forms&amp;quot;: {
        &amp;quot;name&amp;quot;: &amp;quot;xiaoming&amp;quot;
      }
    },
    &amp;quot;response&amp;quot;: {
      &amp;quot;text&amp;quot;: &amp;quot;有参数&amp;quot;
    }
  }
]
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;5-带cookie信息-服务端返回浏览器cookie信息&#34;&gt;5. 带cookie信息, 服务端返回浏览器cookie信息&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[
  {
    &amp;quot;description&amp;quot;: &amp;quot;cookie&amp;quot;,
    &amp;quot;request&amp;quot;: {
      &amp;quot;uri&amp;quot;: &amp;quot;/cookie&amp;quot;,
      &amp;quot;method&amp;quot;: &amp;quot;get&amp;quot;,
      &amp;quot;cookies&amp;quot;: {
        &amp;quot;login&amp;quot;: &amp;quot;true&amp;quot;
      }
    },
    &amp;quot;response&amp;quot;: {
      &amp;quot;text&amp;quot;: &amp;quot;hello&amp;quot;
    }
  },
    {
        &amp;quot;description&amp;quot;: &amp;quot;get cookies&amp;quot;,
        &amp;quot;request&amp;quot;: {
            &amp;quot;uri&amp;quot;: &amp;quot;/getcookies&amp;quot;,
            &amp;quot;method&amp;quot;: &amp;quot;get&amp;quot;
        },
        &amp;quot;response&amp;quot;: {
            &amp;quot;text&amp;quot;: &amp;quot;getcookie success&amp;quot;,
            &amp;quot;cookies&amp;quot;: {
                &amp;quot;login&amp;quot;: &amp;quot;true&amp;quot;,
                &amp;quot;status&amp;quot;:&amp;quot;10000&amp;quot;
            }
        }
    }
]
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;使用jmeter添加cookie是必须要有的值login-true-localhost域-路径必不可少&#34;&gt;使用Jmeter添加cookie是必须要有的值login true localhost(域) /(路径)必不可少.&lt;/h4&gt;
&lt;h3 id=&#34;6-post-json格式的&#34;&gt;6. post json格式的&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[
  {
    &amp;quot;description&amp;quot;: &amp;quot;带cookie的post请求&amp;quot;,
    &amp;quot;request&amp;quot;: {
      &amp;quot;uri&amp;quot;: &amp;quot;/postcookie&amp;quot;,
      &amp;quot;method&amp;quot;: &amp;quot;post&amp;quot;,
      &amp;quot;cookies&amp;quot;: {
        &amp;quot;login&amp;quot;: &amp;quot;true&amp;quot;
      },
      &amp;quot;json&amp;quot;: {
        &amp;quot;name&amp;quot;: &amp;quot;xiaoming&amp;quot;,
        &amp;quot;age&amp;quot;: &amp;quot;18&amp;quot;
      }
    },
    &amp;quot;response&amp;quot;: {
      &amp;quot;json&amp;quot;: {
        &amp;quot;hell&amp;quot;: &amp;quot;你长了&amp;quot;
      }
    }
  }
]
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;7-headers请求&#34;&gt;7. headers请求&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[
  {
    &amp;quot;description&amp;quot;: &amp;quot;带header的请求&amp;quot;,
    &amp;quot;request&amp;quot;: {
      &amp;quot;uri&amp;quot;: &amp;quot;/headers&amp;quot;,
      &amp;quot;method&amp;quot;: &amp;quot;post&amp;quot;,
      &amp;quot;headers&amp;quot;: {
        &amp;quot;content-type&amp;quot;: &amp;quot;application/json&amp;quot;
      },
      &amp;quot;json&amp;quot;: {
        &amp;quot;name&amp;quot;: &amp;quot;xiaohong&amp;quot;,
        &amp;quot;age&amp;quot;: &amp;quot;17&amp;quot;
      }
    },
    &amp;quot;response&amp;quot;: {
      &amp;quot;json&amp;quot;: {
        &amp;quot;hello&amp;quot;: &amp;quot;pretty&amp;quot;,
        &amp;quot;status&amp;quot;: &amp;quot;200&amp;quot;
      }
    }
  }
]
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;8-重定向地址-重定向请求&#34;&gt;8. 重定向地址, 重定向请求.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;[
  {
    &amp;quot;description&amp;quot;: &amp;quot;重定向网页&amp;quot;,
    &amp;quot;request&amp;quot;: {
      &amp;quot;uri&amp;quot;: &amp;quot;/redirect&amp;quot;,
      &amp;quot;method&amp;quot;: &amp;quot;get&amp;quot;
    },
    &amp;quot;redirectTo&amp;quot;: &amp;quot;http://huya.com&amp;quot;
  },
  {
    &amp;quot;description&amp;quot;: &amp;quot;重定向请求&amp;quot;,
    &amp;quot;request&amp;quot;: {
      &amp;quot;uri&amp;quot;: &amp;quot;/redirect/to&amp;quot;,
      &amp;quot;method&amp;quot;: &amp;quot;get&amp;quot;
    },
    &amp;quot;redirectTo&amp;quot;: &amp;quot;/new/redirect&amp;quot;
  },
  {
    &amp;quot;description&amp;quot;: &amp;quot;指定的请求&amp;quot;,
    &amp;quot;request&amp;quot;: {
      &amp;quot;uri&amp;quot;: &amp;quot;/new/redirect&amp;quot;,
      &amp;quot;method&amp;quot;: &amp;quot;get&amp;quot;
    },
    &amp;quot;response&amp;quot;: {
      &amp;quot;text&amp;quot;: &amp;quot;请求成功了&amp;quot;
    }
  }
]
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>TestNG生成测试报告</title>
    <link>https://charles-one.github.io/actiger/blog/test/testng%E7%94%9F%E6%88%90%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8A/</link>
    <pubDate>Sun, 16 Jun 2019 20:44:52 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/test/testng%E7%94%9F%E6%88%90%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8A/</guid>
    <description>
        &lt;h3 id=&#34;1-使用的extentreports生成的测试报告-报告中使用的css文件需要上强墙&#34;&gt;1. 使用的extentreports生成的测试报告, 报告中使用的css文件需要上强(墙)&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;com.aventstack&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;extentreports&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;4.0.9&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;测试方法&#34;&gt;测试方法&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;package com.actiger.reports;

import org.testng.Assert;
import org.testng.Reporter;
import org.testng.annotations.Test;

public class TestReport {

    @Test
    public void test1(){
        Assert.assertEquals(1,2);
    }

    @Test
    public void test2(){
        Assert.assertEquals(1,1);
    }

    @Test
    public void test3(){
        Assert.assertEquals(3,3);
    }

    @Test
    public void log1(){
        Reporter.log(&amp;quot;这是日志&amp;quot;);
        throw new RuntimeException(&amp;quot;这是一个异常&amp;quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;配置的xml&#34;&gt;配置的xml&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt;
&amp;lt;suite name=&amp;quot;mytest&amp;quot;&amp;gt;
    &amp;lt;test name=&amp;quot;test&amp;quot;&amp;gt;
        &amp;lt;classes&amp;gt;
            &amp;lt;class name=&amp;quot;com.actiger.reports.TestReport&amp;quot;&amp;gt;
                &amp;lt;method&amp;gt;
                    &amp;lt;include name=&amp;quot;test1&amp;quot;&amp;gt;&amp;lt;/include&amp;gt;
                    &amp;lt;include name=&amp;quot;test2&amp;quot;&amp;gt;&amp;lt;/include&amp;gt;
                    &amp;lt;include name=&amp;quot;test3&amp;quot;&amp;gt;&amp;lt;/include&amp;gt;
                    &amp;lt;include name=&amp;quot;log1&amp;quot;&amp;gt;&amp;lt;/include&amp;gt;
                &amp;lt;/method&amp;gt;
            &amp;lt;/class&amp;gt;
        &amp;lt;/classes&amp;gt;
    &amp;lt;/test&amp;gt;
    &amp;lt;listeners&amp;gt;
        &amp;lt;listener class-name=&amp;quot;com.vimalselvam.testng.listener.ExtentTestNgFormatter&amp;quot;&amp;gt;&amp;lt;/listener&amp;gt;
    &amp;lt;/listeners&amp;gt;
&amp;lt;/suite&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;运行xml-并打开test-output中reporthtml即可查看&#34;&gt;运行xml, 并打开test-output中report.html即可查看&lt;/h4&gt;

    </description>
    </item>
    
    <item>
    <title>TestNG超时测试</title>
    <link>https://charles-one.github.io/actiger/blog/test/testng%E8%B6%85%E6%97%B6%E6%B5%8B%E8%AF%95/</link>
    <pubDate>Sun, 16 Jun 2019 14:00:18 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/test/testng%E8%B6%85%E6%97%B6%E6%B5%8B%E8%AF%95/</guid>
    <description>
        &lt;h3 id=&#34;testng超时测试&#34;&gt;TestNG超时测试&lt;/h3&gt;
&lt;h4 id=&#34;超出预期时间则用例失败&#34;&gt;超出预期时间则用例失败&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;package com.actiger.test.timeout;

import org.testng.annotations.Test;

public class TimeOut {

    @Test(timeOut = 3000)
    public void testSuccess() throws InterruptedException{
        Thread.sleep(2000);
    }


    @Test(timeOut = 2000)
    public void testFail() throws InterruptedException{
        Thread.sleep(3000);
    }

}

&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>TestNG多线程配置</title>
    <link>https://charles-one.github.io/actiger/blog/test/testng%E5%A4%9A%E7%BA%BF%E7%A8%8B%E9%85%8D%E7%BD%AE/</link>
    <pubDate>Sun, 16 Jun 2019 00:46:00 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/test/testng%E5%A4%9A%E7%BA%BF%E7%A8%8B%E9%85%8D%E7%BD%AE/</guid>
    <description>
        &lt;h3 id=&#34;1-在方法注释中配置多线程-配置线程池&#34;&gt;1. 在方法注释中配置多线程, 配置线程池&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
package com.actiger.test.thread;

import org.testng.annotations.Test;

public class MultiThread {

    @Test(invocationCount = 10, threadPoolSize = 3)
    public void test(){
        System.out.println(&amp;quot;1&amp;quot;);
        System.out.println(&amp;quot;Thread ID:%s%n&amp;quot; + Thread.currentThread().getId());
    }
}

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-在xml中配置多线程-不可配置为线程池&#34;&gt;2. 在xml中配置多线程, 不可配置为线程池.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;package com.actiger.test.thread;

import org.testng.annotations.Test;

public class MultiThreadOnXml {

    @Test
    public void test1(){
        System.out.println(&amp;quot;Thread ID: &amp;quot; + Thread.currentThread().getId());
    }

    @Test
    public void test2(){
        System.out.println(&amp;quot;Thread ID: &amp;quot; + Thread.currentThread().getId());
    }

    @Test
    public void test3(){
        System.out.println(&amp;quot;Thread ID: &amp;quot; + Thread.currentThread().getId());
    }
}

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;multithreadxml配置&#34;&gt;multiThread.xml配置&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt;
&amp;lt;!DOCTYPE suite SYSTEM &amp;quot;http://testng.org/testng-1.0.dtd&amp;quot; &amp;gt;
&amp;lt;suite name=&amp;quot;thread&amp;quot; parallel=&amp;quot;methods&amp;quot; thread-count=&amp;quot;2&amp;quot;&amp;gt;
    &amp;lt;test name=&amp;quot;test&amp;quot;&amp;gt;
        &amp;lt;classes&amp;gt;
            &amp;lt;class name=&amp;quot;com.actiger.test.thread.MultiThreadOnXml&amp;quot;&amp;gt;&amp;lt;/class&amp;gt;
        &amp;lt;/classes&amp;gt;
    &amp;lt;/test&amp;gt;
&amp;lt;/suite&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-规则说明&#34;&gt;3. 规则说明&lt;/h3&gt;
&lt;h3 id=&#34;在multithreadxml里suite标签下parallel属性配置说明methodstestsclass-thread-count代表最大并发线程数&#34;&gt;在multiThread.xml里suite标签下parallel属性配置说明(methods,tests,class), thread-count代表最大并发线程数&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;methods所有用例都可以在不同线程执行&lt;/li&gt;
&lt;li&gt;tests级别, 相同的test tag下用例只能在一个线程, 不同的test tag才可在不同的线程执行&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;必须用test下name属性值区分-默认是无法区分的&#34;&gt;必须用test下name属性值区分, 默认是无法区分的.&lt;/h4&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;class级别, 相同的class tag下用例只能在一个线程, 不同的class tag才可在不同的线程执行&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;必须用test下name属性值区分-默认是无法区分的-1&#34;&gt;必须用test下name属性值区分, 默认是无法区分的.&lt;/h4&gt;

    </description>
    </item>
    
    <item>
    <title>TestNG参数化测试</title>
    <link>https://charles-one.github.io/actiger/blog/test/testng%E5%8F%82%E6%95%B0%E5%8C%96%E6%B5%8B%E8%AF%95/</link>
    <pubDate>Sat, 15 Jun 2019 17:35:15 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/test/testng%E5%8F%82%E6%95%B0%E5%8C%96%E6%B5%8B%E8%AF%95/</guid>
    <description>
        &lt;h3 id=&#34;1-参数化测试-使用dataprovider来参数化&#34;&gt;1. 参数化测试, 使用DataProvider来参数化.&lt;/h3&gt;
&lt;h4 id=&#34;test中dataprovider的名字与dataprovider名称一致&#34;&gt;@Test中dataProvider的名字与@DataProvider名称一致&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
@Test(dataProvider = &amp;quot;data&amp;quot;)
public void dataProvider(String name, int age){
    System.out.println(&amp;quot;Name:&amp;quot; + name + &amp;quot;, &amp;quot; + &amp;quot;Age:&amp;quot; + age);
}

@DataProvider(name = &amp;quot;data&amp;quot;)
public Object[][] data(){
    Object[][] oo = new Object[][]{
        {&amp;quot;zhangsan&amp;quot;, 18},
            {&amp;quot;lisi&amp;quot;, 20},
            {&amp;quot;wangwu&amp;quot;, 30}
    };
    return oo;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-针对不方法识别-使用不同参数&#34;&gt;2. 针对不方法识别, 使用不同参数&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
@Test(dataProvider = &amp;quot;testMethod&amp;quot;)
public void method1(String name, int age){
    System.out.println(&amp;quot;Name:&amp;quot; + name + &amp;quot;, &amp;quot; + &amp;quot;Age:&amp;quot; + age + &amp;quot;1111&amp;quot;);
}

@Test(dataProvider = &amp;quot;testMethod&amp;quot;)
public void method2(String name, int age){
    System.out.println(&amp;quot;Name:&amp;quot; + name + &amp;quot;, &amp;quot; + &amp;quot;Age:&amp;quot; + age + &amp;quot;2222&amp;quot;);
}

@DataProvider(name = &amp;quot;testMethod&amp;quot;)
public Object[][] switchMethod(Method method){
    Object[][] oo = null;

    if(method.getName().equals(&amp;quot;method1&amp;quot;)){
        oo = new Object[][]{
            {&amp;quot;zhangsan&amp;quot;, 19},
                {&amp;quot;winnie&amp;quot;, 30}
        };
        return oo;
    }

    else if(method.getName().equals(&amp;quot;method2&amp;quot;)){
        oo = new Object[][]{
            {&amp;quot;Lisi&amp;quot;, 20},
                {&amp;quot;cc&amp;quot;, 26}
        };
        return oo;
    }

    return oo;
}

&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>TestNG依赖测试和xml文件参数化</title>
    <link>https://charles-one.github.io/actiger/blog/test/testng%E4%BE%9D%E8%B5%96%E6%B5%8B%E8%AF%95%E5%92%8Cxml%E6%96%87%E4%BB%B6%E5%8F%82%E6%95%B0%E5%8C%96/</link>
    <pubDate>Thu, 13 Jun 2019 23:19:11 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/test/testng%E4%BE%9D%E8%B5%96%E6%B5%8B%E8%AF%95%E5%92%8Cxml%E6%96%87%E4%BB%B6%E5%8F%82%E6%95%B0%E5%8C%96/</guid>
    <description>
        &lt;h3 id=&#34;1-testng依赖测试-1个用例依赖其他的测试方法-怎么表示这种关系呢-在注解后加标签dependsonmethods&#34;&gt;1. TestNG依赖测试, 1个用例依赖其他的测试方法, 怎么表示这种关系呢, 在注解后加标签dependsOnMethods&lt;/h3&gt;
&lt;h3 id=&#34;例如-方法2就依赖于方法1-如果方法1执行失败了-方法2就无法执行了&#34;&gt;例如, 方法2就依赖于方法1, 如果方法1执行失败了, 方法2就无法执行了.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
package com.actiger.test.all;

import org.testng.annotations.Test;

public class Dependon{
    @Test
    public void dependon1(){
        System.out.println(&amp;quot;dependon 1111111&amp;quot;);
        throw new RuntimeException();
    }


    @Test(dependsOnMethods = {&amp;quot;dependon1&amp;quot;})
    public void dependon2(){
        System.out.println(&amp;quot;dependon 2222222&amp;quot;);
    }

}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-testng的xml文件参数化&#34;&gt;2. TestNG的xml文件参数化&lt;/h3&gt;
&lt;h4 id=&#34;1创建方法&#34;&gt;1.创建方法&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;package com.actiger.test.paramter;

import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

public class ParamterTest {
    @Test
    @Parameters({&amp;quot;name&amp;quot;, &amp;quot;age&amp;quot;})
    public void paramTest1(String name, int age){
        System.out.println(&amp;quot;Name:&amp;quot;+ name + &amp;quot;, &amp;quot; + &amp;quot;Age:&amp;quot; + age);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-配置执行的xml文件和参数&#34;&gt;2. 配置执行的xml文件和参数&lt;/h4&gt;
&lt;h4 id=&#34;resoureces中parameter必须在class标签后&#34;&gt;resoureces中parameter必须在class标签后&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt;
&amp;lt;!DOCTYPE suite SYSTEM &amp;quot;http://testng.org/testng-1.0.dtd&amp;quot; &amp;gt;
&amp;lt;suite name=&amp;quot;parater&amp;quot;&amp;gt;
    &amp;lt;test name=&amp;quot;para&amp;quot;&amp;gt;
        &amp;lt;classes&amp;gt;
            &amp;lt;class name=&amp;quot;com.actiger.test.paramter.ParamterTest&amp;quot;&amp;gt;&amp;lt;/class&amp;gt;
            &amp;lt;parameter name=&amp;quot;name&amp;quot; value=&amp;quot;xiaoMing&amp;quot;&amp;gt;&amp;lt;/parameter&amp;gt;
            &amp;lt;parameter name=&amp;quot;age&amp;quot; value=&amp;quot;18&amp;quot;&amp;gt;&amp;lt;/parameter&amp;gt;
        &amp;lt;/classes&amp;gt;
    &amp;lt;/test&amp;gt;
&amp;lt;/suite&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>TestNG异常测试</title>
    <link>https://charles-one.github.io/actiger/blog/test/testng%E5%BC%82%E5%B8%B8%E6%B5%8B%E8%AF%95/</link>
    <pubDate>Wed, 12 Jun 2019 23:07:19 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/test/testng%E5%BC%82%E5%B8%B8%E6%B5%8B%E8%AF%95/</guid>
    <description>
        &lt;h3 id=&#34;testng异常测试&#34;&gt;TestNG异常测试&lt;/h3&gt;
&lt;h4 id=&#34;1-expectedexception方法预期runtimeexception异常&#34;&gt;1. expectedException方法预期RuntimeException异常&lt;/h4&gt;
&lt;h4 id=&#34;2-expectedsuccess方法预期runtimeexception异常&#34;&gt;2. expectedSuccess方法预期RuntimeException异常&lt;/h4&gt;
&lt;h4 id=&#34;3-expectedexception用例结果是失败的-expectedsuccess执行用例成功预期与结果一致&#34;&gt;3. expectedException用例结果是失败的, expectedSuccess执行用例成功(预期与结果一致)&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;package com.actiger.test.expectedException;

import org.testng.annotations.Test;

public class ExpectedExcepiton {
    @Test(expectedExceptions = RuntimeException.class)
    public void expectedException(){
        System.out.println(&amp;quot;期望运行异常的结果!&amp;quot;);
    }

    @Test(expectedExceptions = RuntimeException.class)
    public void expectedSuccess(){
        System.out.println(&amp;quot;期望运行异常的结果&amp;quot;);
        throw new RuntimeException();
    }
}
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>TestNG中注解Before After执行顺序</title>
    <link>https://charles-one.github.io/actiger/blog/test/testng%E4%B8%AD%E6%B3%A8%E8%A7%A3before-after%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</link>
    <pubDate>Wed, 12 Jun 2019 11:12:12 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/test/testng%E4%B8%AD%E6%B3%A8%E8%A7%A3before-after%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</guid>
    <description>
        &lt;h3 id=&#34;1-testng是什么&#34;&gt;1. TestNG是什么&lt;/h3&gt;
&lt;h4 id=&#34;testng一种开源自动测试框架-相当灵活的注解和配置-自由测试&#34;&gt;TestNG一种开源自动测试框架, 相当灵活的注解和配置, 自由测试.&lt;/h4&gt;
&lt;h3 id=&#34;2-before-after执行顺序&#34;&gt;2. Before After执行顺序&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://img.actiger.com/blog/tech/testng-before-after.png&#34; alt=&#34;BeforeAfter&#34;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;注解&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;@BeforeSuite&lt;/td&gt;
&lt;td&gt;套件, 在所有测试开始时运行1次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@BeforeTest&lt;/td&gt;
&lt;td&gt;在所有类Classes前, BeforeSuite后运行1次,注解的方法将在testNG.xml文件test标签内的所有类方法运行前执行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@BeforeClass&lt;/td&gt;
&lt;td&gt;在单个class类前执行1次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@BeforeGroups&lt;/td&gt;
&lt;td&gt;在所有配置方法组前运行1次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@BeforeMethod&lt;/td&gt;
&lt;td&gt;在单个配置方法前运行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@AfterMethod&lt;/td&gt;
&lt;td&gt;在单个配置方法后运行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@AfterGroups&lt;/td&gt;
&lt;td&gt;在所有配置方法组后运行1次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@AfterClass&lt;/td&gt;
&lt;td&gt;在单个class类后执行1次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@AfterTest&lt;/td&gt;
&lt;td&gt;在所有类Classes后, AfterSuite前运行1次, 注解的方法将在testNG.xml文件test标签内的所有类方法运行后执行。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;@AfterSuite&lt;/td&gt;
&lt;td&gt;套件, 在所有测试结束时运行1次&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre&gt;&lt;code&gt;package com.actiger.test.suite;

import org.testng.annotations.*;

public class LoginTest {
    @Test(groups = {&amp;quot;group&amp;quot;})
    public void loginTest(){
        System.out.println(&amp;quot;Login test&amp;quot;);
    }

    @Test(groups = {&amp;quot;group&amp;quot;})
    public void cc(){
        System.out.println(&amp;quot;See you &amp;quot;);
    }

    @BeforeTest(groups = {&amp;quot;group&amp;quot;})
    public void beforeTestGroup(){
        System.out.println(&amp;quot;Before Test&amp;quot;);
    }

    @AfterTest(groups = {&amp;quot;group&amp;quot;})
    public void afterTestGroup() {
        System.out.println(&amp;quot;After Test&amp;quot;);
    }

    @BeforeMethod(groups = {&amp;quot;group&amp;quot;})
    public void beforeMethod(){
        System.out.println(&amp;quot;before Method&amp;quot;);
    }

    @AfterMethod(groups = {&amp;quot;group&amp;quot;})
    public void afterMethod(){
        System.out.println(&amp;quot;after Method&amp;quot;);
    }

    @BeforeClass(groups = {&amp;quot;group&amp;quot;})
    public void beforeClass(){
        System.out.println(&amp;quot;Before Class&amp;quot;);
    }
    @AfterClass(groups = {&amp;quot;group&amp;quot;})
    public void afterClass(){
        System.out.println(&amp;quot;After Class&amp;quot;);
    }
    @BeforeGroups(groups = {&amp;quot;group&amp;quot;})
    public void beforeGroup(){
        System.out.println(&amp;quot;Before Group&amp;quot;);
    }

    @AfterGroups(groups = {&amp;quot;group&amp;quot;})
    public void afterGroup(){
        System.out.println(&amp;quot;After Group&amp;quot;);
    }


    @BeforeSuite(groups = {&amp;quot;group&amp;quot;})
    public void beforeSuite(){
        System.out.println(&amp;quot;before suite!&amp;quot;);
    }

    @AfterSuite(groups = {&amp;quot;group&amp;quot;})
    public void afterSuite(){
        System.out.println(&amp;quot;after suite&amp;quot;);
    }
}

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;xml注解-testxml&#34;&gt;xml注解, test.xml&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; ?&amp;gt;
&amp;lt;!DOCTYPE suite SYSTEM &amp;quot;http://testng.org/testng-1.0.dtd&amp;quot; &amp;gt;
&amp;lt;suite name=&amp;quot;suite&amp;quot;&amp;gt;
    &amp;lt;test name=&amp;quot;loginTest&amp;quot;&amp;gt;
        &amp;lt;groups&amp;gt;
            &amp;lt;run&amp;gt;
                &amp;lt;include name=&amp;quot;group&amp;quot;&amp;gt;&amp;lt;/include&amp;gt;
            &amp;lt;/run&amp;gt;
        &amp;lt;/groups&amp;gt;
        &amp;lt;classes&amp;gt;
            &amp;lt;class name=&amp;quot;com.actiger.test.suite.LoginTest&amp;quot; &amp;gt;&amp;lt;/class&amp;gt;
        &amp;lt;/classes&amp;gt;
    &amp;lt;/test&amp;gt;
&amp;lt;/suite&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-添加group标签&#34;&gt;3. 添加group标签&lt;/h3&gt;
&lt;p&gt;在注释后添加组, 这个注释是运行在这个组下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@BeforeTest(groups = {&amp;quot;group&amp;quot;})

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;在xml中配置groups内中group-有groups的注释都会执行&#34;&gt;在xml中配置groups内中&amp;quot;group&amp;quot;, 有&amp;quot;groups&amp;quot;的注释都会执行&lt;/h4&gt;

    </description>
    </item>
    
    <item>
    <title>Kubernetes Mariadb Mysql</title>
    <link>https://charles-one.github.io/actiger/blog/docker/kubernetes-mariadb-mysql/</link>
    <pubDate>Wed, 05 Jun 2019 20:46:48 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/docker/kubernetes-mariadb-mysql/</guid>
    <description>
        &lt;h3 id=&#34;1-创建一个对外可使用的数据库-外部网络访问使用nodeport-pod使用到pvpvc-secret&#34;&gt;1. 创建一个对外可使用的数据库, 外部网络访问使用NodePort. pod使用到PV,PVC, Secret.&lt;/h3&gt;
&lt;h3 id=&#34;2-使用pv和pvc创建硬盘-persistentvolume持久卷-持久卷申请&#34;&gt;2. 使用PV和PVC创建硬盘, PersistentVolume持久卷, 持久卷申请.&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;创建持久卷 pv-maria.yaml, 这里在node节点上申请hostPath申请空间&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-hostpath
spec:
  capacity:
    storage: 300Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: &amp;quot;/root/mariadb&amp;quot;

&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;创建持久卷申请pvc-maria.yaml, 申请容量与PV一致才会绑定成功.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-hostpath
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: &amp;quot;&amp;quot;
  resources:
    requests:
      storage: 200Mi
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-为数据库root密码创建secret文件mariapassyml-root密码需要base64转换&#34;&gt;3. 为数据库root密码创建Secret文件mariapass.yml. root密码需要base64转换.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: v1
kind: Secret
metadata:
  name: mariapass
type: Opaque
data:
  password: &amp;lt;base64加密你的root密码&amp;gt;
  username: cm9vdA==
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-创建数据库pod-使用mariapassyml中密码和pvc-创建文件mariadbyaml&#34;&gt;4. 创建数据库pod, 使用mariapass.yml中密码和PVC. 创建文件mariadb.yaml&lt;/h3&gt;
&lt;h4 id=&#34;在env中使用密码-在volumes使用pvc&#34;&gt;在env中使用密码, 在volumes使用PVC&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  type: NodePort
  ports:
  - port: 3306
    targetPort: 3306
    nodePort: 30016
  selector:
    app: mysql
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mariadb:10.2
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mariapass
              key: password
        ports:
        - name: mysql
          containerPort: 3306
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: pvc-hostpath
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;5-设置网络接收规则-a-target_blank-hrefhttpsactigercomblogdocker解决nodepod模式外网无法访问mysql服务问题解决nodepod模式外网无法访问mysql服务问题a&#34;&gt;5. 设置网络接收规则, &lt;a target=&#34;_blank&#34; href=&#34;https://actiger.com/blog/docker/解决nodepod模式外网无法访问mysql服务问题/&#34;&gt;解决nodepod模式外网无法访问mysql服务问题&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;iptables -P FORWARD ACCEPT

firewall-cmd --zone=public --add-port=30015/tcp --permanent

firewall-cmd --reload

systemctl stop firewalld
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;开始创建&#34;&gt;开始创建&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;kubectl apply -f mariadb.yaml,mariapass.yml,pv-maria.yaml,pvc-maria.yaml

# 查看创建的pv pvc pod

kubectl get pv

kubectl get pvc

kubectl get pods
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;测试连接&#34;&gt;测试连接&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;mysql -uroot -h&amp;lt;你的IP&amp;gt; -P30016 -p
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>Kubernetes Ingress Nginx</title>
    <link>https://charles-one.github.io/actiger/blog/docker/kubernetes-nginx-ingress/</link>
    <pubDate>Tue, 04 Jun 2019 23:17:06 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/docker/kubernetes-nginx-ingress/</guid>
    <description>
        &lt;h3 id=&#34;1-为了理解nginx-ingress-controller-先看下上海长宁来福士的人脸识别电梯-正好在这上班&#34;&gt;1. 为了理解Nginx Ingress Controller, 先看下上海长宁来福士的人脸识别电梯, 正好在这上班😃.&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://img.actiger.com/blog/tech/kubernetes-ingress-nginx.png&#34; alt=&#34;长宁来福士&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;把外部进入内部人脸识别闸机类比为nginx-ingress-controller-匹配域名-把人或请求分配到内部service&#34;&gt;把外部进入内部人脸识别闸机类比为NGINX Ingress Controller, 匹配域名, 把人或请求分配到内部service.&lt;/h4&gt;
&lt;h4 id=&#34;把人脸识别分配电梯类比为service-service控制着一组电梯-将人或请求分配service下的电梯中&#34;&gt;把人脸识别分配电梯类比为service, service控制着一组电梯, 将人或请求分配service下的电梯中.&lt;/h4&gt;
&lt;h4 id=&#34;把电梯类比为pod-在service下-处理人或请求&#34;&gt;把电梯类比为pod, 在service下, 处理人或请求.&lt;/h4&gt;
&lt;h3 id=&#34;2-下面是配置文件-角色与service绑定的-使用到pv和pvc-使用secret-我的命名空间是nginx-space&#34;&gt;2. 下面是配置文件, 角色与service绑定的, 使用到pv和pvc, 使用secret, 我的命名空间是nginx-space&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;创建name-space&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;kubectl create namespace nginx-space
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;设置默认返回内容 default-backend.yaml&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: default-http-backend
  labels:
    k8s-app: default-http-backend
  namespace: nginx-space
spec:
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: default-http-backend
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: default-http-backend
        # Any image is permissable as long as:
        # 1. It serves a 404 page at /
        # 2. It serves 200 on a /healthz endpoint
        image: gcr.io/google_containers/defaultbackend:1.4
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
      nodeSelector:
        kubernetes.io/hostname: cc2
---
apiVersion: v1
kind: Service
metadata:
  name: default-http-backend
  namespace: nginx-space
  labels:
    k8s-app: default-http-backend
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    k8s-app: default-http-backend
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;设置角色, 角色绑定nginx-ingress-controller-rbac.yml&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;#apiVersion: v1
#kind: Namespace
#metadata:
#  name: nginx-ingress
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-ingress-serviceaccount
  namespace: nginx-space
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: nginx-ingress-clusterrole
rules:
  - apiGroups:
      - &amp;quot;&amp;quot;
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - &amp;quot;&amp;quot;
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - &amp;quot;&amp;quot;
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - &amp;quot;extensions&amp;quot;
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - &amp;quot;&amp;quot;
    resources:
        - events
    verbs:
        - create
        - patch
  - apiGroups:
      - &amp;quot;extensions&amp;quot;
    resources:
      - ingresses/status
    verbs:
      - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: nginx-ingress-role
  namespace: nginx-space
rules:
  - apiGroups:
      - &amp;quot;&amp;quot;
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - &amp;quot;&amp;quot;
    resources:
      - configmaps
    resourceNames:
      # Defaults to &amp;quot;&amp;lt;election-id&amp;gt;-&amp;lt;ingress-class&amp;gt;&amp;quot;
      # Here: &amp;quot;&amp;lt;ingress-controller-leader&amp;gt;-&amp;lt;nginx&amp;gt;&amp;quot;
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - &amp;quot;ingress-controller-leader-nginx&amp;quot;
    verbs:
      - get
      - update
  - apiGroups:
      - &amp;quot;&amp;quot;
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - &amp;quot;&amp;quot;
    resources:
      - endpoints
    verbs:
      - get
      - create
      - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: nginx-ingress-role-nisa-binding
  namespace: nginx-space
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-ingress-role
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-serviceaccount
    namespace: nginx-space
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: nginx-ingress-clusterrole-nisa-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress-clusterrole
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-serviceaccount
    namespace: nginx-space
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;设置nginx ingress controller配置, nginx-ingress-controller.yaml&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  labels:
    k8s-app: nginx-ingress-controller
  namespace: nginx-space
# for now change default
spec:
  replicas: 1
  template:
    metadata:
      namespace: nginx-space
      labels:
        k8s-app: nginx-ingress-controller
    spec:
      # hostNetwork makes it possible to use ipv6 and to preserve the source IP correctly regardless of docker configuration
      # however, it is not a hard dependency of the nginx-ingress-controller itself and it may cause issues if port 10254 already is taken on the host
      # that said, since hostPort is broken on CNI (https://github.com/kubernetes/kubernetes/issues/31307) we have to use hostNetwork where CNI is used
      # like with kubeadm
      # hostNetwork: true
      terminationGracePeriodSeconds: 60
      hostNetwork: true
      serviceAccountName: nginx-ingress-serviceaccount
      containers:
      - image: bitnami/nginx-ingress-controller
        name: nginx-ingress-controller
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 1
        ports:
        - containerPort: 80
          hostPort: 80
        - containerPort: 443
          hostPort: 443
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        args:
        - /nginx-ingress-controller
        - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
#        - --default-ssl-certificate=$(POD_NAMESPACE)/ingress-secret
      nodeSelector:
        kubernetes.io/hostname: cc2
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;设置ingress, my-nginx.yml&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: nginx-space
  name: my-nginx
spec:
  tls:
  - hosts:
    - www.actiger.com
    secretName: ingress-secret
  rules:
  - host: www.actiger.com
    http:
      paths:
      - backend:
          serviceName: my-nginx
          servicePort: 80
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;创建nginx deleployment, nginx-deployment.yaml, 创建Nginx Service&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: my-nginx
  namespace: nginx-space
spec:
  replicas: 1
  template:
    metadata:
      namespace: nginx-space
      labels:
        app: my-nginx
    spec:
      containers:
      - name: my-nginx
        image: nginx:1.16.0
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: www.actiger.com
      volumes:
      - name: www.actiger.com
        persistentVolumeClaim:
          claimName: pvc-blog
---
apiVersion: v1
kind: Service
metadata:
  name: my-nginx
  namespace: nginx-space
  labels:
    run: my-nginx
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: my-nginx

&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;设置域名证书, 使用的letsencrypt, privkey.pem和cert.pem转成base64&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;如没有证书-删除my-nginxyml中这行secretname-ingress-secret即可&#34;&gt;如没有证书, 删除my-nginx.yml中这行secretName: ingress-secret即可.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: v1
data:
  tls.crt:
  tls.key:
kind: Secret
metadata:
  name: ingress-secret
  namespace: nginx-space
type: Opaque

&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;创建hugo文件夹, 使用pv和pvc创建空间.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;如不使用pv和pvc-需要在nginx-deploymentyaml外部硬盘替换为其他方式&#34;&gt;如不使用pv和pvc, 需要在nginx-deployment.yaml外部硬盘替换为其他方式.&lt;/h4&gt;
&lt;h4 id=&#34;创建pv-pv-blogyaml&#34;&gt;创建pv, pv-blog.yaml&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-blog
  namespace: nginx-space
spec:
  capacity:
    storage: 300Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: &amp;quot;/root/www.actiger.com&amp;quot;

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;创建pvc-pvc-blogyaml&#34;&gt;创建pvc, pvc-blog.yaml&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-blog
  namespace: nginx-space
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: &amp;quot;&amp;quot;
  resources:
    requests:
      storage: 300Mi
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-创建服务&#34;&gt;3. 创建服务&lt;/h3&gt;
&lt;h4 id=&#34;如需更改里面内容-需要先删除kubectl-delete--f--防止生成没使用的pod-如有错误参考-a-hrefhttpsactigercomblogdockerkubernetes安装-target_blank通过日志排查a&#34;&gt;如需更改里面内容, 需要先删除kubectl delete -f * 防止生成没使用的pod. 如有错误参考 &lt;a href=&#34;https://actiger.com/blog/docker/kubernetes安装/&#34; target=&#34;_blank&#34;&gt;通过日志排查&lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;kubectl apply -f default-backend.yaml,ingress-secret.yml,my-nginx.yml,nginx-deployment.yaml,nginx-ingress-controller-rbac.yml,nginx-ingress-controller.yaml,pv-blog.yaml,pvc-blog.yaml

# 查看pods
kubectl get pods -n nginx-space

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-访问a-hrefhttpsactigercom-target_blankhttpsactigercoma-替换你的地址就可以可以hosts指定自己的域名-虚拟机ip对应到域名上&#34;&gt;4. 访问&lt;a href=&#34;https://actiger.com/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://actiger.com/&#34;&gt;https://actiger.com/&lt;/a&gt;&lt;/a&gt;, 替换你的地址就可以(可以hosts指定自己的域名, 虚拟机ip对应到域名上).&lt;/h3&gt;

    </description>
    </item>
    
    <item>
    <title>Kubernetes安装</title>
    <link>https://charles-one.github.io/actiger/blog/docker/kubernetes%E5%AE%89%E8%A3%85/</link>
    <pubDate>Tue, 04 Jun 2019 21:14:43 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/docker/kubernetes%E5%AE%89%E8%A3%85/</guid>
    <description>
        &lt;h3 id=&#34;1-pd安装2个centos76-1816虚拟机例如主机名cc和主机名cc2-或2台云主机-或vm安装虚拟机建议使用主机同一网络请勿使用克隆-克隆的虚拟与原虚拟机product_uuid一致&#34;&gt;1. PD安装2个Centos7.6 1816虚拟机(例如主机名cc和主机名cc2), 或2台云主机, 或VM安装虚拟机(建议使用主机同一网络).请勿使用克隆, 克隆的虚拟与原虚拟机product_uuid一致.&lt;/h3&gt;
&lt;h3 id=&#34;安装或启动过程中容易碰到问题-日志排查图放在前面a-hrefhttpskubernetesiozhdocssetupindependentinstall-kubeadmcheck-required-ports-target_blank官方安装地址a&#34;&gt;安装或启动过程中容易碰到问题, 日志排查图放在前面&lt;a href=&#34;https://kubernetes.io/zh/docs/setup/independent/install-kubeadm/#check-required-ports&#34; target=&#34;_blank&#34;&gt;官方安装地址&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://img.actiger.com/blog/tech/Kubernetes.png&#34; alt=&#34;排查&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-安装前检查&#34;&gt;2. 安装前检查&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;hostname必须不一致&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;hostname
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;网络互通, 互ping&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mac ip地址不一致&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;ifconfig
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;product_uuid不一致&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;cat /sys/class/dmi/id/product_uuid
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;禁用Swap交换分区, 保证kubelet正确运行, 必须永久禁用. 在安装设置中有对应的设置.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3-安装前2台虚拟机都需要的设置&#34;&gt;3. 安装前2台虚拟机都需要的设置&lt;/h3&gt;
&lt;ol start=&#34;0&#34;&gt;
&lt;li&gt;安装指定版本的docker.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;
# 移除旧版本docker
yum remove docker \
              docker-common \
              docker-selinux \
              docker-engine

# 安装工具
yum install -y yum-utils \
device-mapper-persistent-data \
  lvm2


# 安装指定版本containerd.io
yum install https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.6-3.3.el7.x86_64.rpm


# 下载设置源
yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo


# 查看全部版本的docker.
yum list docker-ce --showduplicates | sort -r

# kubernetes支持最高18.09
yum install docker-ce-18.09.9-3.el7

# 如yum失败, 使用dnf
dnf install docker-ce-18.09.9-3.el7

# 设置开机启动docker, 启动docker

systemctl enable docker
systemctl start docker

&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;关闭防火墙, 不关闭集群间有些pod可能无法通信.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;systemctl stop firewalld

# 禁止开机启动
systemctl disable firewalld
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;永久禁用交换分区swap.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# vi /etc/fstab
注释最后一行的swap

# 可在操作步骤3后一起重启.
reboot
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;装SELinux设置permissive模式&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;sed -i &#39;s/^SELINUX=enforcing$/SELINUX=permissive/&#39; /etc/selinux/config

# 重启
reboot

&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;安装源&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;
# 国内
cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=0
EOF


# 国外主机
cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
exclude=kube*
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;解决国内缺少镜像问题&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# 第一种方式, 脚本获取镜像并重命名
vim images.sh

#!/bin/bash
images=(
    kube-apiserver:v1.15.6
    kube-controller-manager:v1.15.6
    kube-scheduler:v1.15.6
    kube-proxy:v1.15.6
    pause:3.1
    etcd:3.3.10
    coredns:1.3.1

)

for imageName in ${images[@]} ; do
    docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/$imageName
    docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/$imageName k8s.gcr.io/$imageName
done



# 第二种方式, 搜索下载, 并重命名


# 查看必需镜像
kubeadm config images list

# 下载必需镜像
kubeadm config images pull

# 下载不了的images, 搜索到, 下载, 重命名就行

docker search 
docker pull
docker tag 

docker pull mirrorgooglecontainers/kube-apiserver:v1.14.2
docker pull mirrorgooglecontainers/kube-controller-manager:v1.14.2
docker pull mirrorgooglecontainers/kube-scheduler:v1.14.2
docker pull mirrorgooglecontainers/kube-proxy:v1.14.2
docker pull mirrorgooglecontainers/pause:3.1
docker pull mirrorgooglecontainers/etcd:3.3.10
docker pull coredns/coredns:1.3.1

docker tag mirrorgooglecontainers/kube-controller-manager:v1.14.2 k8s.gcr.io/kube-controller-manager:v1.14.2
docker tag mirrorgooglecontainers/kube-scheduler:v1.14.2  k8s.gcr.io/kube-scheduler:v1.14.2
docker tag mirrorgooglecontainers/kube-apiserver:v1.14.2 k8s.gcr.io/kube-apiserver:v1.14.2
docker tag mirrorgooglecontainers/kube-proxy:v1.14.2 k8s.gcr.io/kube-proxy:v1.14.2
docker tag mirrorgooglecontainers/pause:3.1 k8s.gcr.io/pause:3.1
docker tag mirrorgooglecontainers/etcd:3.3.10 k8s.gcr.io/etcd:3.3.10
docker tag coredns/coredns:1.3.1 k8s.gcr.io/coredns:1.3.1

&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;解决网络错误&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;
cat &amp;lt;&amp;lt;EOF &amp;gt;  /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF
sysctl --system
modprobe br_netfilter

&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;设置推荐的systemd driver&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# Setup daemon.
cat &amp;gt; /etc/docker/daemon.json &amp;lt;&amp;lt;EOF
{
  &amp;quot;exec-opts&amp;quot;: [&amp;quot;native.cgroupdriver=systemd&amp;quot;],
  &amp;quot;log-driver&amp;quot;: &amp;quot;json-file&amp;quot;,
  &amp;quot;log-opts&amp;quot;: {
    &amp;quot;max-size&amp;quot;: &amp;quot;100m&amp;quot;
  },
  &amp;quot;storage-driver&amp;quot;: &amp;quot;overlay2&amp;quot;,
  &amp;quot;storage-opts&amp;quot;: [
    &amp;quot;overlay2.override_kernel_check=true&amp;quot;
  ]
}
EOF

mkdir -p /etc/systemd/system/docker.service.d

# Restart Docker
systemctl daemon-reload
systemctl restart docker

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-主master和从node需要开放的端口-防火墙可以打开-执行完毕后再关闭-80443个人补充的-官方中并没有&#34;&gt;4. 主master和从node需要开放的端口, 防火墙可以打开, 执行完毕后再关闭. 80,443个人补充的, 官方中并没有.&lt;/h3&gt;
&lt;h4 id=&#34;1-在主节点上写入hosts内容&#34;&gt;1. 在主节点上写入hosts内容&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;# 在一台机器上, 添加ip和主机名到/etc/hosts中

10.211.55.5 cc
10.211.55.6 cc2

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-master节点需要开放的端口-例如cc主机中&#34;&gt;2. Master节点需要开放的端口, 例如cc主机中&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;systemctl start firewalld

firewall-cmd --zone=public --add-port=6443/tcp --permanent

firewall-cmd --zone=public --add-port=2379-2380/tcp --permanent

firewall-cmd --zone=public --add-port=10250/tcp --permanent

firewall-cmd --zone=public --add-port=10251/tcp --permanent

firewall-cmd --zone=public --add-port=10252/tcp --permanent

firewall-cmd --zone=public --add-port=80/tcp --permanent

firewall-cmd --zone=public --add-port=443/tcp --permanent

firewall-cmd --reload

systemctl stop firewalld

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;3-node节点需要开放的端口-如cc2主机&#34;&gt;3. Node节点需要开放的端口, 如cc2主机.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;systemctl start firewalld

firewall-cmd --zone=public --add-port=10250/tcp --permanent

firewall-cmd --zone=public --add-port=10254/tcp --permanent

firewall-cmd --zone=public --add-port=30000-32767/tcp --permanent


firewall-cmd --zone=public --add-port=80/tcp --permanent


firewall-cmd --zone=public --add-port=443/tcp --permanent

firewall-cmd --reload

systemctl stop firewalld

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;5-开始安装kubernetes&#34;&gt;5. 开始安装Kubernetes&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
# 查看所有可安装的k8s版本

yum list --showduplicates kubeadm --disableexcludes=kubernetes

yum install -y kubelet-1.15.6 kubeadm-1.15.6  kubectl-1.15.6 --disableexcludes=kubernetes


# 设置开机启动
systemctl enable kubelet &amp;amp;&amp;amp; systemctl start kubelet

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;6-主机master上执行初始化&#34;&gt;6. 主机master上执行初始化.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;

kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=&amp;lt;服务器ip&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;a-name77-对用户的设置-如果想cc或cc2中任何用户root或者普通用户可操作kubectl-需要装kube文件移动到对应的用户下a&#34;&gt;&lt;a name=&#34;7&#34;&gt;7. 对用户的设置, 如果想cc或cc2中任何用户(root或者普通用户)可操作kubectl, 需要装.kube文件移动到对应的用户下.&lt;/a&gt;&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;8-查看是否初完成-解决coredns-pending问题&#34;&gt;8. 查看是否初完成, 解决coredns pending问题&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# 检查主机是否准备完成

kubectl get nodes
# 会显示not ready, 安装下面的网络插件即可解决

# 查看系统pod是否初始化完成
kubectl get pods -n kube-system
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;a-name99-corednse显示pending中-解决安装网络插件-安装完毕等待几分钟即可a&#34;&gt;&lt;a name=&#34;9&#34;&gt;9. corednse显示pending中, 解决安装网络插件, 安装完毕等待几分钟即可.&lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;curl -O https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

kubectl apply -f kube-flannel.yml

kubectl apply -f &amp;quot;https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d &#39;\n&#39;)&amp;quot;

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;10-添加node-在node节点执行-初始化完会显示在列表中&#34;&gt;10. 添加node, 在node节点执行, 初始化完会显示在列表中&lt;/h3&gt;
&lt;h4 id=&#34;添加节点时确认执行a-href9第9步a的网络插件安装&#34;&gt;添加节点时确认执行&lt;a href=&#34;#9&#34;&gt;第9步&lt;/a&gt;的网络插件安装&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;kubeadm join 10.211.55.5:6443 --token ylml1p.xhp333geob6tvtkh \
--discovery-token-ca-cert-hash sha256:e5541130096be094

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;11-出现错误-通过日志排查问题&#34;&gt;11. 出现错误, 通过日志排查问题.&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://img.actiger.com/blog/tech/Kubernetes.png&#34; alt=&#34;排查&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;12-补充错误&#34;&gt;12. 补充错误&lt;/h3&gt;
&lt;h5 id=&#34;the-connection-to-the-server-localhost8080-was-refused---did-you-specify-the-right-host-or-port&#34;&gt;The connection to the server localhost:8080 was refused - did you specify the right host or port?&lt;/h5&gt;
&lt;p&gt;则需要执行&lt;a href=&#34;#7&#34;&gt;第7条内容.&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;解决-procsysnetbridgebridge-nf-call-iptables-contents-are-not-set-to-1&#34;&gt;解决 /proc/sys/net/bridge/bridge-nf-call-iptables contents are not set to 1&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;echo &#39;1&#39; &amp;gt; /proc/sys/net/bridge/bridge-nf-call-iptables
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;13-重置节点&#34;&gt;13. 重置节点&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;kubeadm reset

rm -rf $HOME/.kube/
rm -rf /var/lib/cni/
rm -rf /var/lib/kubelet/*
rm -rf /etc/cni/
ip link delete cni0
ip link delete flannel.1
systemctl restart docker
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;14-kubernetes命令&#34;&gt;14. kubernetes命令&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# kubernetes将pod调度到master节点

kubectl taint node &amp;lt;主机节点名称&amp;gt; node-role.kubernetes.io/master-
kubectl taint node mm.com node-role.kubernetes.io/master-

# 恢复Master Only状态

kubectl taint node &amp;lt;主机节点名称&amp;gt; node-role.kubernetes.io/master=&amp;quot;&amp;quot;

# 立即删除一个pod
kubectl delete pods &amp;lt;pod&amp;gt; --grace-period=0 --force
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>Kubernetes太难了</title>
    <link>https://charles-one.github.io/actiger/blog/docker/kubernetes%E5%A4%AA%E9%9A%BE%E4%BA%86/</link>
    <pubDate>Mon, 27 May 2019 00:59:47 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/docker/kubernetes%E5%A4%AA%E9%9A%BE%E4%BA%86/</guid>
    <description>
        &lt;h3 id=&#34;配置kubernets东西太多-很容易出错&#34;&gt;配置Kubernets东西太多, 很容易出错&lt;/h3&gt;
&lt;h3 id=&#34;出错信息不好找kubectl-describe-pod-nginxllllll-不好用&#34;&gt;出错信息不好找kubectl describe pod nginxllllll, 不好用&lt;/h3&gt;
&lt;h3 id=&#34;kubernets这种复杂的配置是和docker是对立-就不能把配置写成docker-很多工作可以交给docker来做&#34;&gt;Kubernets这种复杂的配置是和docker是对立, 就不能把配置写成docker, 很多工作可以交给docker来做&lt;/h3&gt;
&lt;h3 id=&#34;很烦&#34;&gt;很烦&lt;/h3&gt;
&lt;h3 id=&#34;更是惊了-不能用缓存-什么玩意-有了缓存kubelet不能起动&#34;&gt;更是惊了, 不能用缓存, 什么玩意, 有了缓存kubelet不能起动&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://img.actiger.com/blog/living/hardly.jpeg&#34; alt=&#34;hardly&#34;&gt;&lt;/p&gt;

    </description>
    </item>
    
    <item>
    <title>Centos7.0使用SSHKEY拉取github代码失败</title>
    <link>https://charles-one.github.io/actiger/blog/linux/centos7.0%E4%BD%BF%E7%94%A8sshkey%E6%8B%89%E5%8F%96github%E4%BB%A3%E7%A0%81%E5%A4%B1%E8%B4%A5/</link>
    <pubDate>Thu, 23 May 2019 01:17:49 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/centos7.0%E4%BD%BF%E7%94%A8sshkey%E6%8B%89%E5%8F%96github%E4%BB%A3%E7%A0%81%E5%A4%B1%E8%B4%A5/</guid>
    <description>
        &lt;h3 id=&#34;1-报错信息与正确信息对比-今天使用ssh-key拉取github代码又失败了-为什么是又-a-hrefhttpsactigercombloglinuxcentos7使用ssh-key拉取github项目失败-target_blank上次端口错误a&#34;&gt;1. 报错信息与正确信息对比. 今天使用SSH key拉取github代码又失败了, 为什么是又😂. &lt;a href=&#34;https://actiger.com/blog/linux/centos7使用ssh-key拉取github项目失败/&#34; target=&#34;_blank&#34;&gt;上次端口错误&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;贴出报错信息&#34;&gt;贴出报错信息&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
# 出错主机日志
ssh -vT git@github.com

OpenSSH_6.5

Server accepts key: pkalg ssh-rsa blen 279
debug1: key_parse_private_pem: PEM_read_PrivateKey failed
debug1: read PEM private key done: type &amp;lt;unknown&amp;gt;
Enter passphrase for key &#39;/root/.ssh/git_cron&#39;:

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;本机正确的日志&#34;&gt;本机正确的日志&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ssh -vT git@github.com

OpenSSH_7.9p1, LibreSSL 2.7.3
debug1: Reading configuration data /Users/csx/.ssh/config
debug1: /Users/csx/.ssh/config line 4: Applying options for githu


debug1: Authentications that can continue: publickey
debug1: Next authentication method: publickey
debug1: Offering public key: /Users/csx/.ssh/git_rsa RSA SHA256:Teicz+bsGWbbB4P327A0nB5eU/u+aVxxn4RNxS3QBZc explicit
debug1: Server accepts key: /Users/csx/.ssh/git_rsa RSA SHA256:Teicz+bsGWbbB4P327A0nB5eU/u+aVxxn4RNxS3QBZc explicit


&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-分析与尝试解决&#34;&gt;2. 分析与尝试解决.&lt;/h3&gt;
&lt;h4 id=&#34;我的ssh-key生成的时候是没有使用passphrase-每次在主机去测试的时候都让填写-很奇怪&#34;&gt;我的SSH key生成的时候是没有使用passphrase, 每次在主机去测试的时候都让填写, 很奇怪.&lt;/h4&gt;
&lt;h4 id=&#34;提示pem_read_privatekey-failed问题-怀疑是权限错误&#34;&gt;提示PEM_read_PrivateKey failed问题, 怀疑是权限错误.&lt;/h4&gt;
&lt;h4 id=&#34;将ssh设置成700-rsa设置成600-还提示同样的错误&#34;&gt;将.ssh设置成700, rsa设置成600, 还提示同样的错误&lt;/h4&gt;
&lt;h4 id=&#34;继续在网上搜索-这篇-a-hrefhttpsstackoverflowcomquestions43724881sshd-is-asking-for-a-passphrase-for-my-key-whereas-there-is-no-passphrase-target_blank帖子a&#34;&gt;继续在网上搜索, 这篇 &lt;a href=&#34;https://stackoverflow.com/questions/43724881/sshd-is-asking-for-a-passphrase-for-my-key-whereas-there-is-no-passphrase&#34; target=&#34;_blank&#34;&gt;帖子&lt;/a&gt;&lt;/h4&gt;
&lt;h4 id=&#34;发现openssh-65支持的格式是&#34;&gt;发现OpenSSH 6.5支持的格式是&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;-----BEGIN RSA PRIVATE KEY-----

-----END RSA PRIVATE KEY-----
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;我是使用本机生成的ssh-key格式&#34;&gt;我是使用本机生成的SSH KEY格式&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
-----BEGIN OPENSSH PRIVATE KEY-----

-----END OPENSSH PRIVATE KEY-----
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;79的版本已经使用新版本ssh-key格式-65的不支持造成的&#34;&gt;7.9的版本已经使用新版本SSH KEY格式, 6.5的不支持造成的.&lt;/h4&gt;
&lt;h3 id=&#34;3-解决办法-是更新openssh&#34;&gt;3. 解决办法, 是更新OpenSSH&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# 查看可以更新的openSSH
yum update

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;手动选择openssh的软件包即可-推荐全部更新-因为老版本的软件使用问题太多了&#34;&gt;手动选择openssh的软件包即可, 推荐全部更新, 因为老版本的软件使用问题太多了.&lt;/h4&gt;

    </description>
    </item>
    
    <item>
    <title>自动生成博客和提交到Github</title>
    <link>https://charles-one.github.io/actiger/blog/linux/%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E5%8D%9A%E5%AE%A2%E5%92%8C%E6%8F%90%E4%BA%A4%E5%88%B0github/</link>
    <pubDate>Mon, 20 May 2019 22:37:07 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E5%8D%9A%E5%AE%A2%E5%92%8C%E6%8F%90%E4%BA%A4%E5%88%B0github/</guid>
    <description>
        &lt;h3 id=&#34;使用hugo过程中-我只关心博客的内容-至于生成博客完全不需要记录每次提交的内容-而且现在需要提交到2个地址上-同一个改动要提交2次&#34;&gt;使用Hugo过程中, 我只关心博客的内容, 至于生成博客完全不需要记录每次提交的内容. 而且现在需要提交到2个地址上, 同一个改动要提交2次.&lt;/h3&gt;
&lt;h3 id=&#34;只需要在content建立一个git项目进行内行管理即可&#34;&gt;只需要在content建立一个git项目进行内行管理即可.&lt;/h3&gt;
&lt;h4 id=&#34;注意已经生成的博客-更改文件名-是需要手动删除-已经生成的博客目录中的文件&#34;&gt;注意已经生成的博客, 更改文件名, 是需要手动删除, 已经生成的博客目录中的文件.&lt;/h4&gt;
&lt;h4 id=&#34;1-创建hugoallsh-用其他编辑器也可&#34;&gt;1. 创建hugoAll.sh, 用其他编辑器也可.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;vim hugoAll.sh

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-更改文件权限-变成可执行文件&#34;&gt;2. 更改文件权限, 变成可执行文件&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;chmod +x hugoAll.sh
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;3-添加下面内容到脚本中-actiger更改成你的hugo目录-把wwwactigercom文件夹更改成自己的文件夹就可以了&#34;&gt;3. 添加下面内容到脚本中, actiger更改成你的hugo目录, 把www.actiger.com文件夹更改成自己的文件夹就可以了.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;TIME=$(date &amp;quot;+%H:%M:%S %A %Y-%m-%d&amp;quot;)

ROOTPATH=&amp;quot;${HOME}/Documents/actiger/&amp;quot;

BLOGPATH=&amp;quot;${HOME}/Documents/actiger/www.actiger.com/&amp;quot;
BLOGURL=&amp;quot;https://actiger.com/&amp;quot;
BLOGDEST=&amp;quot;www.actiger.com&amp;quot;

GITPATH=&amp;quot;${HOME}/Documents/actiger/public/&amp;quot;
GITPAGES=&amp;quot;https://charles-one.github.io/actiger/&amp;quot;

echo &amp;quot;\033[42;30m 开始自动生成${BLOGURL}博客, git自动添加标签, 推送到github上... \033[0m&amp;quot;

cd ${ROOTPATH}

# 生成www.actiger.com博客目录文件, destination表生成内容写到哪个目录中
hugo --theme=paper --baseUrl=&amp;quot;${BLOGURL}&amp;quot; --destination=&amp;quot;${BLOGDEST}&amp;quot;

cd ${BLOGPATH}

git stage .
git commit -m &amp;quot;自动标签${TIME}&amp;quot;

git push github master


echo &amp;quot;\033[42;30m 推送完成. \033[0m&amp;quot;
echo &amp;quot;                                                                                       &amp;quot;
echo &amp;quot;\033[42;30m开始自动生成${GITPAGES}博客, git自动添加标签, 推送到github上... \033[0m&amp;quot;

cd ${ROOTPATH}
# 生成默认github博客目录文件
hugo --theme=paper --baseUrl=&amp;quot;${GITPAGES}&amp;quot;

cd ${GITPATH}

git stage .
git commit -m &amp;quot;自动标签${TIME}&amp;quot;

git push github master


echo &amp;quot;\033[42;30m 推送完成. \033[0m&amp;quot;



&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;4-执行即可&#34;&gt;4. 执行即可.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;./hugoAll.sh

# 或者
sh hugoAll.sh

&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>Linux.Mac三宝剑ag fasd fzf</title>
    <link>https://charles-one.github.io/actiger/blog/linux/linux.mac%E4%B8%89%E5%AE%9D%E5%89%91ag-fasd-fzf/</link>
    <pubDate>Sun, 19 May 2019 18:03:22 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/linux.mac%E4%B8%89%E5%AE%9D%E5%89%91ag-fasd-fzf/</guid>
    <description>
        &lt;h3 id=&#34;1简介与安装&#34;&gt;1.简介与安装&lt;/h3&gt;
&lt;h4 id=&#34;1-简介ag是比grep更好的搜索软件-提供高亮显示-fasd时空机-去过的地址都直接跳过去-再也不用cd来cd去了-fzf更强大的搜索文件&#34;&gt;1. 简介ag是比grep更好的搜索软件, 提供高亮显示. Fasd时空机, 去过的地址都直接跳过去, 再也不用cd来cd去了. Fzf更强大的搜索文件.&lt;/h4&gt;
&lt;h4 id=&#34;2-安装ag-fasd-fzf&#34;&gt;2. 安装ag, Fasd Fzf&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;# mac
brew install the_silver_searcher fzf fasd

# 还需要把 eval &amp;quot;$(fasd --init auto)&amp;quot; 放到.bashrc或者.zshrc中
# 重新生效source .bashrc或者source .zshrc

# linux
git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install

yum install the_silver_searcher

yum install fasd

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-使用&#34;&gt;2. 使用.&lt;/h3&gt;
&lt;h4 id=&#34;1-最有命令说明-需要配置2中配置才可以使用bat是与cat类似有语法高亮&#34;&gt;1. 最有命令说明, 需要配置2中配置才可以使用.(bat是与cat类似,有语法高亮)&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;# tab键补全, 最近打开最多带有a名字的匹配文件, 在任何目录中你都可以直接编辑你的相要的文件
v a

# 在任意目录下都可以这样使用, cat与ag联用, 匹配a文件, 并搜索aaa
caf a | ag &amp;quot;aaa&amp;quot;

# 跳转, 配置最近最多a文件夹名, tab补全所有匹配的a的文件
j a

# 预览当前目录下的文件
ffp


&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-全部配置信息&#34;&gt;2. 全部配置信息.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;alias jan=&#39;fasd -a&#39;        # any
alias js=&#39;fasd -si&#39;       # show / search / select
alias jd=&#39;fasd -d&#39;        # directory
alias jf=&#39;fasd -f&#39;        # file
alias jsd=&#39;fasd -sid&#39;     # interactive directory selection
alias jsf=&#39;fasd -sif&#39;     # interactive file selection
alias j=&#39;fasd_cd -d&#39;     # cd, same functionality as j in autojump
alias jz=&#39;fasd_cd -d -i&#39; # cd with interactive selection
alias jdd=&#39;fasd -D&#39; # 删除一个路径

# ja foo 列出最近操作的路径匹配&#39;foo&#39;的文件与目录
# jf foo 列出最近操作的路径匹配&#39;foo&#39;的文件
# jd foo 列出最近操作的路径匹配&#39;foo&#39;的目录
# js foo 列出最近操作的路径匹配&#39;foo&#39;的文件与目录，并可以通过序号选择
# jsf foo 列出最近操作的路径匹配&#39;foo&#39;的文件，并可以通过序号选择
# jsd foo 列出最近操作的路径匹配&#39;foo&#39;的目录，并可以通过序号选择
# j foo cd到最近操作的匹配&#39;foo&#39;并且得分最高的目录
# jz foo 列出最近操作的路径匹配&#39;foo&#39;的目录，通过序号选择，然后cd进目录
# jdd 删除一个路径

# File
alias v=&#39;jf -e vim&#39;
alias baf=&#39;jf -e bat&#39;
alias batf=&#39;jf -e bat&#39;
alias caf=&#39;jf -e cat&#39;
alias catf=&#39;jf -e cat&#39;
alias py3f=&amp;quot;jf -e python3&amp;quot;
alias lsf=&amp;quot;jd -e ls&amp;quot;
alias pbcopyf=&#39;jf -e pbcopy&#39;
alias pbpastef=&#39;jf -e pbpaste&#39;
alias scpf=&#39;jf -e scp&#39;
alias shf=&#39;jf -e sh&#39;
# Folder
alias mvf=&#39;jd -e mv&#39;

alias ffall=&amp;quot;find / -type f | fzf | pbcopy&amp;quot;
alias ffm=&amp;quot;find ~/ -type f | fzf | pbcopy&amp;quot;
alias ff=&amp;quot;find . -type f | fzf | pbcopy&amp;quot;
alias ffec=&amp;quot;find ~/ -type f | fzf -e | pbcopy&amp;quot;
# preview file
alias ffp=&#39;fzf --preview &#39;&amp;quot;&#39;&amp;quot;&#39;[[ $(file --mime {}) =~ binary ]] &amp;amp;&amp;amp; echo {} is a binary file || (rougify {}  || highlight -O ansi -l {} || coderay {} || cat {}) 2&amp;gt; /dev/null | head -500&#39;&amp;quot;&#39;&amp;quot;

# 跳到最近匹配的目录中

jj() {
    [ $# -gt 0 ] &amp;amp;&amp;amp; fasd_cd -d &amp;quot;$*&amp;quot; &amp;amp;&amp;amp; return
    local dir
    dir=&amp;quot;$(fasd -Rdl &amp;quot;$1&amp;quot; | fzf -1 -0 --no-sort +m)&amp;quot; &amp;amp;&amp;amp; cd &amp;quot;${dir}&amp;quot; || return 1
}

jje() {
    [ $# -gt 0 ] &amp;amp;&amp;amp; fasd_cd -d &amp;quot;$*&amp;quot; &amp;amp;&amp;amp; return
    local dir
    dir=&amp;quot;$(fasd -Rdl &amp;quot;$1&amp;quot; | fzf -e -1 -0 --no-sort +m)&amp;quot; &amp;amp;&amp;amp; cd &amp;quot;${dir}&amp;quot; || return 1
}

# 从当前路径搜索并跳转

jcd() {
  local dir
  dir=$(find ${1:-.} -path &#39;*/\.*&#39; -prune \
                  -o -type d -print 2&amp;gt; /dev/null | fzf +m) &amp;amp;&amp;amp;
  cd &amp;quot;$dir&amp;quot;
}
# 从当前目录开始跳转
jcde() {
  local dir
  dir=$(find ${1:-.} -path &#39;*/\.*&#39; -prune \
                  -o -type d -print 2&amp;gt; /dev/null | fzf -e +m) &amp;amp;&amp;amp;
  cd &amp;quot;$dir&amp;quot;
}

# 匹配文件用vim打开
jv() {
    [ $# -gt 0 ] &amp;amp;&amp;amp; fasd -f -e ${EDITOR} &amp;quot;$*&amp;quot; &amp;amp;&amp;amp; return
    local file
    file=&amp;quot;$(fasd -Rfl &amp;quot;$1&amp;quot; | fzf -1 -0 --no-sort +m)&amp;quot; &amp;amp;&amp;amp; vim &amp;quot;${file}&amp;quot; || return 1
}

jve() {
    [ $# -gt 0 ] &amp;amp;&amp;amp; fasd -f -e ${EDITOR} &amp;quot;$*&amp;quot; &amp;amp;&amp;amp; return
    local file
    file=&amp;quot;$(fasd -Rfl &amp;quot;$1&amp;quot; | fzf -e -1 -0 --no-sort +m)&amp;quot; &amp;amp;&amp;amp; vim &amp;quot;${file}&amp;quot; || return 1
}

&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>介绍spf13插件使用和我的vim配置</title>
    <link>https://charles-one.github.io/actiger/blog/linux/%E4%BB%8B%E7%BB%8Dspf13%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8%E5%92%8C%E6%88%91%E7%9A%84vim%E9%85%8D%E7%BD%AE/</link>
    <pubDate>Sun, 19 May 2019 17:16:53 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/%E4%BB%8B%E7%BB%8Dspf13%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8%E5%92%8C%E6%88%91%E7%9A%84vim%E9%85%8D%E7%BD%AE/</guid>
    <description>
        &lt;h3 id=&#34;1-spf13简介&#34;&gt;1. spf13简介&lt;/h3&gt;
&lt;h5 id=&#34;steve-francia使用的vim配置-vim插件插件集合-a-hrefhttpvimspf13com-target_blankhttpvimspf13coma&#34;&gt;Steve Francia使用的vim配置, vim插件插件集合. &lt;a href=&#34;http://vim.spf13.com/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://vim.spf13.com/&#34;&gt;http://vim.spf13.com/&lt;/a&gt;&lt;/a&gt;&lt;/h5&gt;
&lt;h3 id=&#34;2-spf13常用插件简单使用-中文&#34;&gt;2. spf13常用插件简单使用, 中文.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Surronund 编辑字符周围的符号的.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# *号表示当前光标停留位置, 所有的操作在vim的nomal模式

Old text                  Command     New text ~
&amp;quot;Hello *world!&amp;quot;           ds&amp;quot;         Hello world!
[123+4*56]/2              cs])        (123+456)/2
&amp;quot;Look ma, I&#39;m *HTML!&amp;quot;     cs&amp;quot;&amp;lt;q&amp;gt;      &amp;lt;q&amp;gt;Look ma, I&#39;m HTML!&amp;lt;/q&amp;gt;
if *x&amp;gt;3 {                 ysW(        if ( x&amp;gt;3 ) {
my $str = *whee!;         vllllS&#39;     my $str = &#39;whee!&#39;;

&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;EasyMotion 跳到任何地方&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# 再打对应的字符就可直接跳到单词的首字符位置
,,w

# 再打对应的字符就可直接跳到单词的尾字符位置
,,e
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Fugitive Git的插件, 可以vim中批量提交git文件, 查看git diff等.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# &amp;lt;leader&amp;gt; 这里就 , 键
&amp;lt;leader&amp;gt;gs :Gstatus
&amp;lt;leader&amp;gt;gd :Gdiff
&amp;lt;leader&amp;gt;gc :Gcommit
&amp;lt;leader&amp;gt;gb :Gblame
&amp;lt;leader&amp;gt;gl :Glog
&amp;lt;leader&amp;gt;gp :Git push

&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Syntastic 语法检查, 有语法错误的地方会有提示.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NERDTree vim的目录.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一些在Normal模式下的快捷键&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 切换是否显示NERDTree目录
control + e

# 切换到左边目录中
control + h

# 切换到右边文件中
control + l

# 在文件中左右切换是
shift + h 右, l 右

ctrl + w + h    光标 focus 左侧树形目录
ctrl + w + l    光标 focus 右侧文件显示窗口
ctrl + w + w    光标自动在左右侧窗口切换
ctrl + w + r    移动当前窗口的布局位置

o       在已有窗口中打开文件、目录或书签，并跳到该窗口
go      在已有窗口 中打开文件、目录或书签，但不跳到该窗口
t       在新 Tab 中打开选中文件/书签，并跳到新 Tab
T       在新 Tab 中打开选中文件/书签，但不跳到新 Tab
i       split 一个新窗口打开选中文件，并跳到该窗口
gi      split 一个新窗口打开选中文件，但不跳到该窗口
s       vsplit 一个新窗口打开选中文件，并跳到该窗口
gs      vsplit 一个新 窗口打开选中文件，但不跳到该窗口
!       执行当前文件
O       递归打开选中 结点下的所有目录
x       合拢选中结点的父目录
X       递归 合拢选中结点下的所有目录
e       Edit the current dif

双击    相当于 NERDTree-o
中键    对文件相当于 NERDTree-i，对目录相当于 NERDTree-e

D       删除当前书签

P       跳到根结点
p       跳到父结点
K       跳到当前目录下同级的第一个结点
J       跳到当前目录下同级的最后一个结点
k       跳到当前目录下同级的前一个结点
j       跳到当前目录下同级的后一个结点

C       将选中目录或选中文件的父目录设为根结点
u       将当前根结点的父目录设为根目录，并变成合拢原根结点
U       将当前根结点的父目录设为根目录，但保持展开原根结点
r       递归刷新选中目录
R       递归刷新根结点
m       显示文件系统菜单
cd      将 CWD 设为选中目录

I       切换是否显示隐藏文件
f       切换是否使用文件过滤器
F       切换是否显示文件
B       切换是否显示书签

q       关闭 NerdTree 窗口
?       切换是否显示 Quick Help

:tabnew [++opt选项] ［＋cmd］ 文件      建立对指定文件新的tab
:tabc   关闭当前的 tab
:tabo   关闭所有其他的 tab
:tabs   查看所有打开的 tab
:tabp   前一个 tab
:tabn   后一个 tab

标准模式下：
gT      前一个 tab
gt      后一个 tab

MacVim 还可以借助快捷键来完成 tab 的关闭、切换
cmd+w   关闭当前的 tab
cmd+{   前一个 tab
cmd+}   后一个 tab

&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Emmet.vim 用来快捷生成代码的&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# #标签可生成id, $是自增, *3是数据3
div&amp;gt;p#foo$*3&amp;gt;a

h$[title=item$]{Header $}*3

# 跳转到下一个编辑点
&amp;lt;leader&amp;gt; + n
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;NERDCommenter 用来智能注释的&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# 注释或取消注释
&amp;lt;leader&amp;gt; + c + 空格键

# 智能注释
&amp;lt;leader&amp;gt; + c + s
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;我个人的配置&#34;&gt;我个人的配置.&lt;/h3&gt;
&lt;h4 id=&#34;1-使用的插件vimrcbundleslocal&#34;&gt;1. 使用的插件.vimrc.bundles.local&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Bundle &#39;rizzatti/dash.vim&#39;
&amp;quot;Plugin &#39;heracek/HTML-AutoCloseTag&#39;, {&#39;name&#39;: &#39;HTML-AutoCloseTag2&#39;}
UnBundle &#39;amirh/HTML-AutoCloseTag&#39;


Bundle &#39;nginx.vim&#39;

# 快速搜索文件
Bundle &#39;junegunn/fzf.vim&#39;
Bundle &#39;junegunn/fzf&#39;, { &#39;dir&#39;: &#39;~/.fzf&#39;, &#39;do&#39;: &#39;./install --all&#39; }

# 让目录树也显示git文件状态
Bundle &#39;Xuyuanp/nerdtree-git-plugin&#39;

# 自动对齐
Bundle &#39;junegunn/vim-easy-align&#39;

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-使用的vimrclocal文件&#34;&gt;2. 使用的.vimrc.local文件.&lt;/h4&gt;
&lt;h4 id=&#34;1-强烈推荐设置新键到w保存-wq保存退出-q这些键&#34;&gt;1. 强烈推荐设置新键到:w保存, :wq保存退出, :q这些键&lt;/h4&gt;
&lt;h4 id=&#34;这样-快速-慢了就触发录制功能-再按q会退出&#34;&gt;这样, 快速, 慢了就触发录制功能, 再按q会退出.&lt;/h4&gt;
&lt;h4 id=&#34;保存退出就只用1个键2次就可以了-这个使用的最多-完成不用移动手指位置&#34;&gt;保存退出就只用1个键2次就可以了, 这个使用的最多, 完成不用移动手指位置.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;nnoremap qq :wq&amp;lt;CR&amp;gt;
nnoremap qw :w&amp;lt;CR&amp;gt;
nnoremap q0 :q&amp;lt;CR&amp;gt;
nnoremap q- :bw&amp;lt;CR&amp;gt;
nnoremap qa :qa&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-完整的vimrclocal文件&#34;&gt;2. 完整的.vimrc.local文件&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;set nospell
&amp;quot;退出编辑模式时自动保存
au InsertLeave *.* write

&amp;quot; 主题
&amp;quot;colo

&amp;quot;编辑行没有黑色条
highlight CursorLine cterm=NONE ctermbg=NONE
&amp;quot;设置编辑模式下, vim可以使用emacs的光标移动
inoremap &amp;lt;C-e&amp;gt; &amp;lt;END&amp;gt;
inoremap &amp;lt;C-a&amp;gt; &amp;lt;HOME&amp;gt;
inoremap &amp;lt;C-f&amp;gt; &amp;lt;Right&amp;gt;
inoremap &amp;lt;C-b&amp;gt; &amp;lt;Left&amp;gt;
inoremap &amp;lt;C-p&amp;gt; &amp;lt;up&amp;gt;
inoremap &amp;lt;C-n&amp;gt; &amp;lt;Down&amp;gt;
inoremap &amp;lt;C-d&amp;gt; &amp;lt;Delete&amp;gt;
inoremap &amp;lt;C-h&amp;gt; &amp;lt;BS&amp;gt;

&amp;quot;neocomplete不加载python文件的补全
&amp;quot;autocmd FileType python NeoCompleteLock

&amp;quot;禁用鼠标
&amp;quot;set mouse-=a

&amp;quot; fasd.vim &amp;lt;tab&amp;gt; shortkey
nnoremap &amp;lt;silent&amp;gt; &amp;lt;C-p&amp;gt; :Files&amp;lt;CR&amp;gt;

let g:ctrlp_map = &#39;&amp;lt;C-i&amp;gt;&amp;lt;c-p&amp;gt;&#39;

&amp;quot; emmet
let g:user_emmet_mode=&#39;a&#39;
let g:user_emmet_leader_key=&#39;&amp;lt;C-L&amp;gt;&#39;
let g:user_emmet_install_global = 0


autocmd FileType html,css,markdown EmmetInstall

set foldmethod=manual

hi Folded term=NONE cterm=NONE ctermbg=236

&amp;quot; Syntastic 自定义出现语法错误的提示符号.
&amp;quot;let g:syntastic_error_symbol = &amp;quot;\u2717&amp;quot;
&amp;quot;let g:syntastic_warning_symbol = &amp;quot;\u26A0&amp;quot;
let g:syntastic_error_symbol = &#39;●&#39;
let g:syntastic_warning_symbol = &#39;▶︎&#39;
let syntastic_style_error_symbol = &#39;○●&#39;
let syntastic_style_warning_symbol = &#39;○▶︎&#39;
let g:multi_cursor_use_default_mapping=0

&amp;quot; Default mapping
let g:multi_cursor_start_word_key      = &#39;&amp;lt;C-n&amp;gt;&#39;
let g:multi_cursor_select_all_word_key = &#39;&amp;lt;A-n&amp;gt;&#39;
let g:multi_cursor_start_key           = &#39;g&amp;lt;C-n&amp;gt;&#39;
let g:multi_cursor_select_all_key      = &#39;g&amp;lt;A-n&amp;gt;&#39;
let g:multi_cursor_next_key            = &#39;&amp;lt;C-n&amp;gt;&#39;
let g:multi_cursor_prev_key            = &#39;&amp;lt;C-p&amp;gt;&#39;
let g:multi_cursor_skip_key            = &#39;&amp;lt;C-x&amp;gt;&#39;


noremap &amp;lt;leader&amp;gt;fw :bw&amp;lt;CR&amp;gt;
noremap &amp;lt;leader&amp;gt;fn :bn&amp;lt;CR&amp;gt;
noremap &amp;lt;leader&amp;gt;fb :bp&amp;lt;CR&amp;gt;
noremap &amp;lt;leader&amp;gt;i i&amp;lt;CR&amp;gt;&amp;lt;Esc&amp;gt;
noremap &amp;lt;leader&amp;gt;tc :tabc&amp;lt;CR&amp;gt;
noremap &amp;lt;leader&amp;gt;to :tabo&amp;lt;CR&amp;gt;
noremap &amp;lt;leader&amp;gt;tn :tabnew&amp;lt;space&amp;gt;

noremap &amp;lt;leader&amp;gt;no :nohl&amp;lt;CR&amp;gt;

nmap &amp;lt;Leader&amp;gt;aa :Tabularize /+=&amp;lt;CR&amp;gt;
vmap &amp;lt;Leader&amp;gt;aa :Tabularize /+=&amp;lt;CR&amp;gt;

nmap &amp;lt;Leader&amp;gt;ff :EasyAlign&amp;lt;space&amp;gt;
vmap &amp;lt;Leader&amp;gt;ff :EasyAlign&amp;lt;space&amp;gt;

nmap ff- :EasyAlign */[:=\|]\+/is&amp;lt;CR&amp;gt;
vmap ff- :EasyAlign */[:=\|]\+/is&amp;lt;CR&amp;gt;
nmap ff, :EasyAlign */[,]\+/is&amp;lt;CR&amp;gt;
vmap ff, :EasyAlign */[,]\+/is&amp;lt;CR&amp;gt;
nmap ff; :EasyAlign */[;]\+/is&amp;lt;CR&amp;gt;
vmap ff; :EasyAlign */[;]\+/is&amp;lt;CR&amp;gt;
nmap ff= :EasyAlign */[\+]\+/is&amp;lt;CR&amp;gt;
vmap ff= :EasyAlign */[\+]\+/is&amp;lt;CR&amp;gt;
nmap ff0 :EasyAlign *\is&amp;lt;CR&amp;gt;
vmap ff0 :EasyAlign *\is&amp;lt;CR&amp;gt;


nnoremap qq :wq&amp;lt;CR&amp;gt;
nnoremap qw :w&amp;lt;CR&amp;gt;
nnoremap q0 :q&amp;lt;CR&amp;gt;
nnoremap q- :bw&amp;lt;CR&amp;gt;
nnoremap qa :qa&amp;lt;CR&amp;gt;


&amp;quot;autocmd VimEnter * NERDTree
&amp;quot; NERDTree 显示行号
let NERDTreeShowLineNumbers=1
let NERDTreeAutoCenter=1
&amp;quot; 是否显示隐藏文件
let NERDTreeShowHidden=0
&amp;quot; 设置宽度
let NERDTreeWinSize=28
&amp;quot; 在终端启动vim时，共享NERDTree
let g:nerdtree_tabs_open_on_console_startup=1
&amp;quot; 忽略一下文件的显示
let NERDTreeIgnore=[&#39;\.pyc&#39;,&#39;\~$&#39;,&#39;\.swp&#39;]
&amp;quot; 显示书签列表
let NERDTreeShowBookmarks=1


let g:NERDTreeIndicatorMapCustom = {
    \ &amp;quot;Modified&amp;quot;  : &amp;quot;⦿&amp;quot;,
    \ &amp;quot;Staged&amp;quot;    : &amp;quot;●&amp;quot;,
    \ &amp;quot;Untracked&amp;quot; : &amp;quot;○&amp;quot;,
    \ &amp;quot;Renamed&amp;quot;   : &amp;quot;➜&amp;quot;,
    \ &amp;quot;Unmerged&amp;quot;  : &amp;quot;□&amp;quot;,
    \ &amp;quot;Deleted&amp;quot;   : &amp;quot;✖&amp;quot;,
    \ &amp;quot;Dirty&amp;quot;     : &amp;quot;✗&amp;quot;,
    \ &amp;quot;Clean&amp;quot;     : &amp;quot;✔︎&amp;quot;,
    \ &#39;Ignored&#39;   : &#39;☒&#39;,
    \ &amp;quot;Unknown&amp;quot;   : &amp;quot;?&amp;quot;
    \ }



let g:deoplete#enable_at_startup = 1
&amp;quot;let g:pymode_init = 0
&amp;quot;let g:pymode_lint = 0

let g:pymode_python = &#39;python3&#39;

nmap &amp;lt;leader&amp;gt;mm i&amp;lt;space&amp;gt;&amp;lt;ESC&amp;gt;

&amp;quot; java

autocmd FileType java setlocal omnifunc=javacomplete#Complete

&amp;quot; youcompleteme
let g:ycm_global_ycm_extra_conf=&#39;~/.vim/.ycm_extra_conf.py&#39;
let g:ycm_key_invoke_completion = &#39;&amp;lt;c-x&amp;gt;&#39;


&amp;quot; tagbar
let g:tagbar_width=22
let g:tagbar_right=1

&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>LetsEncrypt申请与nginx配置SSL</title>
    <link>https://charles-one.github.io/actiger/blog/linux/letsencrypt%E7%94%B3%E8%AF%B7%E4%B8%8Enginx%E9%85%8D%E7%BD%AEssl/</link>
    <pubDate>Sun, 19 May 2019 04:04:30 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/letsencrypt%E7%94%B3%E8%AF%B7%E4%B8%8Enginx%E9%85%8D%E7%BD%AEssl/</guid>
    <description>
        &lt;h3 id=&#34;1-letsencrypt-证书申请-a-hrefhttpsletsencryptorggetting-started-target_blank官方指引a&#34;&gt;1. letsencrypt 证书申请. &lt;a href=&#34;https://letsencrypt.org/getting-started/&#34; target=&#34;_blank&#34;&gt;官方指引&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&#34;1-申请证书需要安装cerbto-a-hrefhttpsgithubcomcharles-oneshell-repositoryblobmasterinstall_certbotsh-target_blank脚本a&#34;&gt;1. 申请证书需要安装Cerbto. &lt;a href=&#34;https://github.com/Charles-one/shell-repository/blob/master/install_Certbot.sh&#34; target=&#34;_blank&#34;&gt;脚本&lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;yum -y install epel-release

yum -y install yum-utils

yum-config-manager --enable rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional

yum install certbot python2-certbot-nginx

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-手动去申请证-我这里申请全部子域名的-验证身份的方式需要在域名供应商添加dns-txt的&#34;&gt;2. 手动去申请证, 我这里申请全部子域名的. 验证身份的方式需要在域名供应商添加dns txt的.&lt;/h4&gt;
&lt;h5 id=&#34;1-开始安装-有下面提示信息-这里需要暂停-去添加dns-txt即第2步&#34;&gt;1. 开始安装, 有下面提示信息. 这里需要暂停, 去添加DNS TXT即第2步.&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;# 执行
certbot certonly  -d &amp;quot;*.actiger.com&amp;quot; --manual --preferred-challenges dns-01  --server https://acme-v02.api.letsencrypt.org/directory

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;执行到下面提示信息后-需要暂停&#34;&gt;执行到下面提示信息后, 需要暂停.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#Please deploy a DNS TXT record under the name
#_acme-challenge.actiger.com with the following value:
#
#这里是需要添加的DNS TXT信息
#
#Before continuing, verify the record is deployed.
#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;3-添加dns-txt&#34;&gt;3. 添加DNS TXT&lt;/h5&gt;
&lt;h5 id=&#34;1-在域名服务商中-添加dns-txt&#34;&gt;1. 在域名服务商中, 添加DNS TXT&lt;/h5&gt;
&lt;h5 id=&#34;2-测试dns-txt是否生效&#34;&gt;2. 测试DNS TXT是否生效.&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;# Windows
nslookup -qt=mx _acme-challenge.actiger.com

# Mac linux
dig TXT _acme-challenge.actiger.com

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;看到你添加的dns-txt才可以执行确认-进行下一步&#34;&gt;看到你添加的DNS TXT才可以执行确认, 进行下一步.&lt;/h4&gt;
&lt;h4 id=&#34;成功后-会告诉证书存放位置-及什么时间到期&#34;&gt;成功后, 会告诉证书存放位置, 及什么时间到期&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://img.actiger.com/blog/tech/success.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-拉取docker-compose文件-运行&#34;&gt;3. 拉取docker-compose文件, 运行.&lt;/h3&gt;
&lt;h4 id=&#34;1-注意修改内容-非常重要&#34;&gt;1. 注意修改内容, 非常重要.&lt;/h4&gt;
&lt;h5 id=&#34;docker-composeyml-中-wwwactigercom需要更改为自己的&#34;&gt;docker-compose.yml 中 &lt;a href=&#34;http://www.actiger.com&#34;&gt;www.actiger.com&lt;/a&gt;需要更改为自己的.&lt;/h5&gt;
&lt;h5 id=&#34;etcnginxconfddefaultconf-中wwwactigercom-ssl_certificate-ssl_certificate_key需要更改为自己的&#34;&gt;etc/nginx/conf.d/default.conf 中www.actiger.com, ssl_certificate, ssl_certificate_key需要更改为自己的.&lt;/h5&gt;
&lt;h4 id=&#34;2-拉取运行-hugo文件也拉取到nginx-https-hugoblog文件夹中&#34;&gt;2. 拉取运行, hugo文件也拉取到nginx-https-hugoBlog文件夹中.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;# 拉取docker-compose文件

git clone https://github.com/Charles-one/docker-compose-repository.git ~/docker-compose-repository

cp -r  ~/docker-compose-repository/nginx-https-hugoBlog ~/nginx-https-hugoBlog

# 进入文件夹, 执行前, 注意修改内容

cd ~/nginx-https-hugoBlog

# 在目录中获取自己的hugo博客
# https方式
git clone https://github.com/Charles-one/www.actiger.com.git
# 使用ssh的方式git clone git@github.com:Charles-one/www.actiger.com.git

# 运行

docker-compose run -d

&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;目录结构&#34;&gt;目录结构&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://img.actiger.com/blog/tech/folder_path.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;截取nginx配置&#34;&gt;截取nginx配置&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;server {
    listen       80;
    server_name  www.actiger.com;
    # 把80端口http请定向到https
    return 301 https://actiger.com$request_uri;
}

server{
    listen 443 ssl;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/actiger.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/actiger.com/privkey.pem;
    *
    *
    *
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-测试访问-a-hrefhttpwwwactigercom-target_blankhttpwwwactigercoma&#34;&gt;4. 测试访问 &lt;a href=&#34;http://www.actiger.com&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.actiger.com&#34;&gt;http://www.actiger.com&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&#34;这里错乱的&#34;&gt;这里错乱的&lt;/h4&gt;
&lt;h4 id=&#34;需要hugo使用新baseurl生成博客目录-原来的httpwwwactigercom更改为httpswwwactigercom&#34;&gt;需要hugo使用新baseurl生成博客目录, 原来的http://www.actiger.com/更改为https://www.actiger.com/&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;hugo --theme=hugo-paper --baseUrl=&amp;quot;https://actiger.com/&amp;quot; --destination=&amp;quot;www.actiger.com&amp;quot;

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;上传提交博客到github上-并到在服务器上拉取代码&#34;&gt;上传提交博客到github上, 并到在服务器上拉取代码.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;cd ~/nginx-https-hugoBlog/www.actiger.com/

git pull
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;重新访问-a-hrefhttpswwwactigercom-target_blankhttpswwwactigercoma&#34;&gt;重新访问 &lt;a href=&#34;https://www.actiger.com&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://www.actiger.com&#34;&gt;https://www.actiger.com&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;

    </description>
    </item>
    
    <item>
    <title>使用docker和hugo搭建自己的博客</title>
    <link>https://charles-one.github.io/actiger/blog/linux/%E4%BD%BF%E7%94%A8docker%E5%92%8Chugo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</link>
    <pubDate>Sun, 19 May 2019 02:50:28 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/%E4%BD%BF%E7%94%A8docker%E5%92%8Chugo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</guid>
    <description>
        &lt;h3 id=&#34;1-方案选择-需要内容结构&#34;&gt;1. 方案选择, 需要内容结构.&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://img.actiger.com/blog/living/kubernetes-ingress-nginx.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;1-练习的话-可以这种方案-虚拟机本地hosts-免费-只能内网访问&#34;&gt;1. 练习的话, 可以这种方案. 虚拟机+本地hosts, 免费, 只能内网访问.&lt;/h4&gt;
&lt;h4 id=&#34;2-最难的方案-国内域名备案时间可能会很长外地备案条件苛刻国内云&#34;&gt;2. 最难的方案, 国内域名(备案时间可能会很长,外地备案条件苛刻)+国内云.&lt;/h4&gt;
&lt;h3 id=&#34;2-在服务器上拉取docker-compose仓库&#34;&gt;2. 在服务器上拉取docker-compose仓库.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# 拉取仓库, 并存放在用户目录中
git clone https://github.com/Charles-one/docker-compose-repository.git ~/docker-compose-repository

# 复制这用到了docker-compose文件夹, 并存放在用户目录中

cp -r ~/docker-compose-repository/nginx-hugoBlog ~/nginx-hugoBlog

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-使用hugo生成正确的博客目录&#34;&gt;3. 使用hugo生成正确的博客目录&lt;/h3&gt;
&lt;h4 id=&#34;1-hugo生成网站目录&#34;&gt;1. hugo生成网站目录&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;# 指定主题, 我使用了hugo-paper, 网站地址baseUrl, 目标目录, 我会上传多个平台, 所以指定下.

# 注意 --bashUrl后的/是必须要有的.

hugo --theme=hugo-paper --baseUrl=&amp;quot;http://www.actiger.com/&amp;quot; --destination=&amp;quot;www.actiger.com&amp;quot;

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-上传步骤1生成的博客目录到githubcom-a-hrefhttpsactigercombloglinux使用hugo和github-pages搭建静态网站-target_blank参考这里的步骤3和4a&#34;&gt;2. 上传步骤1生成的博客目录到github.com. &lt;a href=&#34;https://actiger.com/blog/linux/使用hugo和github-pages搭建静态网站/&#34; target=&#34;_blank&#34;&gt;参考这里的步骤3和4&lt;/a&gt;&lt;/h4&gt;
&lt;h4 id=&#34;3-在服务器上拉取上传的博客目录&#34;&gt;3. 在服务器上拉取上传的博客目录&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;# 进行docker-compose文件夹中

cd ~/nginx-hugoBlog

# 拉取的docker-compose 默认配置是 ./www.actiger.com:/usr/share/nginx/html .
# docker-compose配置文件里的配置的目录, 与当前目录一致的.
# 克隆代码时需要, 重命名与docker-compose配置挂载目录名一致.

git clone https://github.com/Charles-one/www.actiger.com www.actiger.com

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-运行docker-compose文件&#34;&gt;4. 运行docker-compose文件.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# 进行执行目录中
cd ~cd ~/nginx-hugoBlog

# 执行
docker-compose up -d

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;验证是否正确-访问-a-hrefhttpwwwactigercom-target_blankhttpwwwactigercoma&#34;&gt;验证是否正确, 访问 &lt;a href=&#34;http://www.actiger.com&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.actiger.com&#34;&gt;http://www.actiger.com&lt;/a&gt;&lt;/a&gt;&lt;/h4&gt;

    </description>
    </item>
    
    <item>
    <title>Crontab定时任务</title>
    <link>https://charles-one.github.io/actiger/blog/linux/crontab%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</link>
    <pubDate>Sat, 18 May 2019 02:42:49 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/crontab%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</guid>
    <description>
        &lt;h3 id=&#34;1-使用crontab的原因&#34;&gt;1. 使用Crontab的原因.&lt;/h3&gt;
&lt;h4 id=&#34;每次更新博客都要登录服务器ssh延迟容易中断手动去拉取代码-不方便-故设置成自动获取最新代码&#34;&gt;每次更新博客都要登录服务器(ssh延迟容易中断)手动去拉取代码, 不方便. 故设置成自动获取最新代码.&lt;/h4&gt;
&lt;h3 id=&#34;2-选择crontab定时&#34;&gt;2. 选择crontab定时&lt;/h3&gt;
&lt;h4 id=&#34;查看下资源-觉得crontab简单可行-直接来用就好了&#34;&gt;查看下资源, 觉得crontab简单可行, 直接来用就好了.&lt;/h4&gt;
&lt;h3 id=&#34;3-定时任务需需要做事情&#34;&gt;3. 定时任务需需要做事情.&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;特定目录执行git pul的shell脚本. 这里我使用了 &lt;a href=&#34;https://actiger.com/blog/linux/ssh密钥生成配置和登陆服务器与github使用钥匙/&#34; target=&#34;_blank&#34;&gt;ssh key可以参考这里的&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;vim git_pull.sh&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
#!/bin/bash

# 进入目录中

cd ~/nginx-hugoBlog/www.actiger.com/

# 拉取github中的代码

git pull

&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;添加crontab任务文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;vim git_pull.cron&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 设置5分钟拉取一次代码

*/5 * * * * cd /root &amp;amp;&amp;amp; ./git_pull_www.actiger.com.sh

&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;把定时任务文件内容加到crontab中&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# 添加root账户中

crontab -uroot git_pull.cron

# 查询当前任务, root是账户, 添加的定时任务会放到这个目录中
crontab -uroot -l
cat /var/spool/cron/root


# 删除root用户的定时任务

crontab -uroot -r

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;日志的地址-相当重要&#34;&gt;日志的地址, 相当重要.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;# 日志文件 /var/spool/mail/root
# 查看日志
# 可以把时间设置1分钟, 可以很快看到执行情况, 方便调试.

tail -f /var/spool/mail/root

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-crontab-时间配置&#34;&gt;4. crontab 时间配置&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# 格式是
# 分 时 月份中第日 月份 星期中第几天 运行的命令

# 每分钟执行一次,
*/1 * * * * 命令

# 每小时第20, 30分钟执行一次

20,30 * * * * 命令

# 8-20时, 每小时第20, 30分执行一次

20,30 8-20 * * * 命令

# 每2天执行一次命令
0 0 */2 * * 命令

# 周六周日执行命令
0 0 0 0 6,0  命令

# 每月初一, 十五去执行

0 0 1,15 * *  命令

&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>Centos7使用ssh Key拉取github项目失败</title>
    <link>https://charles-one.github.io/actiger/blog/linux/centos7%E4%BD%BF%E7%94%A8ssh-key%E6%8B%89%E5%8F%96github%E9%A1%B9%E7%9B%AE%E5%A4%B1%E8%B4%A5/</link>
    <pubDate>Sat, 18 May 2019 00:37:15 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/centos7%E4%BD%BF%E7%94%A8ssh-key%E6%8B%89%E5%8F%96github%E9%A1%B9%E7%9B%AE%E5%A4%B1%E8%B4%A5/</guid>
    <description>
        &lt;h3 id=&#34;1-centos7上错误信息-与配置信息&#34;&gt;1. centos7上错误信息, 与配置信息.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# 测试最否能连接到github上, 使用-v打印连接日志

[root@cc]/etc/ssh# ssh -vT git@github.com

OpenSSH_7.4p1, OpenSSL 1.0.2k-fips  26 Jan 2017
debug1: Reading configuration data /root/.ssh/config
debug1: /root/.ssh/config line 3: Applying options for github.com
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: /etc/ssh/ssh_config line 60: Applying options for *
debug1: Connecting to github.com [192.30.255.112] port 12340.
debug1: Connection established.
debug1: permanently_set_uid: 0/0
debug1: key_load_public: No such file or directory
debug1: identity file /root/.ssh/git_cron type -1
debug1: key_load_public: No such file or directory
debug1: identity file /root/.ssh/git_cron-cert type -1
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_7.4
ssh_exchange_identification: Connection closed by remote host
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;ssh配置和文件目录&#34;&gt;ssh配置和文件目录&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Host github.com
 User git
 HostName github.com
 PreferredAuthentications publickey
 IdentityFile ~/.ssh/git_cron

#

[root@cc .ssh]$ ls
authorized_keys  config  git_cron  known_hosts

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-查找原因&#34;&gt;2. 查找原因.&lt;/h3&gt;
&lt;h3 id=&#34;最初以为配置信息错错误或者存放的私钥有问题-所以在本地使用同样的配置-去测试&#34;&gt;最初以为配置信息错错误或者存放的私钥有问题, 所以在本地使用同样的配置, 去测试.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ssh -vT git@github.com


&amp;gt;OpenSSH_7.9p1, LibreSSL 2.7.3
debug1: Reading configuration data /Users/csx/.ssh/config
debug1: /Users/csx/.ssh/config line 11: Applying options for github.com
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: /etc/ssh/ssh_config line 48: Applying options for *
debug1: Connecting to github.com port 22.
debug1: Connection established.
debug1: identity file /Users/csx/.ssh/git_cron type 0
debug1: identity file /Users/csx/.ssh/git_cron-cert type -1
debug1: Local version string SSH-2.0-OpenSSH_7.9
debug1: Remote protocol version 2.0, remote software version babeld-80573d3e
debug1: no match: babeld-80573d3e
debug1: Authenticating to github.com:22 as &#39;git&#39;
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: algorithm: curve25519-sha256
debug1: kex: host key algorithm: rsa-sha2-512
debug1: kex: server-&amp;gt;client cipher: chacha20-poly1305@openssh.com MAC: &amp;lt;implicit&amp;gt; compression: none
debug1: kex: client-&amp;gt;server cipher: chacha20-poly1305@openssh.com MAC: &amp;lt;implicit&amp;gt; compression: none
debug1: expecting SSH2_MSG_KEX_ECDH_REPLY
debug1: Server host key: ssh-rsa SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8
debug1: Host &#39;github.com&#39; is known and matches the RSA host key.
debug1: Found key in /Users/csx/.ssh/known_hosts:5
debug1: rekey after 134217728 blocks
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: rekey after 134217728 blocks
debug1: Will attempt key: /Users/csx/.ssh/git_cron RSA SHA256:tuJHTXOa8m+Flkopj02f8qJwUmPqI7NjPSHvQ/qxhNk explicit
debug1: SSH2_MSG_EXT_INFO received
debug1: kex_input_ext_info: server-sig-algs=&amp;lt;ssh-ed25519,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-rsa,rsa-sha2-512,rsa-sha2-256,ssh-dss&amp;gt;
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey
debug1: Next authentication method: publickey
debug1: Offering public key: /Users/csx/.ssh/git_cron RSA SHA256:tuJHTXOa8m+Flkopj02f8qJwUmPqI7NjPSHvQ/qxhNk explicit
debug1: Server accepts key: /Users/csx/.ssh/git_cron RSA SHA256:tuJHTXOa8m+Flkopj02f8qJwUmPqI7NjPSHvQ/qxhNk explicit
debug1: Authentication succeeded (publickey).
Authenticated to github.com ([192.30.255.112]:22).
debug1: channel 0: new [client-session]
debug1: Entering interactive session.
debug1: pledge: network
debug1: Sending environment.
debug1: Sending env LC_CTYPE = en_US.UTF-8
debug1: Sending env LANG = en_US.UTF-8
debug1: Sending env LC_COLLATE = en_US.UTF-8
debug1: Sending env LC_MESSAGES = en_US.UTF-8
debug1: Sending env LC_MONETARY = en_US.UTF-8
debug1: Sending env LC_NUMERIC = en_US.UTF-8
debug1: Sending env LC_TIME = en_US.UTF-8
debug1: Sending env LC_ALL = en_US.UTF-8
debug1: client_input_channel_req: channel 0 rtype exit-status reply 0
Hi Charles-one! You&#39;ve successfully authenticated, but GitHub does not provide shell access.
debug1: channel 0: free: client-session, nchannels 1
Transferred: sent 3048, received 2228 bytes, in 0.4 seconds
Bytes per second: sent 7619.6, received 5569.7
debug1: Exit status 1

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;连接是成功的&#34;&gt;连接是成功的.&lt;/h4&gt;
&lt;h4 id=&#34;注意这里建立联接&#34;&gt;注意这里建立联接&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;debug1: Connecting to github.com port 22.
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;出错的信息里是&#34;&gt;出错的信息里是&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;debug1: Connecting to github.com [192.30.255.112] port 12340
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;猜测使用错误的端口&#34;&gt;猜测使用错误的端口&lt;/h4&gt;
&lt;h4 id=&#34;更新配置文件为-sshconfig&#34;&gt;更新配置文件为 .ssh/config&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Host github.com
 User git
 Port 22
 HostName github.com
 PreferredAuthentications publickey
 IdentityFile ~/.ssh/git_cron
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;重新测试-ssh--vt-gitgithubcom-连接成功了&#34;&gt;重新测试, ssh -vT &lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt; 连接成功了.&lt;/h4&gt;
&lt;h3 id=&#34;3-现在的问题是-为什么centos7服务器默认使用的是12340-本地却使用的22&#34;&gt;3. 现在的问题是, 为什么centos7服务器默认使用的是12340, 本地却使用的22.&lt;/h3&gt;
&lt;h4 id=&#34;centos7中本地ssh配置信息&#34;&gt;Centos7中本地ssh配置信息&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;cat /etc/ssh/ssh_config

# 这里的端口被修改成12340
#   Port 22
#   new
Port 12340
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;这个是在更改连接ssh服务器端口时-修改ssh_config的端口-故造成本次的问题&#34;&gt;这个是在更改连接ssh服务器端口时, 修改ssh_config的端口, 故造成本次的问题&lt;/h4&gt;
&lt;h4 id=&#34;阿布-我再也不乱改了&#34;&gt;阿布, 我再也不乱改了.😭&lt;/h4&gt;

    </description>
    </item>
    
    <item>
    <title>使用docker搭建nextcloud</title>
    <link>https://charles-one.github.io/actiger/blog/linux/%E4%BD%BF%E7%94%A8docker%E6%90%AD%E5%BB%BAnextcloud/</link>
    <pubDate>Fri, 17 May 2019 01:49:37 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/%E4%BD%BF%E7%94%A8docker%E6%90%AD%E5%BB%BAnextcloud/</guid>
    <description>
        &lt;h3 id=&#34;1-nextcloud-个人私有云-可以像网盘一样同步个人文件-远程访问下载等&#34;&gt;1. nextcloud 个人私有云, 可以像网盘一样同步个人文件, 远程访问下载等.&lt;/h3&gt;
&lt;h3 id=&#34;2-使用docker-compose搭建&#34;&gt;2. 使用docker-compose搭建&lt;/h3&gt;
&lt;h4 id=&#34;使用-a-hrefhttpsgithubcomcharles-onedocker-compose-repository-target_blankdocker-compose-repository搭建a&#34;&gt;使用 &lt;a href=&#34;https://github.com/Charles-one/docker-compose-repository&#34; target=&#34;_blank&#34;&gt;docker-compose-repository搭建&lt;/a&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;
git clone https://github.com/Charles-one/docker-compose-repository.git ~/docker-compose-repository

cp -r ~/docker-compose-repository/nextcloud ~/nextcloud

cd ~/nextcloud

# 自动下载并启动容器

dc up -d

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;访问地址&#34;&gt;访问地址&lt;/h4&gt;
&lt;p&gt;http://服务ip地址&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 用户名和密码自己设置
#
# 页面上选择数据库mariadb
# 页面上填写就是你上面mariadb内容
# 用户名: nextcloud
# 数据库: nextcloud
# 密码:  nextcloud_weiki_JKL_sdf
# 地址(不是默认的localhost):  mariadb

&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>Tmux插件tmuxinator配置</title>
    <link>https://charles-one.github.io/actiger/blog/linux/tmux%E6%8F%92%E4%BB%B6tmuxinator%E9%85%8D%E7%BD%AE/</link>
    <pubDate>Fri, 17 May 2019 01:10:10 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/tmux%E6%8F%92%E4%BB%B6tmuxinator%E9%85%8D%E7%BD%AE/</guid>
    <description>
        &lt;h3 id=&#34;1-安装tmux的tmuxinator插件&#34;&gt;1. 安装tmux的tmuxinator插件&lt;/h3&gt;
&lt;p&gt;Mac下安装:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 使用gem安装tmuxinator
gem install tmuxinator

# 查询环境, 获取gem安装程序执行目录, 目的是添加环境变量
gem env
# 安装程序的执行目录 /usr/local/lib/ruby/gems/2.6.0/bin

# 在.zshrc或者.bashrc中添加环境变量

export PATH=&amp;quot;$PATH:/usr/local/lib/ruby/gems/2.6.0/bin&amp;quot;


&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-tmuxinator配置&#34;&gt;2. Tmuxinator配置&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# 会自动创建文件在~/.tmuxinator中

tmuxinator edit hugo

# 名称
name: hugo
# 目录, 我存放hugo的目录
root: ~/Documents/actiger
# 2个窗口, 1, 2是窗口名称
# layout: even-horizontal, 横着分割
# panes  不需要名称, hugo server --theme=paper 是执行命令hugo服务

windows:
    - 1:
        layout: even-horizontal
        panes:
            - hugo server --theme=paper
            -
    - 2:

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-tmuxinator使用&#34;&gt;3. tmuxinator使用&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;
# tmux &amp;amp; tumxinator , 可写.bashrc或者.zshrc中

alias tmnew=&#39;tmux new -s&#39;
alias tma=&#39;tmux a -t&#39;
alias tmkill=&amp;quot;tmux kill-session -t&amp;quot;

alias tmx=&amp;quot;tmuxinator&amp;quot;
alias tmstart=&amp;quot;tmuxinator start&amp;quot;
alias tmedit=&amp;quot;tmuxinator edit&amp;quot;
alias tmopen=&amp;quot;tmuxinator open&amp;quot;
alias tmdelete=&amp;quot;tmuxinator delete&amp;quot;


# 打开hugo
tmuxinator hugo

# 关闭hugo
tmkill hugo

&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>Mosh简介,安装与使用</title>
    <link>https://charles-one.github.io/actiger/blog/linux/mosh%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BD%BF%E7%94%A8/</link>
    <pubDate>Fri, 17 May 2019 00:20:12 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/mosh%E7%AE%80%E4%BB%8B%E4%B8%8E%E4%BD%BF%E7%94%A8/</guid>
    <description>
        &lt;h3 id=&#34;1-mosh简介-及为什么要使用mosh&#34;&gt;1. Mosh简介, 及为什么要使用Mosh&lt;/h3&gt;
&lt;h5 id=&#34;1-mosh全称mobile-shell-移动远程终端应用程序-与ssh类似-却有很多新功能&#34;&gt;1. Mosh全称Mobile Shell, 移动远程终端应用程序. 与ssh类似, 却有很多新功能,&lt;/h5&gt;
&lt;h5 id=&#34;可以漫游-支持间歇性连接-这对网络延迟高或者移动使用更换ip非常友好&#34;&gt;可以漫游, 支持间歇性连接, 这对网络延迟高或者移动使用更换IP非常友好,&lt;/h5&gt;
&lt;h5 id=&#34;2-我的服务器是vps-在使用ssh过程中-经常会中断-频繁重新连接-还要kill掉之前的终端&#34;&gt;2. 我的服务器是VPS, 在使用SSH过程中, 经常会中断, 频繁重新连接, 还要kill掉之前的终端.&lt;/h5&gt;
&lt;h5 id=&#34;mosh的用法与ssh一致-无缝切换&#34;&gt;Mosh的用法与SSH一致, 无缝切换.&lt;/h5&gt;
&lt;h3 id=&#34;2-mosh-安装-需要服务器端和客户端都安装软件-a-target_blank-hrefhttpsgithubcomcharles-oneshell-repositoryblobmasterinstall_mosh_add_firewall_portsh服务端安装脚本a&#34;&gt;2. Mosh 安装. 需要服务器端和客户端都安装软件. &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/Charles-one/shell-repository/blob/master/install_mosh_add_firewall_port.sh&#34;&gt;服务端安装脚本&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&#34;1-服务器端安装mosh-并开启防火墙udp端口&#34;&gt;1. 服务器端安装mosh, 并开启防火墙udp端口&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;yum -y install epel-release
yum -y install mosh

firewall-cmd --zone=public --permanent --add-port=60000-61000/udp

firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-本地安装&#34;&gt;2. 本地安装&lt;/h4&gt;
&lt;p&gt;Mac:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install mosh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#39;https://mosh.org/&#39;&gt;Windows: 参考&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-mosh使用&#34;&gt;3. Mosh使用.&lt;/h3&gt;
&lt;h4 id=&#34;使用规则与ssh一致&#34;&gt;使用规则与ssh一致.&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;# 帮助
mosh -h

# 连接
mosh root@192.168.0.1

# 使用ssh config配置连接
mosh locale_centos7

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://actiger.com/blog/linux/ssh密钥生成配置和登陆服务器与github使用钥匙/&#34;&gt;ssh config配置可以参考这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://actiger.com/blog/linux/ssh密钥生成配置和登陆服务器与github使用钥匙/&#34;&gt;或者这里&lt;/a&gt;&lt;/p&gt;

    </description>
    </item>
    
    <item>
    <title>Centos7更新内核翻车之旅</title>
    <link>https://charles-one.github.io/actiger/blog/linux/centos7%E6%9B%B4%E6%96%B0%E5%86%85%E6%A0%B8%E7%BF%BB%E8%BD%A6%E4%B9%8B%E6%97%85/</link>
    <pubDate>Thu, 16 May 2019 23:11:46 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/centos7%E6%9B%B4%E6%96%B0%E5%86%85%E6%A0%B8%E7%BF%BB%E8%BD%A6%E4%B9%8B%E6%97%85/</guid>
    <description>
        &lt;h3 id=&#34;1-centos7-更新内核失败的原因&#34;&gt;1. Centos7 更新内核失败的原因&lt;/h3&gt;
&lt;h4 id=&#34;安装内核后-设置默认启动的内核错误-就是设置为rescue模式&#34;&gt;安装内核后, 设置默认启动的内核错误, 就是设置为rescue模式&lt;/h4&gt;
&lt;h3 id=&#34;2-事情经过&#34;&gt;2. 事情经过&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;我操作的内容:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org

rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm

yum --enablerepo=elrepo-kernel -y install kernel-ml

awk -F\&#39; &#39;$1==&amp;quot;menuentry &amp;quot; {print i++ &amp;quot; : &amp;quot; $2}&#39; /etc/grub2.cfg

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这时候会显示默认启动内核列表:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0 : CentOS Linux (0-rescue-00a62363617944e08db8db894ba6145e) 7 (Core)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;1 : CentOS Linux (5.1.1-1.el7.elrepo.x86_64) 7 (Core)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;2 : CentOS Linux (3.10.0-693.11.6.el7.x86_64) 7 (Core)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;3 : CentOS Linux (3.10.0-693.el7.x86_64) 7 (Core)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;接下来就是选择错误的地方&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 错误选择默认的0
grub2-set-default 0

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接着就会重启不了, 因为是VPS原因, 无法操作, 手动选择启动的内核, 所以就翻车了.&lt;/p&gt;
&lt;p&gt;丢失所有数据, 重装系统&lt;/p&gt;
&lt;h4 id=&#34;正确做法是选择-是列表上51内核&#34;&gt;正确做法是选择, 是列表上5.1内核&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;grub2-set-default &amp;quot;CentOS Linux (5.1.1-1.el7.elrepo.x86_64) 7 (Core)&amp;quot;

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;重启即可.&lt;/p&gt;
&lt;h3 id=&#34;3-总结下&#34;&gt;3. 总结下.&lt;/h3&gt;
&lt;h4 id=&#34;虽然是使用脚本创建的错误-也暴露一了问题-有时候没有理解命令的意思就盲目去执行-造成无法预料的后果&#34;&gt;虽然是使用脚本创建的错误, 也暴露一了问题. 有时候没有理解命令的意思就盲目去执行, 造成无法预料的后果.&lt;/h4&gt;
&lt;h4 id=&#34;如何避免这种类似事故&#34;&gt;如何避免这种类似事故:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;高危操作时, 必须在相同主机测试, 确认理解每一步的操作内容.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;高危操作时, 必须进行数据备份, 禁止使用网络上一键脚本.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Charles-one/shell-repository/blob/master/update_core.sh&#34;&gt;最后附上正确的脚本&lt;/a&gt;&lt;/p&gt;

    </description>
    </item>
    
    <item>
    <title>docker-compose简单使用</title>
    <link>https://charles-one.github.io/actiger/blog/linux/docker-compose%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</link>
    <pubDate>Wed, 15 May 2019 02:02:51 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/docker-compose%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</guid>
    <description>
        &lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;
&lt;h3 id=&#34;a-hreffirst1-docker-compose简介a&#34;&gt;&lt;a href=&#34;#first&#34;&gt;1. docker-compose简介&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;a-hreftwo2-docker-composeyml简单配置说明a&#34;&gt;&lt;a href=&#34;#two&#34;&gt;2. docker-compose.yml简单配置说明&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;a-hrefthree3-docker-compose运行a&#34;&gt;&lt;a href=&#34;#three&#34;&gt;3. docker-compose运行&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;a-idfirst1-docker-compose简介与安装a&#34;&gt;&lt;a id=&#34;first&#34;&gt;1. docker-compose简介与安装&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;简介&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;docker-compose是编排docker容器的, 就是管理这一批容器, 进行批量配置, 起动, 暂停, 删除容器等.
如果有多个容器, 使用docker一个个启动慢, 如果容器间有依赖, 还需要手动指定, 还有环境变量, 可以
一起设置.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;使用下面命令安装docker-compose和docker. 或使用&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;yum remove docker \
              docker-common \
              docker-selinux \
              docker-engine


yum install -y yum-utils \
  device-mapper-persistent-data \
  lvm2


yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo

yum -y install docker-ce

systemctl enable docker
systemctl start docker

curl -L &amp;quot;https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)&amp;quot; -o /usr/local/bin/docker-compose

chmod +x /usr/local/bin/docker-compose

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;a-idtwo2-docker-composeyml简单配置a&#34;&gt;&lt;a id=&#34;two&#34;&gt;2. docker-compose.yml简单配置&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;这里以wordpress-nginx-mariadb为例&#34;&gt;这里以wordpress-nginx-mariadb为例&lt;/h3&gt;
&lt;h4 id=&#34;参数说明&#34;&gt;参数说明&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;# 设置docker-compose 版本
version: &amp;quot;3&amp;quot;

# 容器服务
services:

# 服务名称
  mariadb:
# 拉取镜像和镜像版本, 本地没有, 自动会拉取
    image: mariadb:10.2
    # 容器名称
    container_name: mariadb_v1
    # 容器环境, 设置mysql root密码, 用户名, 用户密码, 库
    environment:
      MYSQL_ROOT_PASSWORD: password_QUI356_ccf
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordone
      MYSQL_PASSWORD: wordpress_weiki_JKL_sdf1
    # 挂载外部磁盘目录, 相当于容器和数据分开存放, 删除容器, 外部磁盘数据仍在
    volumes:
      - ./lib/mariadb:/var/lib/mysql
      - ./var/log/mysql:/var/log/mysql
    # 暴露服务器端口, 格式是 外部端口:内部容器端口
    ports:
      - 3306:3306
  nginx:
    image: nginx:1.14.2
    container_name: nginx_v1
    volumes:
      - ./etc/nginx/conf:/etc/nginx
      - ./var/log/nginx:/var/log/nginx
      - ./wordpress:/usr/share/nginx/html
    ports:
      - 80:80
    links:
      - wordpress
  wordpress:
    depends_on:
      - mariadb
    links:
      - mariadb
    image: wordpress:php7.1-fpm
    container_name: wordpress_v1
    volumes:
      - ./wordpress:/var/www/html
    # 其他容器环境中, 以链接mariadb服务
    environment:
      WORDPRESS_DB_HOST: mariadb
      WORDPRESS_DB_USER: wordone
      WORDPRESS_DB_PASSWORD: wordpress_weiki_JKL_sdf1
      WORDPRESS_DB_NAME: wordpress

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;a-idthree3-docker-compose运行-直接拉取已经设置的配置a&#34;&gt;&lt;a id=&#34;three&#34;&gt;3. docker-compose运行, 直接拉取已经设置的配置&lt;/a&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;使用git克隆docker-compose库, 并存放在当前用户目录中(即cd ~/ 所在地方)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;
git clone https://github.com/Charles-one/docker-compose.git ~/docker-compose

&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;复制一份执行文件到用户目录中&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;
cp -r ~/docker-compose/wordpress-nginx-mariadb ~/wordpress-nginx-mariadb

&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;进行文件夹中, 使用docker-compose 下载镜像, 构建镜像&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;
# 进行需要运行的docker-compose库中
cd ~/wordpress-nginx-mariadb

# up 表示构建, -d后台运行
# 运行后需要下载镜像, 时间比较长.
docker-compose up -d

&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;查看wordpress服务&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;访问地址:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;http://你的服务器ip&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;设置用户密码即可使用&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;其它docker-compose命令&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# pull 拉取服务镜像
docker-compose pull

# up 运行服务并输出, 可使用control + c结束容器
docker-compose up

# start 启动一个已经存在的服务容器
docker-compose start

# stop 停止已经运行的容器, 不会删除, 可用start再启动
docker-compose stop

# rm 删除已经停止的容器
docker-compose rm

# ps 列出所有容器
docker-compose ps

# run 在服务上执行一个命令
docker-compose

# logs 查看服务输出
docker-compose logs
docker-compose logs -f

&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>创建hugo主题失败的思考</title>
    <link>https://charles-one.github.io/actiger/blog/thought/%E5%88%9B%E5%BB%BAhugo%E4%B8%BB%E9%A2%98%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%80%9D%E8%80%83/</link>
    <pubDate>Sun, 14 Apr 2019 19:59:54 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/thought/%E5%88%9B%E5%BB%BAhugo%E4%B8%BB%E9%A2%98%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%80%9D%E8%80%83/</guid>
    <description>
        &lt;h3 id=&#34;0事情经过&#34;&gt;0.事情经过&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;每次拉取Hugo Paper的主题的时候都会把作者的个人图标拉过来, 显示在我的Github Pages上, 很难受.&lt;/li&gt;
&lt;li&gt;需要手动更改位置.&lt;/li&gt;
&lt;li&gt;所以就想自己更改出来一个hugo theme.&lt;/li&gt;
&lt;li&gt;错误估计自己的能力, 什么也没弄懂, 什么也没有做出来.&lt;/li&gt;
&lt;li&gt;很生气, 没有计划就来做这件事, 浪费太多时间, 没有睡好.&lt;/li&gt;
&lt;li&gt;然后思考下这次浪费时间的原因, 就有了这篇文章.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;1分析下失败原因&#34;&gt;1.分析下失败原因&lt;/h3&gt;
&lt;h4 id=&#34;1不了解hugo使用theme的生成规则&#34;&gt;1.不了解Hugo使用theme的生成规则&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;不清楚theme目录里, 具体存放什么, 有什么作用.&lt;/li&gt;
&lt;li&gt;对生成网页了解甚少, 规则就明白header是生成一个页面的上半部分, footer.html是生成页面下半部分.&lt;/li&gt;
&lt;li&gt;高估自己css和html能力了, 虽然有学过, 距离很久, 记不清了, 一只半解, 例如a标签样式的下划线, 肯定有其他的优先级造成直接定义a text-decoration: none失败.&lt;/li&gt;
&lt;li&gt;theme参数的运用也不清楚.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;2没有目标和计划&#34;&gt;2.没有目标和计划.&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;在不了解hugo规则和html知识的情况下, 盲目开始, 没有考虑出现问题, 该怎么处理, 是放弃还是暂时挂起.&lt;/li&gt;
&lt;li&gt;从12点到5点完成在乱看, 没有搞清楚你要做什么地步.&lt;/li&gt;
&lt;li&gt;最初的目标是, 去掉作者放的ico图标, 这个很简单的事情, 切分支然后替换内容.(还有就是在actiger/static/img里存放ico图片, 后来才知道会覆盖作者的), 对就是
这么一简单的需求, 还有一个简单的需求是把代码的背景色替换成灰色的(这个更新主题作者已经解决了).&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;3没有寻求解决问题的最优解&#34;&gt;3.没有寻求解决问题的最优解.&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;对于自己的2个目标, 完成可以5分钟解决, 自己却偏不, 想练习下自己的HTML, 结果没有锻炼, 还打击了积极性.&lt;/li&gt;
&lt;li&gt;出现困难没有及时停下来想想, 目标, 时间成功.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3避免类似情况发生&#34;&gt;3.避免类似情况发生&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;明确目标, 明确哪些可以实现的目标, 不要假大空.&lt;/li&gt;
&lt;li&gt;清楚目标内容后, 对实现步骤方式方法要清楚, 例如知道什么才能完成目标.&lt;/li&gt;
&lt;li&gt;制定计划, 了解什么, 完成什么, 完成不了该怎么处理, 对比没有接触过的, 一定要考虑这点.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;4往好的想&#34;&gt;4.往好的想&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;了解一点Hugo目录里作用.&lt;/li&gt;
&lt;li&gt;知道怎么添加图片了&lt;/li&gt;
&lt;li&gt;写了错误总结, 避免之后犯同样的问题.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://img.actiger.com/blog/animals/cat.jpg&#34; alt=&#34;ico&#34;&gt;&lt;/p&gt;

    </description>
    </item>
    
    <item>
    <title>tmux保存会话和剪贴板插件安装及使用</title>
    <link>https://charles-one.github.io/actiger/blog/linux/tmux%E4%BF%9D%E5%AD%98%E4%BC%9A%E8%AF%9D%E5%92%8C%E5%89%AA%E8%B4%B4%E6%9D%BF%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</link>
    <pubDate>Thu, 11 Apr 2019 00:45:56 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/tmux%E4%BF%9D%E5%AD%98%E4%BC%9A%E8%AF%9D%E5%92%8C%E5%89%AA%E8%B4%B4%E6%9D%BF%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</guid>
    <description>
        &lt;h2 id=&#34;0内容&#34;&gt;0.内容&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;安装tmux&lt;/li&gt;
&lt;li&gt;安装tmux插件管理&lt;/li&gt;
&lt;li&gt;安装保存会话和剪贴板插件&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;1安装tmux&#34;&gt;1.安装tmux&lt;/h3&gt;
&lt;h3 id=&#34;为什么要使用tmux-可以永久保存会话-就不用每次都要切换到对应工作目录中&#34;&gt;为什么要使用tmux, 可以永久保存会话, 就不用每次都要切换到对应工作目录中.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Mac下&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;brew install tmux
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;linux, &lt;a href=&#34;https://github.com/tmux/tmux&#34; target=&#34;_blank&#34;&gt;参考Github地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/tmux/tmux.git
cd tmux
sh autogen.sh
./configure &amp;amp;&amp;amp; make
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2安装tmux插件管理&#34;&gt;2.安装tmux插件管理&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tmux-plugins/tpm&#34; target=&#34;_blank&#34;&gt;参考地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;新建~/.tmux.conf, 复制下面内容到这个文件下.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# List of plugins
set -g @plugin &#39;tmux-plugins/tpm&#39;
set -g @plugin &#39;tmux-plugins/tmux-sensible&#39;

# Other examples:
# set -g @plugin &#39;github_username/plugin_name&#39;
# set -g @plugin &#39;git@github.com/user/plugin&#39;
# set -g @plugin &#39;git@bitbucket.com/user/plugin&#39;

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b &#39;~/.tmux/plugins/tpm/tpm&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;执行安装&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;tmux
# 然后按 Prefix + I(Prefix 前置键默认是Control + b, I是大写, 先按Prefix再按大写I)
# 等待安装完成
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3安装保存会话与剪贴板插件&#34;&gt;3.安装保存会话与剪贴板插件.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在~/.tmux.conf文件中 # List of plugins 行下, 增加&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# 保存会话
set -g @plugin &#39;tmux-plugins/tmux-resurrect&#39;
# tmux下复制粘贴
set -g @plugin &#39;tmux-plugins/tmux-yank&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;执行安装&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;tmux
# 然后按 Prefix + I(Prefix 前置键默认是Control + b, I是大写, 先按Prefix再按大写I)
# 等待安装完成
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4使用保存a-hrefhttpsgithubcomtmux-pluginstmux-resurrect-target_blank会话a和a-hrefhttpsgithubcomtmux-pluginstmux-yank-target_blank剪贴板a&#34;&gt;4.使用保存&lt;a href=&#34;https://github.com/tmux-plugins/tmux-resurrect&#34; target=&#34;_blank&#34;&gt;会话&lt;/a&gt;和&lt;a href=&#34;https://github.com/tmux-plugins/tmux-yank&#34; target=&#34;_blank&#34;&gt;剪贴板&lt;/a&gt;.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;保存和恢复会话&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# 新建指定名字hugo的会话
tmux new -t hugo

# 保存这个会话,Profix + (control+s), 这样就永久保存会话了.
按Profix + C-s

# 恢复会话, 新建tmux, 再按Profix + C-r 即可恢复

tmux
操作Profix + C-r

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;多个会话也是使用同样的命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;补充tmux命令&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 连接hugo名字的会话

tmux attach -t hugo

# 保持tmux后台运行

Profix+d

# 在.bashrc中起个别名
alias thugo=&#39;tmux attach -t hugo&#39;
source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;复制当前和鼠标选中复制&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# Profix + y, 这个是复制当前命令行

# 用鼠标选中tmux任意内容再释放, 就可以复制到剪贴板中.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;mac用command+v就可以验证&lt;/p&gt;

    </description>
    </item>
    
    <item>
    <title>Mac使用sshpass和alias管理ssh账号密码</title>
    <link>https://charles-one.github.io/actiger/blog/linux/mac%E4%BD%BF%E7%94%A8sshpass%E5%92%8Calias%E7%AE%A1%E7%90%86ssh%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/</link>
    <pubDate>Wed, 10 Apr 2019 23:31:03 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/mac%E4%BD%BF%E7%94%A8sshpass%E5%92%8Calias%E7%AE%A1%E7%90%86ssh%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/</guid>
    <description>
        &lt;h2 id=&#34;0内容&#34;&gt;0.内容.&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;使用brew安装sshpass软件&lt;/li&gt;
&lt;li&gt;在.bashrc或者.zshrc中写入连接服务器别名alias, 并测试连接.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;1使用brew安装sshpass软件&#34;&gt;1.使用brew安装sshpass软件&lt;/h2&gt;
&lt;h3 id=&#34;因为sshpass对新手来手使用不安全某方面密码可以history中看到-所以仅推荐连接本机虚拟机中-正是因为担心会滥用所以brew并没有直接提供sshpass的安装&#34;&gt;因为sshpass对新手来手使用不安全(某方面密码可以history中看到), 所以仅推荐连接本机虚拟机中. 正是因为担心会滥用所以brew并没有直接提供sshpass的安装.&lt;/h3&gt;
&lt;h3 id=&#34;项目地址-a-hrefhttpsgithubcomhudochenkovhomebrew-sshpass-target_blankhttpsgithubcomhudochenkovhomebrew-sshpassa&#34;&gt;项目地址 &lt;a href=&#34;https://github.com/hudochenkov/homebrew-sshpass&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://github.com/hudochenkov/homebrew-sshpass&#34;&gt;https://github.com/hudochenkov/homebrew-sshpass&lt;/a&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;强制推荐使用-a-hrefhttpsactigercombloglinuxssh密钥生成配置和登陆服务器与github使用钥匙-target_blankssh密钥a&#34;&gt;强制推荐使用 &lt;a href=&#34;https://actiger.com/blog/linux/ssh密钥生成配置和登陆服务器与github使用钥匙/&#34; target=&#34;_blank&#34;&gt;SSH密钥&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;直接使用brew安装&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;brew install hudochenkov/sshpass/sshpass
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;2在bashrc或者zshrc中写入连接服务器别名alias&#34;&gt;2.在.bashrc或者.zshrc中写入连接服务器别名alias&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;sshpass使用&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# sshpass -p后接密码, ssh 后的-p是指定端口
# 分成2部分内容一是sshpass -p, 二是ssh root@10.211.55.9 -p 22
# 使用密码password连接10.211.55.9中22端口的root用户
sshpass -p&#39;password&#39; ssh root@10.211.55.9 -p 22

&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;建立别名并生效, 这样就避免在history中直接看到密码.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;alias tolocal=&amp;quot;sshpass -p&#39;password&#39; ssh root@10.211.55.9 -p 12340&amp;quot;

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将上面内容放到.bashrc(bash用户)或者.zshrc(zsh用户)中&lt;/p&gt;
&lt;p&gt;再次生成配置&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;source ~/.bashrc

# 或者 source ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;测试&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在终端中输入并回车&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tolocal
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;即可连接本地虚拟机中.&lt;/p&gt;

    </description>
    </item>
    
    <item>
    <title>SSH密钥生成配置和登陆服务器与github使用钥匙</title>
    <link>https://charles-one.github.io/actiger/blog/linux/ssh%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90%E9%85%8D%E7%BD%AE%E5%92%8C%E7%99%BB%E9%99%86%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8Egithub%E4%BD%BF%E7%94%A8%E9%92%A5%E5%8C%99/</link>
    <pubDate>Sat, 30 Mar 2019 23:32:03 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/ssh%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90%E9%85%8D%E7%BD%AE%E5%92%8C%E7%99%BB%E9%99%86%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8Egithub%E4%BD%BF%E7%94%A8%E9%92%A5%E5%8C%99/</guid>
    <description>
        &lt;h3 id=&#34;1生成ssh公钥私钥&#34;&gt;1.生成SSH公钥私钥&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;进入文件夹中(注:所有&amp;quot;#&amp;ldquo;表示说明)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;cd ~/.ssh/

# 其中-t rsa是指定rsa加密算法, -C &amp;quot;asus&amp;quot;是添加描述asus

ssh-keygen -t rsa -C &amp;quot;asus&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;# 说明: 默认是保存在/Users/你的用户名/.ssh/下, 如果你指定了名字则保存在当前路径下.
# 指定的必须是文件且是绝对路径
# 在这里我已经在 ~/.ssh/中, 默认会保存在这里
Enter file in which to save the key (/Users/username(你的用户名)/.ssh/id_rsa): asus_rsa


# 这里提示输入密码, 直接Enter表示不要密码

Enter passphrase (empty for no passphrase):

# 与上面输入的密码保持一致, 如果上面没输入,这里也不要输入

Enter same passphrase again:

&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;提示这些信息就表示生成成功&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;Your identification has been saved in /Users/username/.ssh/asus_rsa.
Your public key has been saved in /Users/username/.ssh/asus_rsa.pub.
The key fingerprint is:
SHA256:WNwJoo/Rr0TvpnQIdA4YisZrF+7ZM8lKNB4JLpJXALA asus
The key&#39;s randomart image is:
+---[RSA 2048]----+
|+.o   . .        |
|oo + o o o .     |
|E+..* + o o      |
|o.+ooO =         |
|++.Bo = S        |
|+.= *o.+         |
|   = *+ +        |
|  . ..o+         |
|   .  .          |
+----[SHA256]-----+
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;查看生成的文件asus_rsa密钥, asus_rsa.pub公钥&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;ls ~/.ssh/
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2配置服务器公钥-可以远程登录&#34;&gt;2.配置服务器公钥, 可以远程登录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;上传公钥到服务器中, windows下xshell,mac 终端terminal&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# -i指定公钥文件, -p指定服务器端口

ssh-copy-id -i local_centos7_rsa.pub jenkins@10.211.55.9 -p 22

&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;输入用户密码就可以输入成功了-显示成功的信息&#34;&gt;输入用户密码就可以输入成功了, 显示成功的信息&lt;/h5&gt;
&lt;p&gt;Number of key(s) added:        1&lt;/p&gt;
&lt;p&gt;Now try logging into the machine, with:   &amp;ldquo;ssh -p &amp;lsquo;22&amp;rsquo; &amp;lsquo;&lt;a href=&#34;mailto:jenkins@10.211.55.9&#34;&gt;jenkins@10.211.55.9&lt;/a&gt;&amp;rsquo;&amp;rdquo;
and check to make sure that only the key(s) you wanted were added.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;添加配置&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;vim ~/.ssh/config
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;添加如下配置-host表示主机别名-user是登录的用户名-hostname表示服务器ip地址或网址-preferredauthentications首先认证方式identityfile私钥文件路径-port服务器端口&#34;&gt;添加如下配置, Host表示主机别名, User是登录的用户名, HostName表示服务器ip地址或网址, PreferredAuthentications首先认证方式,IdentityFile私钥文件路径, Port服务器端口&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;多个用户时Host设置必须唯一, 禁止设置为ip地址&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Host locale_centos7
 User jenkins
 HostName 10.211.55.9
 PreferredAuthentications publickey
 IdentityFile ~/.ssh/local_centos7_rsa
 Port 22
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;尝试登陆服务器&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;ssh locale_centos7
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;却提示公钥的权限不安全&#34;&gt;却提示公钥的权限不安全&lt;/h5&gt;
&lt;p&gt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions 0644 for &amp;lsquo;/Users/username/.ssh/local_centos7_rsa.pub&amp;rsquo; are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
Load key &amp;ldquo;/Users/username/.ssh/local_centos7_rsa.pub&amp;rdquo;: bad permissions
&lt;a href=&#34;mailto:jenkins@10.211.55.9&#34;&gt;jenkins@10.211.55.9&lt;/a&gt;: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;更改~/.ssh/local_centos7_rsa.pub文件权限&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;chmod 400 ~/.ssh/local_centos7_rsa.pub
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;再次尝试登陆即是正常(ssh -v locale_centos7中-v会打印连接日志)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;ssh locale_centos7
&lt;/code&gt;&lt;/pre&gt;&lt;h5 id=&#34;传输文件的时候也能使用scp-aboutmd-mini_jenkinsvarlibjenkinstest-将aboutmd文件上传到使用服务器varlibjenkinstest文件夹下&#34;&gt;传输文件的时候也能使用scp about.md mini_jenkins:/var/lib/jenkins/test, 将about.md文件上传到使用服务器/var/lib/jenkins/test文件夹下&lt;/h5&gt;
&lt;h3 id=&#34;3github使用ssh公钥&#34;&gt;3.github使用ssh公钥&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;复制公钥信息~/.ssh/local_centos7_rsa.pub 存入github keys设置中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;增加配置文件~/.ssh/config&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;这个Host的别名,要有一个github.com, github默认ssh名字是github.com, 为了方便使用&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Host github.com
 User git
 HostName github.com
 PreferredAuthentications publickey
 IdentityFile ~/.ssh/local_centos7_rsa
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;测试和拉取公共类型的github代码&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;ssh -T git@github.com

git clone git@github.com:Charles-one/actiger.git
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;多个github用户&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;添加配置./.ssh/config&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Host work.github.com
 User git
 HostName github.com
 PreferredAuthentications publickey
 IdentityFile ~/.ssh/wrok_rsa
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;测试和拉取公共类型的github代码就变成&#34;&gt;测试和拉取公共类型的github代码就变成&lt;/h4&gt;
&lt;h4 id=&#34;对比下-host默认使用的githubcom方便&#34;&gt;对比下, Host默认使用的github.com方便&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;ssh -T git@work.github.com

git clone git@work.github.com:Charles-one/actiger.git
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>华硕ASUS路由器AC5300莫名重启记录和排查</title>
    <link>https://charles-one.github.io/actiger/blog/linux/%E5%8D%8E%E7%A1%95asus%E8%B7%AF%E7%94%B1%E5%99%A8ac5300%E8%8E%AB%E5%90%8D%E9%87%8D%E5%90%AF%E5%92%8C%E6%8E%92%E6%9F%A5/</link>
    <pubDate>Sat, 30 Mar 2019 01:19:45 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/%E5%8D%8E%E7%A1%95asus%E8%B7%AF%E7%94%B1%E5%99%A8ac5300%E8%8E%AB%E5%90%8D%E9%87%8D%E5%90%AF%E5%92%8C%E6%8E%92%E6%9F%A5/</guid>
    <description>
        &lt;h3 id=&#34;问题我的华硕路由器有时莫名奇妙的重启&#34;&gt;问题我的华硕路由器有时莫名奇妙的重启&lt;/h3&gt;
&lt;h4 id=&#34;出问题设备和版本-asus-ac5300-300438445149&#34;&gt;出问题设备和版本 ASUS AC5300 3.0.0.4.384.45149&lt;/h4&gt;
&lt;h2 id=&#34;因为time-machine备份空间不足-造成路由器重启的&#34;&gt;因为Time Machine备份空间不足, 造成路由器重启的.&lt;/h2&gt;
&lt;h2 id=&#34;因为time-machine备份空间不足-造成路由器重启的-1&#34;&gt;因为Time Machine备份空间不足, 造成路由器重启的.&lt;/h2&gt;
&lt;h2 id=&#34;因为time-machine备份空间不足-造成路由器重启的-2&#34;&gt;因为Time Machine备份空间不足, 造成路由器重启的.&lt;/h2&gt;
&lt;h4 id=&#34;首先查看系统日志&#34;&gt;首先查看系统日志&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;May  5 13:05:25 weini: [软件中心]: httpdb进程准备就绪！
May  5 13:05:25 WAN Connection: WAN was restored.
May  5 13:05:25 WLCEVENTD: eth8: Assoc D4:90:9C:E7:D2:03
May  5 13:05:26 kernel: UBIFS (ubi1:0): UBIFS: mounted UBI device 1, volume 0, name &amp;quot;nvram&amp;quot;, R/O mode
May  5 13:05:26 kernel: UBIFS (ubi1:0): LEB size: 126976 bytes (124 KiB), min./max. I/O unit sizes: 2048 bytes/2048 bytes
May  5 13:05:26 kernel: UBIFS (ubi1:0): FS size: 5840896 bytes (5 MiB, 46 LEBs), journal size 1015809 bytes (0 MiB, 6 LEBs)
May  5 13:05:26 kernel: UBIFS (ubi1:0): reserved for root: 275879 bytes (269 KiB)
May  5 13:05:26 kernel: UBIFS (ubi1:0): media format: w4/r0 (latest is w4/r0), UUID ABA6F10C-0F1C-4B89-AD25-4B74DEC12700, small LPT model
May  5 13:05:26 kernel: UBIFS (ubi1:0): un-mount UBI device 1
May  5 13:05:26 kernel: ubi1: detaching mtd9
May  5 13:05:26 kernel: ubi1: mtd9 is detached
May  5 13:05:26 ntp: start NTP update
Mar 30 00:32:50 rc_service: ntp 1229:notify_rc restart_diskmon
Mar 30 00:32:50 rc_service: waitting &amp;quot;start_firewall&amp;quot; via udhcpc ...
Mar 30 00:32:50 WLCEVENTD: eth6: Assoc F0:B4:29:B0:E8:1B
Mar 30 00:32:51 kernel: ubi1: attaching mtd9
Mar 30 00:32:51 kernel: ubi1: scanning is finished
Mar 30 00:32:51 kernel: ubi1: attached mtd9 (name &amp;quot;misc1&amp;quot;, size 8 MiB)
Mar 30 00:32:51 kernel: ubi1: PEB size: 131072 bytes (128 KiB), LEB size: 126976 bytes
Mar 30 00:32:51 kernel: ubi1: min./max. I/O unit sizes: 2048/2048, sub-page size 2048
Mar 30 00:32:51 kernel: ubi1: VID header offset: 2048 (aligned 2048), data offset: 4096
Mar 30 00:32:51 kernel: ubi1: good PEBs: 64, bad PEBs: 0, corrupted PEBs: 0

&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;Mar 30 02:31:22 kernel: klogd started: BusyBox v1.24.1 (2018-12-27 20:18:22 CST)
Mar 30 02:31:35 rss-redir[28262]: server recv: Connection reset by peer
Mar 30 02:33:44 rss-redir[28272]: server recv: Connection reset by peer
Mar 30 02:40:34 rss-redir[28267]: server recv: Connection reset by peer
Mar 30 02:45:06 rss-redir[28257]: server recv: Connection reset by peer
Mar 30 02:52:34 rss-redir[28262]: server recv: Connection reset by peer
Mar 30 02:54:29 rss-redir[28262]: server recv: Connection reset by peer
Mar 30 02:54:29 rss-redir[28257]: server recv: Connection reset by peer
Mar 30 02:54:29 rss-redir[28267]: server recv: Connection reset by peer
Mar 30 03:07:04 rss-redir[28257]: server recv: Connection reset by peer
Mar 30 03:07:49 rss-redir[28267]: server recv: Connection reset by peer
Mar 30 03:07:49 rss-redir[28267]: server recv: Connection reset by peer
Mar 30 03:07:49 rss-redir[28257]: server recv: Connection reset by peer
Mar 30 03:07:49 rss-redir[28257]: server recv: Connection reset by peer
Mar 30 03:07:49 rss-redir[28262]: server recv: Connection reset by peer
Mar 30 03:18:35 rss-redir[28267]: server recv: Connection reset by peer
Mar 30 03:20:21 rss-redir[28267]: server recv: Connection reset by peer
Mar 30 03:21:02 rss-redir[28267]: server recv: Connection reset by peer
Mar 30 03:21:22 rss-redir[28262]: server recv: Connection reset by peer
Mar 30 03:23:24 rss-redir[28272]: server recv: Connection reset by peer
Mar 30 03:26:53 rss-redir[28272]: server recv: Connection reset by peer
Mar 30 03:27:04 rss-redir[28257]: server recv: Connection reset by peer
Mar 30 03:27:27 rss-redir[28272]: server recv: Connection reset by peer
Mar 30 03:28:50 rss-redir[28257]: server recv: Connection reset by peer
Mar 30 03:29:28 rss-redir[28262]: server recv: Connection reset by peer
Mar 30 03:29:28 rss-redir[28262]: server recv: Connection reset by peer
Mar 30 03:29:28 rss-redir[28257]: server recv: Connection reset by peer
Mar 30 03:29:28 rss-redir[28272]: server recv: Connection reset by peer
Mar 30 03:29:28 rss-redir[28272]: server recv: Connection reset by peer
Mar 30 03:34:02 rss-redir[28257]: server recv: Connection reset by peer
Mar 30 03:37:02 rss-redir[28257]: server recv: Connection reset by peer
Mar 30 03:39:33 rss-redir[28272]: server recv: Connection reset by peer
Mar 30 03:40:02 rss-redir[28262]: server recv: Connection reset by peer
Mar 30 03:41:02 rss-redir[28272]: server recv: Connection reset by peer
Mar 30 03:41:31 rss-redir[28262]: server recv: Connection reset by peer
Mar 30 03:41:52 rss-redir[28272]: server recv: Connection reset by peer
Mar 30 03:42:02 rss-redir[28257]: server recv: Connection reset by peer
Mar 30 03:43:02 rss-redir[28267]: server recv: Connection reset by peer
Mar 30 03:44:29 rss-redir[28272]: server recv: Connection reset by peer
Mar 30 04:01:01 rss-redir[28257]: server recv: Connection reset by peer
Mar 30 04:03:40 rss-redir[28262]: server recv: Connection reset by peer
Mar 30 04:19:58 rss-redir[28267]: remote recv: Connection reset by peer
Mar 30 04:20:17 rss-redir[28262]: remote recv: Connection reset by peer
Mar 30 04:20:23 rss-redir[28257]: remote recv: Connection reset by peer
Mar 30 04:20:25 rss-local[28295]: remote_recv_cb_recv: Connection reset by peer
Mar 30 04:20:26 rss-local[28295]: remote_recv_cb_recv: Connection reset by peer
Mar 30 04:20:28 rss-redir[28262]: remote recv: Connection reset by peer
Mar 30 04:20:37 rss-redir[28267]: remote recv: Connection reset by peer
Mar 30 04:20:42 rss-redir[28272]: remote recv: Connection reset by peer
Mar 30 04:20:48 rss-redir[28262]: remote recv: Connection reset by peer
Mar 30 04:20:55 rss-redir[28267]: remote recv: Connection reset by peer
Mar 30 04:21:00 rss-redir[28262]: remote recv: Connection reset by peer
Mar 30 04:21:19 rss-redir[28267]: remote recv: Connection reset by peer
Mar 30 04:44:32 rss-redir[28267]: remote recv: Connection timed out
Mar 30 05:20:57 afpd[9283]: AFP3.3 Login by weini
Mar 30 05:20:57 cnid_dbd[9290]: Couldn&#39;t open extension maping file /usr/etc/extmap.conf
Mar 30 05:20:57 cnid_dbd[9290]: Couldn&#39;t load extension -&amp;gt; type/creator mappings file &amp;quot;/usr/etc/extmap.conf&amp;quot;
Mar 30 05:20:58 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.___var.txt&amp;quot;): not an adouble:osx file
Mar 30 05:20:58 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__folder_list.txt&amp;quot;): not an adouble:osx file
Mar 30 05:20:58 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__weini_var.txt&amp;quot;): not an adouble:osx file
Mar 30 05:21:39 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.___var.txt&amp;quot;): not an adouble:osx file
Mar 30 05:21:39 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__folder_list.txt&amp;quot;): not an adouble:osx file
Mar 30 05:21:39 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__weini_var.txt&amp;quot;): not an adouble:osx file
Mar 30 05:21:39 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.___var.txt&amp;quot;): not an adouble:osx file
Mar 30 05:21:39 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__folder_list.txt&amp;quot;): not an adouble:osx file
Mar 30 05:21:39 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__weini_var.txt&amp;quot;): not an adouble:osx file
Mar 30 05:21:40 kernel: thfsplus: walked past end of dir
Mar 30 05:21:40 kernel: thfsplus: walked past end of dir
Mar 30 05:21:45 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.___var.txt&amp;quot;): not an adouble:osx file
Mar 30 05:21:45 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__folder_list.txt&amp;quot;): not an adouble:osx file
Mar 30 05:21:45 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__weini_var.txt&amp;quot;): not an adouble:osx file
Mar 30 05:22:56 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.___var.txt&amp;quot;): not an adouble:osx file
Mar 30 05:22:56 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__folder_list.txt&amp;quot;): not an adouble:osx file
Mar 30 05:22:56 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__weini_var.txt&amp;quot;): not an adouble:osx file
Mar 30 05:25:05 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.___var.txt&amp;quot;): not an adouble:osx file
Mar 30 05:25:05 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__folder_list.txt&amp;quot;): not an adouble:osx file
Mar 30 05:25:05 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__weini_var.txt&amp;quot;): not an adouble:osx file
Mar 30 05:35:05 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.___var.txt&amp;quot;): not an adouble:osx file
Mar 30 05:35:05 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__folder_list.txt&amp;quot;): not an adouble:osx file
Mar 30 05:35:05 afpd[9283]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__weini_var.txt&amp;quot;): not an adouble:osx file
May  5 13:05:08 kernel: klogd started: BusyBox v1.24.1 (2018-12-27 20:18:22 CST)
May  5 13:05:08 kernel: Linux version 4.1.27 (sadog@ubuntu) (gcc version 5.3.0 (Buildroot 2016.02) ) #2 SMP PREEMPT Thu Dec 27 20:40:52 CST 2018
May  5 13:05:08 kernel: CPU: AArch64 Processor [420f1000] revision 0
May  5 13:05:08 kernel: Kernel command line: coherent_pool=1M cpuidle_sysfs_switch
May  5 13:05:08 kernel: Virtual kernel memory layout:
May  5 13:05:08 kernel:     vmalloc : 0xffffff8000000000 - 0xffffffbdffff0000   (   247 GB)
May  5 13:05:08 kernel:     vmemmap : 0xffffffbe00000000 - 0xffffffbfc0000000   (     7 GB maximum)
May  5 13:05:08 kernel:               0xffffffbe00000000 - 0xffffffbe00e00000   (    14 MB actual)
May  5 13:05:08 kernel:     fixed   : 0xffffffbffabfd000 - 0xffffffbffac00000   (    12 KB)
May  5 13:05:08 kernel:     PCI I/O : 0xffffffbffae00000 - 0xffffffbffbe00000   (    16 MB)
May  5 13:05:08 kernel:     modules : 0xffffffbffc000000 - 0xffffffc000000000   (    64 MB)
May  5 13:05:08 kernel:     memory  : 0xffffffc000000000 - 0xffffffc040000000   (  1024 MB)
May  5 13:05:08 kernel:       .init : 0xffffffc0006b9000 - 0xffffffc0006f3000   (   232 KB)
May  5 13:05:08 kernel:       .text : 0xffffffc000080000 - 0xffffffc0006b8294   (  6369 KB)
May  5 13:05:08 kernel:       .data : 0xffffffc0006f4000 - 0xffffffc00073cf00   (   292 KB)
May  5 13:05:08 kernel: Broadcom Logger v0.1
May  5 13:05:08 kernel: creating mapping for reserved memory phys 0x0c400000 virt 0xffffffc00c400000 size 0x00e00000 for dhd2
May  5 13:05:08 kernel: Do not need to create mapping for reserved memory phys 0x0e000000 size 0x02000000 for buffer
May  5 13:05:08 kernel: creating mapping for reserved memory phys 0x0d200000 virt 0xffffffc00d200000 size 0x00e00000 for flow
May  5 13:05:08 kernel: pmc_init:PMC using DQM mode
May  5 13:05:08 kernel: CPU1: Booted secondary processor
May  5 13:05:08 kernel: CPU2: Booted secondary processor
May  5 13:05:08 kernel: CPU3: Booted secondary processor
May  5 13:05:08 kernel: skbFreeTask created successfully
May  5 13:05:08 kernel: gbpm_do_work scheduled
May  5 13:05:08 kernel: ^[[0;34mBLOG v3.0 Initialized^[[0m
May  5 13:05:08 kernel: BLOG Rule v1.0 Initialized
May  5 13:05:08 kernel: Broadcom IQoS v0.1 initialized
May  5 13:05:08 kernel: Broadcom GBPM v0.1 initialized
May  5 13:05:08 kernel: nand: Could not find valid ONFI parameter page; aborting
May  5 13:05:08 kernel: &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; For primary mtd partition rootfs, cferam/vmlinux.lz mounted as JFFS2, vmlinux fs mounted as UBIFS &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;
May  5 13:05:08 kernel: Secondary mtd partition rootfs_update detected as JFFS2 for cferam/vmlinux source and UBIFS for vmlinux filesystem
May  5 13:05:08 kernel: Creating 10 MTD partitions on &amp;quot;brcmnand.0&amp;quot;:
May  5 13:05:08 kernel: 0x000005c60000-0x00000af00000 : &amp;quot;rootfs&amp;quot;
May  5 13:05:08 kernel: 0x000000540000-0x000005800000 : &amp;quot;rootfs_update&amp;quot;
May  5 13:05:08 kernel: 0x00000f700000-0x00000ff00000 : &amp;quot;data&amp;quot;
May  5 13:05:08 kernel: 0x000000000000-0x000000100000 : &amp;quot;nvram&amp;quot;
May  5 13:05:08 kernel: 0x000000100000-0x000005800000 : &amp;quot;image_update&amp;quot;
May  5 13:05:08 kernel: 0x000005800000-0x00000af00000 : &amp;quot;image&amp;quot;
May  5 13:05:08 kernel: 0x000005800000-0x000005c60000 : &amp;quot;bootfs&amp;quot;
May  5 13:05:08 kernel: 0x000000100000-0x000000540000 : &amp;quot;bootfs_update&amp;quot;
May  5 13:05:08 kernel: 0x00000b700000-0x00000f700000 : &amp;quot;misc2&amp;quot;
May  5 13:05:08 kernel: 0x00000af00000-0x00000b700000 : &amp;quot;misc1&amp;quot;
May  5 13:05:08 kernel: brcmboard registered

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;重启可以看到mar-30-001938-后-may--5-130508-kernel-klogd-started-busybox-v1241-2018-12-27-201822-cst&#34;&gt;重启可以看到Mar 30 00:19:38 后 May  5 13:05:08 kernel: klogd started: BusyBox v1.24.1 (2018-12-27 20:18:22 CST)&lt;/h4&gt;
&lt;h4 id=&#34;前面看到apf-推荐苹果timemachine备份造成重启&#34;&gt;前面看到APF, 推荐苹果Timemachine备份造成重启&lt;/h4&gt;
&lt;h4 id=&#34;还有个疑问-重启时的硬件时间不对&#34;&gt;还有个疑问, 重启时的硬件时间不对.&lt;/h4&gt;
&lt;h4 id=&#34;在华硕路由器系统设置中开启ssh-ssh登录到华硕路由器中&#34;&gt;在华硕路由器系统设置中开启ssh, ssh登录到华硕路由器中&lt;/h4&gt;
&lt;h4 id=&#34;查看etctz-内容是gmt-8-etclocaltime内容有cst-8-表示时区设置是正确的&#34;&gt;查看/etc/TZ 内容是GMT-8, /etc/localtime内容有CST-8, 表示时区设置是正确的&lt;/h4&gt;
&lt;h4 id=&#34;还是更改了ntp的服务地址&#34;&gt;还是更改了ntp的服务地址&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;cn.ntp.org.cn
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;后面再次验证-没有重启了-手动重启可以看到硬件时间仍然不对的&#34;&gt;后面再次验证, 没有重启了. 手动重启可以看到硬件时间仍然不对的.&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Mar 30 11:54:35 afpd[9584]: AFP statistics: 103709.69 KB read, 51241.18 KB written
Mar 30 11:54:35 afpd[9584]: done
Mar 30 11:55:09 afpd[10854]: AFP3.3 Login by weini
Mar 30 11:55:09 afpd[10854]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.___var.txt&amp;quot;): not an adouble:osx file
Mar 30 11:55:09 afpd[10854]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__folder_list.txt&amp;quot;): not an adouble:osx file
Mar 30 11:55:09 afpd[10854]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__weini_var.txt&amp;quot;): not an adouble:osx file
Mar 30 11:55:39 afpd[10854]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.___var.txt&amp;quot;): not an adouble:osx file
Mar 30 11:55:39 afpd[10854]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__folder_list.txt&amp;quot;): not an adouble:osx file
Mar 30 11:55:39 afpd[10854]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__weini_var.txt&amp;quot;): not an adouble:osx file
Mar 30 11:55:39 afpd[10854]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.___var.txt&amp;quot;): not an adouble:osx file
Mar 30 11:55:39 afpd[10854]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__folder_list.txt&amp;quot;): not an adouble:osx file
Mar 30 11:55:39 afpd[10854]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__weini_var.txt&amp;quot;): not an adouble:osx file
Mar 30 11:55:39 kernel: thfsplus: walked past end of dir
Mar 30 11:55:39 kernel: thfsplus: walked past end of dir
Mar 30 11:55:45 afpd[10854]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.___var.txt&amp;quot;): not an adouble:osx file
Mar 30 11:55:45 afpd[10854]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__folder_list.txt&amp;quot;): not an adouble:osx file
Mar 30 11:55:45 afpd[10854]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__weini_var.txt&amp;quot;): not an adouble:osx file
Mar 30 11:56:47 afpd[10854]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.___var.txt&amp;quot;): not an adouble:osx file
Mar 30 11:56:47 afpd[10854]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__folder_list.txt&amp;quot;): not an adouble:osx file
Mar 30 11:56:47 afpd[10854]: ad_valid_header_osx(&amp;quot;/tmp/mnt/sda1/.__weini_var.txt&amp;quot;): not an adouble:osx file
Mar 30 11:57:05 afpd[10854]: AFP logout by weini
Mar 30 11:57:05 afpd[10854]: AFP statistics: 116551.07 KB read, 55467.70 KB written
Mar 30 11:57:05 afpd[10854]: done
Mar 30 11:58:02 rc_service: httpd 1041:notify_rc start_autodet
Mar 30 11:58:08 rc_service: httpd 1041:notify_rc reboot
Mar 30 11:58:08 iTunes: daemon is stoped
Mar 30 11:58:08 FTP Server: daemon is stoped
Mar 30 11:58:08 Samba Server: smb daemon is stopped
Mar 30 11:58:08 Timemachine: daemon is stoped
Mar 30 11:58:08 WEBDAV Server: daemon is stoped
Mar 30 11:58:10 A.QoS: set_qos_off, ret=65280
Mar 30 11:58:10 WEBDAV Server: daemon is stoped
Mar 30 11:58:10 Mastiff: Got SIGTERM
May  5 13:05:08 kernel: klogd started: BusyBox v1.24.1 (2018-12-27 20:18:22 CST)
May  5 13:05:08 kernel: Linux version 4.1.27 (sadog@ubuntu) (gcc version 5.3.0 (Buildroot 2016.02) ) #2 SMP PREEMPT Thu Dec 27 20:40:52 CST 2018
May  5 13:05:08 kernel: CPU: AArch64 Processor [420f1000] revision 0
May  5 13:05:08 kernel: Kernel command line: coherent_pool=1M cpuidle_sysfs_switch
May  5 13:05:08 kernel: Virtual kernel memory layout:
May  5 13:05:08 kernel:     vmalloc : 0xffffff8000000000 - 0xffffffbdffff0000   (   247 GB)
May  5 13:05:08 kernel:     vmemmap : 0xffffffbe00000000 - 0xffffffbfc0000000   (     7 GB maximum)
May  5 13:05:08 kernel:               0xffffffbe00000000 - 0xffffffbe00e00000   (    14 MB actual)
May  5 13:05:08 kernel:     fixed   : 0xffffffbffabfd000 - 0xffffffbffac00000   (    12 KB)
May  5 13:05:08 kernel:     PCI I/O : 0xffffffbffae00000 - 0xffffffbffbe00000   (    16 MB)
May  5 13:05:08 kernel:     modules : 0xffffffbffc000000 - 0xffffffc000000000   (    64 MB)
May  5 13:05:08 kernel:     memory  : 0xffffffc000000000 - 0xffffffc040000000   (  1024 MB)
May  5 13:05:08 kernel:       .init : 0xffffffc0006b9000 - 0xffffffc0006f3000   (   232 KB)
May  5 13:05:08 kernel:       .text : 0xffffffc000080000 - 0xffffffc0006b8294   (  6369 KB)
May  5 13:05:08 kernel:       .data : 0xffffffc0006f4000 - 0xffffffc00073cf00   (   292 KB)
May  5 13:05:08 kernel: Broadcom Logger v0.1
May  5 13:05:08 kernel: creating mapping for reserved memory phys 0x0c400000 virt 0xffffffc00c400000 size 0x00e00000 for dhd2
May  5 13:05:08 kernel: Do not need to create mapping for reserved memory phys 0x0e000000 size 0x02000000 for buffer
May  5 13:05:08 kernel: creating mapping for reserved memory phys 0x0d200000 virt 0xffffffc00d200000 size 0x00e00000 for flow
May  5 13:05:08 kernel: pmc_init:PMC using DQM mode
May  5 13:05:08 kernel: CPU1: Booted secondary processor
May  5 13:05:08 kernel: CPU2: Booted secondary processor
May  5 13:05:08 kernel: CPU3: Booted secondary processor
May  5 13:05:08 kernel: skbFreeTask created successfully
May  5 13:05:08 kernel: gbpm_do_work scheduled
May  5 13:05:08 kernel: ^[[0;34mBLOG v3.0 Initialized^[[0m
May  5 13:05:08 kernel: BLOG Rule v1.0 Initialized
May  5 13:05:08 kernel: Broadcom IQoS v0.1 initialized
May  5 13:05:08 kernel: Broadcom GBPM v0.1 initialized
May  5 13:05:08 kernel: nand: Could not find valid ONFI parameter page; aborting
May  5 13:05:08 kernel: &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; For primary mtd partition rootfs, cferam/vmlinux.lz mounted as JFFS2, vmlinux fs mounted as UBIFS &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;
May  5 13:05:08 kernel: Secondary mtd partition rootfs_update detected as JFFS2 for cferam/vmlinux source and UBIFS for vmlinux filesystem
May  5 13:05:08 kernel: Creating 10 MTD partitions on &amp;quot;brcmnand.0&amp;quot;:
May  5 13:05:08 kernel: 0x000005c60000-0x00000af00000 : &amp;quot;rootfs&amp;quot;
May  5 13:05:08 kernel: 0x000000540000-0x000005800000 : &amp;quot;rootfs_update&amp;quot;
May  5 13:05:08 kernel: 0x00000f700000-0x00000ff00000 : &amp;quot;data&amp;quot;
May  5 13:05:08 kernel: 0x000000000000-0x000000100000 : &amp;quot;nvram&amp;quot;
May  5 13:05:08 kernel: 0x000000100000-0x000005800000 : &amp;quot;image_update&amp;quot;
May  5 13:05:08 kernel: 0x000005800000-0x00000af00000 : &amp;quot;image&amp;quot;
May  5 13:05:08 kernel: 0x000005800000-0x000005c60000 : &amp;quot;bootfs&amp;quot;
May  5 13:05:08 kernel: 0x000000100000-0x000000540000 : &amp;quot;bootfs_update&amp;quot;
May  5 13:05:08 kernel: 0x00000b700000-0x00000f700000 : &amp;quot;misc2&amp;quot;
May  5 13:05:08 kernel: 0x00000af00000-0x00000b700000 : &amp;quot;misc1&amp;quot;
May  5 13:05:08 kernel: brcmboard registered
May  5 13:05:08 kernel: brcmboard: brcm_board_init entry
May  5 13:05:08 kernel: print_rst_status: Last RESET due to SW reset
May  5 13:05:08 kernel: print_rst_status: RESET reason: 0x00000000
May  5 13:05:08 kernel: DYING GASP IRQ Initialized and Enabled
May  5 13:05:08 kernel: map_hw_timer_interrupt,132: interrupt_id 22
May  5 13:05:08 kernel: map_hw_timer_interrupt,132: interrupt_id 23
May  5 13:05:08 kernel: map_hw_timer_interrupt,132: interrupt_id 24
May  5 13:05:08 kernel: map_hw_timer_interrupt,132: interrupt_id 25
May  5 13:05:08 kernel: Registering button 0 (ffffffc0007773e0) (bpGpio: 0000801e, bpExtIrq:00000000 (0))
May  5 13:05:08 kernel:     extIrqIdx:0, gpioNum:30 ACTIVE LOW
May  5 13:05:08 kernel: Registering button 1 (ffffffc0007774a0) (bpGpio: 0000801d, bpExtIrq:00000001 (1))
May  5 13:05:08 kernel:     extIrqIdx:1, gpioNum:29 ACTIVE LOW
May  5 13:05:08 kernel: Registering button 2 (ffffffc000777560) (bpGpio: 0000801c, bpExtIrq:00000001 (1))
May  5 13:05:08 kernel:     extIrqIdx:1, gpioNum:28 ACTIVE LOW
May  5 13:05:08 kernel: genirq: Flags mismatch irq 36. 00000000 (brcm_36) vs. 00000000 (brcm_36)
May  5 13:05:08 kernel: request_irq failed for irq=36 (brcm_36) retval=-16
May  5 13:05:08 kernel: registerBtns: Button index 3 out of range (max 3)
May  5 13:05:08 kernel: BPM: tot_mem_size=1073741824B (1024MB), buf_mem_size &amp;lt;15%&amp;gt; =161061270B (153MB), num of buffers=71902, buf size=2240
May  5 13:05:08 kernel: Broadcom BPM Module Char Driver v0.1 Registered&amp;lt;3004&amp;gt;^[[0m
May  5 13:05:08 kernel: PCIe HCD (impl1)^M
May  5 13:05:08 kernel:   bcm963xx-pcie: found core [0] Rev [ 3. 4]^M
May  5 13:05:08 kernel: pci 0000:00:00.0: of_irq_parse_pci() failed with rc=-22
May  5 13:05:08 kernel: pci 0000:01:00.0: of_irq_parse_pci() failed with rc=-22
May  5 13:05:08 kernel:   bcm963xx-pcie: found core [1] Rev [ 3. 4]^M
May  5 13:05:08 kernel: pci 0001:00:00.0: of_irq_parse_pci() failed with rc=-22
May  5 13:05:08 kernel: pci 0001:01:00.0: of_irq_parse_pci() failed with rc=-22
May  5 13:05:08 kernel:   bcm963xx-pcie: found core [2] Rev [ 3. 4]^M
May  5 13:05:08 kernel: pci 0002:00:00.0: of_irq_parse_pci() failed with rc=-22
May  5 13:05:08 kernel: pci 0002:01:00.0: of_irq_parse_pci() failed with rc=-22
May  5 13:05:08 kernel: ubi0: attaching mtd0
May  5 13:05:08 kernel: ubi0: scanning is finished
May  5 13:05:08 kernel: ubi0: attached mtd0 (name &amp;quot;rootfs&amp;quot;, size 82 MiB)
May  5 13:05:08 kernel: ubi0: PEB size: 131072 bytes (128 KiB), LEB size: 126976 bytes
May  5 13:05:08 kernel: ubi0: min./max. I/O unit sizes: 2048/2048, sub-page size 2048
May  5 13:05:08 kernel: ubi0: VID header offset: 2048 (aligned 2048), data offset: 4096
May  5 13:05:08 kernel: ubi0: good PEBs: 661, bad PEBs: 0, corrupted PEBs: 0
May  5 13:05:08 kernel: ubi0: user volume: 1, internal volumes: 1, max. volumes count: 128
May  5 13:05:08 kernel: ubi0: max/mean erase counter: 1/0, WL threshold: 4096, image sequence number: 0
May  5 13:05:08 kernel: ubi0: available PEBs: 0, total reserved PEBs: 661, PEBs reserved for bad PEB handling: 13
May  5 13:05:08 kernel: ubi0: background thread &amp;quot;ubi_bgt0d&amp;quot; started, PID 70
May  5 13:05:08 kernel: UBIFS (ubi0:0): UBIFS: mounted UBI device 0, volume 0, name &amp;quot;rootfs_ubifs&amp;quot;, R/O mode
May  5 13:05:08 kernel: UBIFS (ubi0:0): LEB size: 126976 bytes (124 KiB), min./max. I/O unit sizes: 2048 bytes/2048 bytes
May  5 13:05:08 kernel: UBIFS (ubi0:0): FS size: 80375808 bytes (76 MiB, 633 LEBs), journal size 9023488 bytes (8 MiB, 72 LEBs)
May  5 13:05:08 kernel: UBIFS (ubi0:0): reserved for root: 0 bytes (0 KiB)
May  5 13:05:08 kernel: UBIFS (ubi0:0): media format: w4/r0 (latest is w4/r0), UUID 667D54BB-C195-45B5-AA00-F807B65C3DAC, small LPT model
May  5 13:05:08 kernel: wlcsm: module license &#39;Proprietary&#39; taints kernel.
May  5 13:05:08 kernel: Disabling lock debugging due to kernel taint
May  5 13:05:08 kernel: bm_base_addr 0xffffffc00e000000, size 33554432, bm_base_addr_phys 0x000000000e000000
May  5 13:05:08 kernel: fm_base_addr 0xffffffc00d200000, size 14680064, fm_base_addr_phys 0x000000000d200000
May  5 13:05:08 kernel: Scratch pad is not initialized.
May  5 13:05:08 kernel: RDP Physical address=0x82200000 Virtual address = 0xffffff8000780000
May  5 13:05:08 kernel: configure_runner: NATC keysize 0x100070 key element size 16 contextsize 0x102000 context element size 64
May  5 13:05:08 kernel: ++++Runner gso_desc_pool created successfully
May  5 13:05:08 kernel: rdd_init_params.runner_nat_cache_key_ptr=0xffffffc00d900000
May  5 13:05:08 kernel: FPM_BPM phy_addr 0x82c30000,virt_addr 0xffffff80003fe000
May  5 13:05:08 kernel:  RDP PKT memory = 32MB : Max Possible Bufs &amp;lt;16384&amp;gt; of size &amp;lt;2048&amp;gt;; Allocating &amp;lt;15360&amp;gt; bufs; RDP enum &amp;lt;5&amp;gt;
May  5 13:05:08 kernel: brcmchipinfo: brcm_chipinfo_init entry
May  5 13:05:08 kernel: NBUFF v1.0 Initialized
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;反馈给华硕官方了-等待后续&#34;&gt;反馈给华硕官方了, 等待后续&lt;/h3&gt;

    </description>
    </item>
    
    <item>
    <title>Jmeter性能测试并添加服务器cpu内存使用率</title>
    <link>https://charles-one.github.io/actiger/blog/test/jmeter%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B9%B6%E6%B7%BB%E5%8A%A0%E6%9C%8D%E5%8A%A1%E5%99%A8cpu%E5%86%85%E5%AD%98%E4%BD%BF%E7%94%A8%E7%8E%87/</link>
    <pubDate>Thu, 14 Mar 2019 23:31:20 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/test/jmeter%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B9%B6%E6%B7%BB%E5%8A%A0%E6%9C%8D%E5%8A%A1%E5%99%A8cpu%E5%86%85%E5%AD%98%E4%BD%BF%E7%94%A8%E7%8E%87/</guid>
    <description>
        &lt;h3 id=&#34;0-准备工作&#34;&gt;0. 准备工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;搭建静态博客Hugo, 建立Hugo服务作为测试接口&lt;/li&gt;
&lt;li&gt;服务端centOS7.6.1810, 服务端ServerAgent&lt;/li&gt;
&lt;li&gt;本机安装&lt;a target=&#34;_blank&#34; href=&#34;https://www.java.com/zh_CN/download/mac_download.jsp&#34;&gt;Java8&lt;/a&gt;, 并设置环境变量&lt;/li&gt;
&lt;li&gt;本机jmeter, jmeter插件管理, Servers Performance Monitoring插件&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1服务端centos7--搭建hugo-并建立hugo服务-创建接口&#34;&gt;1.服务端CentOS7  搭建Hugo, 并建立Hugo服务, 创建接口.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;搭建Huog&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;请参考这个&lt;a target=&#34;_blank&#34; href=&#34;https://actiger.com/blog/linux/使用hugo和github-pages搭建静态网站/&#34;&gt;搭建Hugo文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考到这条语句下就可以了,这条语句下面的内容不用看了&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo server --theme=hugo-paper --bind=“10.211.55.9即是你的ip(不指定则默认只能本地访问)” --baseUrl=“http://10.211.55.9&amp;quot; --port=1313
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;创建接口&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;hugo server --theme=hugo-paper --bind=“10.211.55.9即是你的ip(不指定则默认只能本地访问)” --baseUrl=“http://10.211.55.9&amp;quot; --port=1313
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;检测服务端接口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在浏览器中访问 &lt;strong&gt;http://你的ip:1313.如未指定,则是http://localhost:1313&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;能正常访问显示文章就完成了&lt;/p&gt;
&lt;h3 id=&#34;2-本机下载jmeter-jmeter插件管理-servers-performance-monitoring插件&#34;&gt;2. 本机下载jmeter, jmeter插件管理, Servers Performance Monitoring插件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;下载地址Jmeter, 安装插件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://jmeter.apache.org/download_jmeter.cgi&#34;&gt;Jmeter下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载并解压&lt;/p&gt;
&lt;p&gt;&lt;a target=&#34;_blak&#34; href=&#34;https://jmeter-plugins.org/get/&#34;&gt;Jmeter插件管理&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载并解压出对应jar文件, 并放在apache-jmeter-5.1/lib/ext中&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关闭Jmeter, 再重新打开Jmeter&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;进入选项(Options)-&amp;gt;插件管理(Plugins Manager)中&lt;/p&gt;
&lt;p&gt;搜索perfmon并安装&lt;/p&gt;
&lt;h3 id=&#34;3-服务端下载perfmon-server-agent运行-添加防火墙端口4444&#34;&gt;3. 服务端下载PerfMon Server Agent运行, 添加防火墙端口4444&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://github.com/undera/perfmon-agent/archive/2.2.3.tar.gz&#34;&gt;下载PerfMon Server Agent&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加防火墙接口4444, 因为PerfMon Server Agent使用的是这个端口, 解压运行&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;
firewall-cmd --add-port=4444/tcp --permanent
firewall-cmd --reload

wget https://github.com/undera/perfmon-agent/releases/download/2.2.3/ServerAgent-2.2.3.zip

unzip -d ServerAgent-2.2.1 ServerAgent-2.2.1.zip  (如果缺少unzip, yum install unzip)

cd ServerAgent-2.2.1
./startAgent.sh

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-本机启动jmeter-并获取服务端cpu内存使用&#34;&gt;4. 本机启动Jmeter, 并获取服务端cpu,内存使用&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;使用Jmeter须安装Java, Java环境变量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在apache-jmeter-5.1/bin下 ./jmeter(linxu mac下启动)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用Jmeter建一个线程组(Thread Group), 并设置线程数500, 线程组时间300, 循环3&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;线程组(Thread Group)-&amp;gt;add-&amp;gt;Sample-&amp;gt;HTTP Request, 即上面线程创建HTTP请求&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;内容是:&lt;/p&gt;
&lt;p&gt;Protocol: http&lt;/p&gt;
&lt;p&gt;ip: 你的hugo绑定的ip&lt;/p&gt;
&lt;p&gt;Port Number: 1313&lt;/p&gt;
&lt;p&gt;Method: GET&lt;/p&gt;
&lt;p&gt;Path: about (这个是你的文章路径http://10.211.55.9:1313/about/, 所以Path就是about)&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;线程组(Thread Group)-&amp;gt;add-&amp;gt;Listener-&amp;gt;jp@gc-PerfMon Metrics Collector&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;选中刚刚添加的jp@gc-PerfMon Metrics Collector-&amp;gt;Add Row&lt;/p&gt;
&lt;p&gt;填写ip: 10.211.55.9   Port: 4444  Metric to collect: cpu
填写ip: 10.211.55.9   Port: 4444  Metric to collect: Memory
填写ip: 10.211.55.9   Port: 4444  Metric to collect: Network I/O&lt;/p&gt;
&lt;h3 id=&#34;5-运行刚刚的线程&#34;&gt;5. 运行刚刚的线程&lt;/h3&gt;
&lt;p&gt;运行刚刚的线程即可获取10.211.55.9 服务端的cpu,内存,网络情况&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在图像Jmeter上运行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;后台运行
在apache-jmeter-5.1/bin下 (linxu mac下启动, windows是jmeter.bat)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;./jmeter -n -t test_file/my_hugo_test.jmx -l result_report_4.jtl -e -o Report_4
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;报告放在Report_4中, 用浏览器打开index.html即可&lt;/p&gt;
&lt;p&gt;结合图形页面中cpu 内存使用, 分析接口压力情况&lt;/p&gt;

    </description>
    </item>
    
    <item>
    <title>使用Hugo和GitHub Pages搭建静态网站</title>
    <link>https://charles-one.github.io/actiger/blog/linux/%E4%BD%BF%E7%94%A8hugo%E5%92%8Cgithub-pages%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/</link>
    <pubDate>Wed, 13 Mar 2019 21:35:23 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/%E4%BD%BF%E7%94%A8hugo%E5%92%8Cgithub-pages%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/</guid>
    <description>
        &lt;h3 id=&#34;0-前提条件&#34;&gt;0. 前提条件&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;电脑安装git(Mac linux都需要安装)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://actiger.com/blog/linux/linux安装go并设置环境变量/&#34;&gt;安装go并设置环境变量(仅linux下需要)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;虚拟机Centos7.6.1810(测试用, 不需要安装)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;1-安装hugo&#34;&gt;1. 安装hugo&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;mac直接使用brew install hugo就可以了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;linux下源码安装&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;下载并编译&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;mkdir ~/src
cd ~/src
git clone https://github.com/gohugoio/hugo.git
cd hugo
go install
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;添加环境变量&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;# 当前用户~/go文件绝对路径是GOPATH,Go编译后的文件在~/go/bin中
# 如现在当前用户是jenkins
vim /etc/profile 添加
export export GOPATH=/var/lib/jenkins/go
export PATH=${PATH}:$GOPATH/bin
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;重新生效/etc/profile文件&lt;/p&gt;
&lt;p&gt;source /etc/profile&lt;/p&gt;
&lt;p&gt;再次hugo vimersion&lt;/p&gt;
&lt;p&gt;就会显示hugo版本, 表示可用&lt;/p&gt;
&lt;h3 id=&#34;2-使用hugo创建个人网站&#34;&gt;2. 使用Hugo创建个人网站&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;创建静态网站文件夹&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;cd ~

hugo new site actiger
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;写第一篇markdown文章, &lt;a href=&#34;http://xianbai.me/learn-md/article/about/readme.html&#34;&gt;markdown语法参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;cd ~/actiger
在目录~/actiger下执行hugo new about.md&lt;/p&gt;
&lt;p&gt;在这里会在~/actiger/content下创建一个文件about.md&lt;/p&gt;
&lt;p&gt;ls ~/actiger/content # 可以查看到&lt;/p&gt;
&lt;p&gt;添加内容&amp;quot;我写的第1篇文章&amp;quot;&lt;/p&gt;
&lt;p&gt;更改draft: true 为 draft:false&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Centos7.6.1810需要添加防火墙端口(仅虚拟机需要增加防火墙端口)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;firewall-cmd --add-port=1313/tcp --permanent
firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;使用主题生成本地服务, 查看博客效果, &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;更多主题下载hugo themes官网&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;cd ~/actiger/themes

git clone https://github.com/nanxiaobei/hugo-paper.git

cd ~/actiger

# --bind=&amp;quot;10.211.55.9&amp;quot;绑定ip , 使用本机则不需要绑定.
hugo server --theme=hugo-paper --bind=&amp;quot;10.211.55.9即是你的ip(不指定则默认只能本地访问)&amp;quot;  --baseUrl=&amp;quot;http://10.211.55.9/&amp;quot; --port=1313

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;浏览器输入http://你的ip:1313.如未指定,则是http://localhost:1313&lt;/p&gt;
&lt;p&gt;即可查看静态博客&lt;/p&gt;
&lt;h3 id=&#34;3-创建github项目&#34;&gt;3. 创建GitHub项目&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;在GitHub中创建actiger的public公共类型(私人需要付费)项目, 创建完后https://github.com/Charles-one/actiger&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-生成本地静态网站&#34;&gt;4. 生成本地静态网站&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd ~/actiger
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;生成静态网页&#34;&gt;生成静态网页&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;注意baseUrl后的地址是HTTPS的类型, githup pages强制https类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;baseUrl的结束有/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;actiger注意大小写&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo --theme=hugo-paper --baseUrl=&amp;quot;https://charles-one.github.io/actiger/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里会生成public文件夹&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/actiger/public

git init

git remote add github git@github.com:Charles-one/actiger.git

git config user.email &amp;quot;你的邮箱&amp;quot;

git config user.name &amp;quot;你的名字&amp;quot;

git add .

git commit -m &amp;quot;init&amp;quot;

git push -u github master:master
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;5-github中选择github-pages的分支&#34;&gt;5. Github中选择GitHub Pages的分支&lt;/h3&gt;
&lt;p&gt;进入,以我的项目setting设置里
&lt;a href=&#34;https://github.com/Charles-one/actiger/settings&#34;&gt;https://github.com/Charles-one/actiger/settings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;设置-&amp;gt;Github Pages&lt;/p&gt;
&lt;p&gt;选择Source为master即可&lt;/p&gt;
&lt;h3 id=&#34;6-查看github-pages&#34;&gt;6. 查看GitHub Pages&lt;/h3&gt;
&lt;p&gt;刷新进入https://github.com/Charles-one/actiger/settings&lt;/p&gt;
&lt;p&gt;设置-&amp;gt;Github Pages下, 看到你的网站地址是
&lt;strong&gt;&lt;a href=&#34;https://charles-one.github.io/actiger/&#34;&gt;https://charles-one.github.io/actiger/&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;哈哈, 可以自由的写博客了&lt;/p&gt;
&lt;h3 id=&#34;7-补充下如何添加图片mac压缩图片工具imageoptim&#34;&gt;7. 补充下如何添加图片.(Mac压缩图片工具ImageOptim)&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# 将自己的图片存放到如下位置
~/actiger/static/img/cat.JPG

# 执行hugo --theme=hugo-paper --baseUrl=&amp;quot;https://charles-one.github.io/actiger/&amp;quot;
# 会把cat.JPG存放到, ~/actiger/public/img/cat.JPG
# 文章的存放的位置 ~/actiger/public/about/index.html

# 使用相对路径添加图片, 以about文章存放位置index.html为参考系.
# 在Markdown中添加

# 将下面内容写入about.md中

![猫](../img/cat.JPG)

# 本文的路径是 actiger/public/linux/使用hugo和github-pages搭建静态网站/index.html
# 所以添加图片的相对路径是

&amp;lt;!--![cat](../../img/cat.JPG)--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;!--![猫](../../img/cat.JPG)--&gt;

    </description>
    </item>
    
    <item>
    <title>使用jenkins构建指定版本的Github项目Hugo</title>
    <link>https://charles-one.github.io/actiger/blog/linux/%E4%BD%BF%E7%94%A8jenkins%E6%9E%84%E5%BB%BA%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E7%9A%84github%E9%A1%B9%E7%9B%AEhugo/</link>
    <pubDate>Wed, 13 Mar 2019 17:02:19 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/%E4%BD%BF%E7%94%A8jenkins%E6%9E%84%E5%BB%BA%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E7%9A%84github%E9%A1%B9%E7%9B%AEhugo/</guid>
    <description>
        &lt;h3 id=&#34;0-前提条件-会使用到jenkins-go语言编译hugo&#34;&gt;0. 前提条件, 会使用到jenkins, go语言编译hugo&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://actiger.com/blog/linux/安装jenkins和插件/&#34;&gt;安装jenkinx&amp;lt;/&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://actiger.com/blog/linux/linux安装go并设置环境变量/&#34;&gt;Linux安装go并设置环境变量&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-创建一个jenkins任务&#34;&gt;1. 创建一个jenkins任务&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;创建一个Jenkins任务&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;输入Enter an item name, 这里名字是basic_hugo&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择Github组织&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再选择最左下&amp;quot;OK&amp;quot;按钮, 创建&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-编辑已创建的basic_hugo任务&#34;&gt;2. 编辑已创建的basic_hugo任务&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;进入basic_hugo任务编辑页面&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;进入http://&amp;lt;服务器ip&amp;gt;:8080/me/my-views/view/all/, 在名称下basicd_hugo鼠标悬停上去, 多选, 选择Configure
(或者使用Blue Ocean插件http://&amp;lt;服务器ip&amp;gt;:8080/blue/organizations/jenkins/basic_hugo/activity, 选择项目名称旁边的设置齿轮)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;进入编辑页, http://10.211.55.9:8080/job/basic_hugo/configure&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;在编辑页中设置github中hugo地址, 参数化分支名称&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GitHub项目-&amp;gt;项目URL 填写 &lt;a href=&#34;https://github.com/gohugoio/hugo.git/&#34;&gt;https://github.com/gohugoio/hugo.git/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;参数化构建过程-&amp;gt;字符参数
Name:  BARNCH
Default Value: master
Description	 分支名称&lt;/p&gt;
&lt;p&gt;Source Code Management-&amp;gt;Git-&amp;gt;Repositories&lt;/p&gt;
&lt;p&gt;Repository URL: &lt;a href=&#34;https://github.com/gohugoio/hugo.git&#34;&gt;https://github.com/gohugoio/hugo.git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Source Code Management-&amp;gt;Git-&amp;gt;Branches to build&lt;/p&gt;
&lt;p&gt;Branch Specifier (blank for &amp;lsquo;any&amp;rsquo;):    $BRANCH&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;构建Build脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选择 执行shell&lt;/p&gt;
&lt;p&gt;Command:
cd /var/lib/jenkins/workspace/basic_hugo # 拉取hugo项目存放文件路径
go install &amp;ndash;tags extended # hugo官方文档的构建方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;保存&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-尝试构建-解决构建中问题-为方便我使用了blue-ocean插件了&#34;&gt;3. 尝试构建, 解决构建中问题, 为方便我使用了Blue Ocean插件了&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;运行&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;进入项目地址,项目名称不一样地址也是不同的.http://&amp;lt;服务器ip&amp;gt;:8080/blue/organizations/jenkins/basic_hugo/activity&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击运行, 提示输入分支名称, 输入v0.54.0(可以选择hugo任意release分支名称)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击run&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;错误处理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;查看build step是失败的, 失败原因是go命令未找到&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里需要添加jenkins系统环境变量&lt;/p&gt;
&lt;p&gt;进入http://&amp;lt;服务器ip&amp;gt;:8080/configure
-&amp;gt;环境变量, 添加Name: PATH
Value: 这个值是你的linux中echo $PATH得到的, 每个人不一样, 不过都有go的环境变量&lt;/p&gt;
&lt;p&gt;勾选环境变量为选中状态, 并保存当前设置&lt;/p&gt;
&lt;p&gt;再次构建v0.54.0(这个版本)&lt;/p&gt;
&lt;p&gt;查看错误信息
缺少gcc和g++
yum -y isntall gcc gcc-c++&lt;/p&gt;
&lt;p&gt;保存后, 再次构建v0.54.0(这个版本)
应该是构建成功的&lt;/p&gt;
&lt;h3 id=&#34;4-检查hugo构建的版本&#34;&gt;4. 检查Hugo构建的版本&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;解决在命令行hugo命令不识别问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;hugo version提示hugo命令未找到&lt;/p&gt;
&lt;p&gt;需要添加hugo到环境变量中&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 当前用户~/go文件绝对路径是GOPATH,Go编译后的文件在~/go/bin中
# 现在当前用户是jenkins
vim /etc/profile 添加
export export GOPATH=/var/lib/jenkins/go
export PATH=${PATH}:$GOPATH/bin
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;重新生效/etc/profile文件&lt;/p&gt;
&lt;p&gt;source /etc/profile&lt;/p&gt;
&lt;p&gt;再次hugo vimersion&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo version
返回信息, 是刚刚构建的版本
Hugo Static Site Generator v0.54.0/extended linux/amd64 BuildDate: unknown
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>Linux安装go并设置环境变量</title>
    <link>https://charles-one.github.io/actiger/blog/linux/linux%E5%AE%89%E8%A3%85go%E5%B9%B6%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</link>
    <pubDate>Wed, 13 Mar 2019 16:36:41 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/linux%E5%AE%89%E8%A3%85go%E5%B9%B6%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</guid>
    <description>
        &lt;h3 id=&#34;mac用户直接使用brew-install-go即可&#34;&gt;Mac用户直接使用brew install go即可&lt;/h3&gt;
&lt;h3 id=&#34;linux用户&#34;&gt;Linux用户&lt;/h3&gt;
&lt;p&gt;wget &lt;a href=&#34;https://dl.google.com/go/go1.12.linux-amd64.tar.gz&#34;&gt;https://dl.google.com/go/go1.12.linux-amd64.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tar -C /usr/local -xzf go1.12.linux-amd64.tar.gz&lt;/p&gt;
&lt;p&gt;root用户去编辑vim /etc/profile中添加如下信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export PATH=$PATH:/usr/local/go/bin
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;用户使用go需要
重新生效这个文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;source /etc/profile
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>安装jenkins和插件</title>
    <link>https://charles-one.github.io/actiger/blog/linux/%E5%AE%89%E8%A3%85jenkins%E5%92%8C%E6%8F%92%E4%BB%B6/</link>
    <pubDate>Wed, 13 Mar 2019 15:47:35 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/%E5%AE%89%E8%A3%85jenkins%E5%92%8C%E6%8F%92%E4%BB%B6/</guid>
    <description>
        &lt;h3 id=&#34;0安装jenkins-需要提前安装jdk-18&#34;&gt;0.安装Jenkins, 需要提前安装JDK 1.8&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://actiger.com/blog/linux/下载安装jdk和设置jdk环境变量/&#34;&gt;安装JDK参考&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;1安装jnekins&#34;&gt;1.安装Jnekins&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;尽量翻墙执行,否则容易报443错误&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key
yum search jenkins
sudo yum install jenkins
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-启动服务与添加防火墙端口&#34;&gt;2. 启动服务与添加防火墙端口&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;启动jenkins&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;systemctl start jenkins
如果这里有报错信息,并且提示 &amp;ldquo;systemctl status jenkins.service&amp;rdquo; and &amp;ldquo;journalctl -xe&amp;rdquo; for details 查看详情&lt;/p&gt;
&lt;p&gt;journalctl -xe可以看到原因/usr/bin/java: 没有那个文件或目录&lt;/p&gt;
&lt;p&gt;需要更改vim /etc/init.d/jenkins&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;candidates=&amp;quot;
/etc/alternatives/java
/usr/lib/jvm/java-1.8.0/bin/java
/usr/lib/jvm/jre-1.8.0/bin/java
/usr/lib/jvm/java-1.7.0/bin/java
/usr/lib/jvm/jre-1.7.0/bin/java
/usr/java/jdk1.8.0_152/bin/java  这个是修改后的jdk路径（修改前是/usr/bin/java）
&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;systemctl daemon-reload (重新加载工具)&lt;/p&gt;
&lt;p&gt;systemctl start jenkins (再次启动jenkins)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检查是否能访问成功&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;jenkins 使用的8080端口&lt;/p&gt;
&lt;p&gt;访问http://&amp;lt;服务器ip&amp;gt;/8080&lt;/p&gt;
&lt;p&gt;访问失败, 检查端口是否存在&lt;/p&gt;
&lt;p&gt;netstat -lntup&lt;/p&gt;
&lt;p&gt;检查防火墙端口是否打开&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;firewall-cmd --list-ports

firewall-cmd --add-port=8080/tcp --permanent

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;重启防火墙, 生效刚刚添加的端口&lt;/p&gt;
&lt;p&gt;firewall-cmd &amp;ndash;reload&lt;/p&gt;
&lt;p&gt;再次访问http://&amp;lt;服务器ip&amp;gt;/8080&lt;/p&gt;
&lt;p&gt;查询jenkins存放的密码&lt;/p&gt;
&lt;p&gt;cat /var/lib/jenkins/secrets/initialAdminPassword&lt;/p&gt;
&lt;p&gt;进入后提示离线&lt;/p&gt;
&lt;p&gt;vim /var/lib/jenkins/hudson.model.UpdateCenter.xml
&lt;a href=&#34;https://updates.jenkins.io/update-center.json&#34;&gt;https://updates.jenkins.io/update-center.json&lt;/a&gt; 中https更改成http&lt;/p&gt;
&lt;p&gt;重启jenkins服务&lt;/p&gt;
&lt;p&gt;sudo systemctl restart jenkins&lt;/p&gt;
&lt;p&gt;再次访问http://&amp;lt;服务器ip&amp;gt;/8080&lt;/p&gt;
&lt;h3 id=&#34;3这里重新设置管理员密码原来的就不可用了安装推荐插件&#34;&gt;3.这里重新设置管理员密码,原来的就不可用了.安装推荐插件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;设置登录名,密码,全名,邮箱.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;访问http://&amp;lt;服务器ip&amp;gt;/8080, 并登录
出现空白页
&lt;strong&gt;这里需要再次重启jenkins(更改登录用户和密码, 需要重新加载)&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo systemctl restart jenkins
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;安装插件, 推荐Blue Ocean(更好的界面管理), Git Parameter&lt;/li&gt;
&lt;/ul&gt;

    </description>
    </item>
    
    <item>
    <title>安装docker Ce和使用docker安装nginx</title>
    <link>https://charles-one.github.io/actiger/blog/linux/%E5%AE%89%E8%A3%85docker-ce%E5%92%8C%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</link>
    <pubDate>Tue, 12 Mar 2019 23:59:11 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/%E5%AE%89%E8%A3%85docker-ce%E5%92%8C%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</guid>
    <description>
        &lt;h3 id=&#34;0-目录&#34;&gt;0. 目录&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#1&#34;&gt;安装Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2&#34;&gt;Docker简单使用&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;a-name11安装dockera&#34;&gt;&lt;a name=&#34;1&#34;&gt;1.安装docker&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;卸载版本Docker&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;sudo yum remove docker \
              docker-common \
              docker-selinux \
              docker-engine
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;设置仓库&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;sudo yum install -y yum-utils \
  device-mapper-persistent-data \
  lvm2

sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;安装docker-ce&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;sudo yum install docker-ce
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;卸载docker-ce&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;sudo yum remove docker-ce
sudo rm -rf /var/lib/docker
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;更换国内源&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;vim vim /etc/docker/daemon.json

{
  &amp;quot;registry-mirrors&amp;quot;: [ &amp;quot;http://hub-mirror.c.163.com&amp;quot;]
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;a-name22docker简单使用a&#34;&gt;&lt;a name=&#34;2&#34;&gt;2.docker简单使用&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;下载镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;docker pull nginx:1.14.2
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;# 生成容器
# -d是后台 --name重全名 80:80 外部端口:内部容器端口

docker container run -d -p 80:80  --name mnginx   nginx:1.14.2
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;测试&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;访问http://服务器的ip:80就能看到nginx, 本机服务器ip是localhost.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 关闭容器
docker stop mynginx

# 查看所有容器
docker ps -a

# 启动容器
docker start mginx

&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;挂载外部文件夹和配置信息&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;# -v 后接主机文件夹:容器内文件夹
docker run -p 80:80 --name m-vnginx -v /home/主机名/actiger/:/usr/share/nginx/html nginx:1.14.2

# exec 进入容器内, 在容器内exit就退出了.
docker exec -it m-vnginx /bin/bash

# 挂载内容 配置 日志

docker run -d -p 80:80 --name v2nginx -v /home/主机名/actiger/:/usr/share/nginx/html -v /home/主机名/nginx/conf/:/etc/nginx -v /home/主机名/nginx/log/:/var/log/nginx nginx:1.14.2

# 将容器内/etc/nginx下nginx.conf mime.types conf.d/default.conf复制到 /home/主机名/nginx中
# 重新启动容器

docker start v2nginx
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>设置用户可sudo命令</title>
    <link>https://charles-one.github.io/actiger/blog/linux/%E8%AE%BE%E7%BD%AE%E7%94%A8%E6%88%B7%E5%8F%AFsudo%E5%91%BD%E4%BB%A4/</link>
    <pubDate>Tue, 12 Mar 2019 22:16:35 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/%E8%AE%BE%E7%BD%AE%E7%94%A8%E6%88%B7%E5%8F%AFsudo%E5%91%BD%E4%BB%A4/</guid>
    <description>
        &lt;pre&gt;&lt;code&gt;vi /etc/sudoers
# new
cc ALL=/bin/yum  # cc用户名就可使用sudo yum
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在cc用户下 sudo yum install vim
输入密码后再就可安装vim了&lt;/p&gt;

    </description>
    </item>
    
    <item>
    <title>基本SQL语句用法</title>
    <link>https://charles-one.github.io/actiger/blog/mysql/%E5%9F%BA%E6%9C%ACsql%E8%AF%AD%E5%8F%A5%E7%94%A8%E6%B3%95/</link>
    <pubDate>Tue, 12 Mar 2019 17:31:56 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/mysql/%E5%9F%BA%E6%9C%ACsql%E8%AF%AD%E5%8F%A5%E7%94%A8%E6%B3%95/</guid>
    <description>
        &lt;h3 id=&#34;建立表-4个表关系&#34;&gt;建立表 4个表关系&lt;/h3&gt;
&lt;p&gt;1.学生表&lt;/p&gt;
&lt;p&gt;Student(s_id,s_name,s_birth,s_sex) –学生编号,学生姓名, 出生年月,学生性别&lt;/p&gt;
&lt;p&gt;2.课程表&lt;/p&gt;
&lt;p&gt;Course(c_id,c_name,t_id) – –课程编号, 课程名称, 教师编号&lt;/p&gt;
&lt;p&gt;3.教师表&lt;/p&gt;
&lt;p&gt;Teacher(t_id,t_name) –教师编号,教师姓名&lt;/p&gt;
&lt;p&gt;4.成绩表&lt;/p&gt;
&lt;p&gt;Score(s_id,c_id,s_s_score) –学生编号,课程编号,分数&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-- 学生表
CREATE TABLE Student(
s_id VARCHAR(20),
s_name VARCHAR(20) NOT NULL DEFAULT &#39;&#39;,
s_birth VARCHAR(20) NOT NULL DEFAULT &#39;&#39;,
s_sex VARCHAR(10) NOT NULL DEFAULT &#39;&#39;,
PRIMARY KEY(s_id)
);

-- 课程表
CREATE TABLE Course(
c_id VARCHAR(20),
c_name VARCHAR(20) NOT NULL DEFAULT &#39;&#39;,
t_id VARCHAR(20) NOT NULL,
PRIMARY KEY(c_id)
);

-- 教师表
CREATE TABLE Teacher(
t_id VARCHAR(20),
t_name VARCHAR(20) NOT NULL DEFAULT &#39;&#39;,
PRIMARY KEY(t_id)
);

-- 成绩表
CREATE TABLE `Score`(
s_id VARCHAR(20),
c_id VARCHAR(20),
s_score INT(3),
PRIMARY KEY(s_id,c_id)
);

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;插入对应的数据&#34;&gt;插入对应的数据&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 插入学生表测试数据
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;01&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;赵雷&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1990-01-01&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;男&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;02&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;钱电&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1990-12-21&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;男&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;03&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;孙风&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1990-05-20&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;男&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;04&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;李云&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1990-08-06&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;男&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;05&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;周梅&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1991-12-01&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;女&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;06&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;吴兰&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1992-03-01&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;女&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;07&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;郑竹&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1989-07-01&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;女&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;08&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;王菊&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1990-01-20&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;女&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;09&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;如花&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1991-02-15&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;女&amp;#39;&lt;/span&gt;);

&lt;span style=&#34;color:#75715e&#34;&gt;-- 课程表测试数据
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Course &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;01&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;语文&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;02&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Course &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;02&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;数学&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;01&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Course &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;03&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;英语&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;03&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Course &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;04&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;体育&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;01&amp;#39;&lt;/span&gt;);

&lt;span style=&#34;color:#75715e&#34;&gt;-- 教师表测试数据
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Teacher &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;01&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;张三&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Teacher &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;02&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;李四&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Teacher &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;03&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;王五&amp;#39;&lt;/span&gt;);

&lt;span style=&#34;color:#75715e&#34;&gt;-- 成绩表测试数据
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;01&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;01&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;01&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;02&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;01&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;03&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;02&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;01&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;02&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;02&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;02&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;03&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;03&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;01&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;03&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;02&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;03&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;03&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;04&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;01&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;04&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;02&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;04&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;03&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;05&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;01&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;76&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;05&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;02&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;87&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;06&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;01&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;06&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;03&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;07&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;02&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;89&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;07&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;03&amp;#39;&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;98&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;09&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;01&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;09&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;02&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;09&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;03&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;insert&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;into&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;values&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;09&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;04&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;);

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sql练习&#34;&gt;SQL练习&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;查询姓&amp;quot;张&amp;quot;老师的个数&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(t_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Teacher &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; t_name &lt;span style=&#34;color:#66d9ef&#34;&gt;like&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;张%&amp;#34;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询1990年出生的学生名单&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id, s_name &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;year&lt;/span&gt;(s_birth)&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1990&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询课程编号为&amp;quot;02&amp;quot;的总成绩&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; c_id,&lt;span style=&#34;color:#66d9ef&#34;&gt;sum&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;总成绩&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; c_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询选了课程的学生人数
思路学生唯一, 然后再计算总数&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;distinct&lt;/span&gt; s_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;选课人数&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询各科成绩最高和最低的分: 以如下的形式显示: 课程ID, 最高分, 最低分&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;课程&lt;/span&gt;ID, &lt;span style=&#34;color:#66d9ef&#34;&gt;max&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;最高分&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;min&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;最低分&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; c_id;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询每门课程被选修的学生数&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; c_id, &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(s_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; c_id;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询男生,女生人数&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_sex &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;性别&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(s_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;人数&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_sex;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询平均成绩大于60分的学生的学号和平均成绩&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;学号与平均成绩都在Score表中可以获取到&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;学号&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;平均成绩&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;having&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询至少选修两门课程的学生学号
学生学号与学生选修课程数都在Score表中&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;学号&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;选修课程数&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;having&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询两门以上不及格课程的同学的学号及其平均成绩&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;这种做法是错误的-只计算不及格课程的平均成绩-如果还有其他课程及格就未计算在内了&#34;&gt;这种做法是错误的, 只计算不及格课程的平均成绩, 如果还有其他课程及格就未计算在内了&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;学号&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score)&lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;平均成绩&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score
&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_score &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id
&lt;span style=&#34;color:#66d9ef&#34;&gt;having&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;学生学号-学生不及格课程总数-平均成绩都在score表中-但是一条语句无法查询出来不及格条件后的平均成绩是不正确即是不及格课程的平均成绩不是总成绩包含及格与不及格课程成绩&#34;&gt;学生学号, 学生不及格课程总数, 平均成绩都在Score表中, 但是一条语句无法查询出来,不及格条件后的平均成绩是不正确(即是不及格课程的平均成绩),不是总成绩(包含及格与不及格课程成绩).&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 查询到不及格课程总断&amp;gt;2的学生
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;having&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 查询学生的总成绩计算的平均成绩
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id,&lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; avg_score &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 将2表内连接起来
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s1.s_id, s2.avg_score
&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt;
(&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;having&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; s1
&lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt;
(&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id,&lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; avg_score &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; s2
&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; s1.s_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;s2.s_id;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;这次查询不及格课程数1的学生学号平均成绩09号有3门课程三门成绩405090360-错误做法只计算不及格成绩4050245&#34;&gt;这次查询不及格课程数&amp;gt;1的学生,学号,平均成绩.(&amp;ldquo;09号有3门课程,三门成绩(40+50+90)/3=60&amp;rdquo;, 错误做法只计算不及格成绩(40+50)/2=45)&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;-- 错误做法
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;学号&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score)&lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;平均成绩&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score
&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_score &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id
&lt;span style=&#34;color:#66d9ef&#34;&gt;having&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 正确做法
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s1.s_id, s2.avg_score
&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt;
(&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;having&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; s1
&lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt;
(&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id,&lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; avg_score &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; s2
&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; s1.s_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;s2.s_id;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询名字完全一致的学生, 统计同名人数&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 名字, 同名人数都在表Student中
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_name, &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(s_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;同名人数&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_name &lt;span style=&#34;color:#66d9ef&#34;&gt;having&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(s_id)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询每门课程的平均成绩，结果按平均成绩升序排序，平均成绩相同时，按课程号降序排列&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; c_id, &lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;平均成绩&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;order&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;, c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询不及格课程号和学生号, 课程号从大到小排列&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 这些不及格课程号与学生号数据都在Score表中
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id, c_id, s_score &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_score &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;检索课程编号为“03”且分数小于60的学生学号，结果按按分数降序排列&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id, s_score &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; c_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;统计每门课程的学生选修人数(超过5人的课程才统计), 要求输出课程号和选修人数，查询结果按人数降序排序，若人数相同，按课程号升序排序&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; c_id, &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(s_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;having&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(s_id)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;order&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(s_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;, c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询所有课程成绩小于60分的学生的学号、姓名.
学生成绩在表Score中, 学生姓名在表Student, 内连接2个表&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 小于60分的学生号
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id, s_score &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 学生姓名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id, s_name &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Student;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 通过s_id内连接2个表, 2个成绩&amp;lt;60分会有2条数据, 可用group by去重
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; sco.s_id,s.s_name &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; sco &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; s &lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; sco.s_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;s.s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 还可以这么写
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id,s_name &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询没有学全所有课的学生的学号、姓名&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;全部课程数在course中-学生所选课程在score中-学生姓名在student中隐藏条件学生所学课程一定属于全部课程中的一种&#34;&gt;全部课程数在Course中, 学生所选课程在Score中, 学生姓名在Student中.(隐藏条件学生所学课程一定属于全部课程中的一种)&lt;/h4&gt;
&lt;h4 id=&#34;理解是学没有学全所有课程的所有学号与学生姓名注意是所有学生&#34;&gt;理解是学没有学全所有课程的所有学号与学生姓名(注意是所有学生)&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 查询全部课程数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Course;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 查询学生学号与课程数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id, &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; count_cid &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 查询学生学号与学生姓名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id, s_name &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Student;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 左连Student与Score表, 为什么左连接, 因为是没有学无所有课程的学生, 学生一定会有, 学生不一定有选修的课程成绩.
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s.s_id, s.s_name &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; 
Student &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; s 
&lt;span style=&#34;color:#66d9ef&#34;&gt;left&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; 
Score &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; sco 
&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; sco.s_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;s.s_id 
&lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s.s_id 
&lt;span style=&#34;color:#66d9ef&#34;&gt;having&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Course);

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询出只选修了两门课程的全部学生的学号和姓名&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;学生选修课程数在score表中-学生姓名在表student中&#34;&gt;学生选修课程数在Score表中, 学生姓名在表Student中&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;-- 查询学生选择课程数为2的学生
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id,&lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;having&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id)&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 查询学生姓名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id, s_name &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Student;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 左连接2个表
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s.s_id, s.s_name &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; 
Student &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; s 
&lt;span style=&#34;color:#66d9ef&#34;&gt;left&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; 
Score &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; sco 
&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; s.s_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sco.s_id
&lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s.s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;having&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id)&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询课程编号为03且课程成绩在80分以上的学生的学号和姓名&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;学生选修课程与成绩在score表中-学生姓名在表student中&#34;&gt;学生选修课程与成绩在Score表中, 学生姓名在表Student中&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 查询课程03,&amp;gt;80的学生成绩
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id, s_score, c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; c_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;03&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 查询学生姓名
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id, s_name &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Student;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 内连接2个表, 注意不是左右连接,有对应成绩的才检索,否则不检索
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s.s_id, s.s_name &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; 
Student &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; s 
&lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; 
Score &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; sco 
&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; s.s_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sco.s_id
&lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; sco.s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; sco.c_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;03&amp;#34;&lt;/span&gt;;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 其他写法
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id, s_name &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; c_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询课程编号为“01”的课程比“02”的课程成绩高的所有学生的学号
内连接 s1同学.s_id=s2同学.s_id, s1.c_id=&amp;ldquo;01&amp;rdquo;, s2.c_id=&amp;ldquo;02&amp;rdquo;, s1.s_score&amp;gt;s2.s_score, 最后去重&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s1.s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score s1,Score s2 &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s1.s_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;s2.s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; s1.c_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;01&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; s2.c_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;02&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; s1.s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;s2.s_score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s1.s_id;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;按平均成绩从高到低，按如下形式显示: 学生ID, 有效课程数, 有效平均分&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;学生ID&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;有效课程数&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score) &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;有效平均分&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;使用分段[100-85],[85-70],[70-60],[&amp;lt;60]来统计各科成绩，分别统计各分数段人数: 课程ID和课程名称&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;c&lt;/span&gt;.c_id, &lt;span style=&#34;color:#66d9ef&#34;&gt;c&lt;/span&gt;.c_name, &lt;span style=&#34;color:#66d9ef&#34;&gt;sum&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;when&lt;/span&gt; sco.s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;85&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; sco.s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[100-85]&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;color:#66d9ef&#34;&gt;sum&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;when&lt;/span&gt; sco.s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; sco.s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;85&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[85-70]&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;color:#66d9ef&#34;&gt;sum&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;when&lt;/span&gt; sco.s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; sco.s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[70-60]&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;color:#66d9ef&#34;&gt;sum&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;when&lt;/span&gt; sco.s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[&amp;lt;60]&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Course &lt;span style=&#34;color:#66d9ef&#34;&gt;c&lt;/span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt;  Score sco &lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; sco.c_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;c&lt;/span&gt;.c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;c&lt;/span&gt;.c_id;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询出每门课程的及格人数和不及格人数&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; c_id,
&lt;span style=&#34;color:#66d9ef&#34;&gt;sum&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;when&lt;/span&gt; s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;及格人数&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;color:#66d9ef&#34;&gt;sum&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;when&lt;/span&gt; s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;不及格人数&amp;#39;&lt;/span&gt; 
&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; c_id;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询出每门课程的及格百分数&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; c_id, sco.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;及格人数&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;(sco.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;及格人数&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;sco.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;不及格人数&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;及格百分比&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; (
&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; c_id, 
&lt;span style=&#34;color:#66d9ef&#34;&gt;sum&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;when&lt;/span&gt; s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;及格人数&amp;#39;&lt;/span&gt;,
&lt;span style=&#34;color:#66d9ef&#34;&gt;sum&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;when&lt;/span&gt; s_score&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;不及格人数&amp;#39;&lt;/span&gt; 
&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; c_id
) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; sco;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询至少有一门课与学号为“01”的学生所学课程相同的学生的学号和姓名&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;注意是其他学生-应该去除自己s_id01的情况&#34;&gt;注意是其他学生, 应该去除自己s_id=&amp;ldquo;01&amp;quot;的情况&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id,s_name &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;02&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id);

&lt;span style=&#34;color:#75715e&#34;&gt;-- 内连接
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s.s_id, s.s_name &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; 
Student s &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; Score sco &lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; s.s_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sco.s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; sco.c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;01&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; sco.s_id&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s.s_id;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询和“01”号同学所学课程完全相同的其他同学的学号&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;注意是其他学生-应该去除自己s_id01的情况-1&#34;&gt;注意是其他学生, 应该去除自己s_id=&amp;ldquo;01&amp;quot;的情况&lt;/h4&gt;
&lt;h4 id=&#34;属于的01学生的课程数-应该与01学生的总课程数一致才算完全一致&#34;&gt;属于的&amp;quot;01&amp;quot;学生的课程数, 应该与&amp;quot;01&amp;quot;学生的总课程数一致才算完全一致.&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 计算&amp;#34;01&amp;#34;号学生的课程数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;01&amp;#34;&lt;/span&gt;;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 计算其他学生属于&amp;#34;01&amp;#34;课程的课程数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;01&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; s_id&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;having&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id)&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;01&amp;#34;&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;把“SCORE”表中“张三”老师教的课的成绩都更改为此课程的平均成绩&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 查询&amp;#34;张三老师名字和id&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; t_id, t_name &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Teacher &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; t_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;张三&amp;#34;&lt;/span&gt;;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 查询张三老师的课程
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; t_id, c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Course &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; t_id &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; t_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Teacher &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; t_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;张三&amp;#34;&lt;/span&gt;);

&lt;span style=&#34;color:#75715e&#34;&gt;-- 课程分组的平均成绩
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; avg_score,c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; c_id;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 张三老师课程与课程分组平均成绩内连接
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; t.t_id, t.c_id, sco.avg_score &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; 
(&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; t_id, c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Course &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; t_id &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; t_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Teacher &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; t_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;张三&amp;#34;&lt;/span&gt;)) t
&lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; 
(&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; avg_score,c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; c_id) sco
&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; t.c_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sco.c_id;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 内连接得到老师和学生课程成绩和每科的平均成绩
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; ss1 &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; sco.c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; sco_cid,sco.avg_score &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; sco_avg_socre &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; 
(&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; t_id, c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Course &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; t_id &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; t_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Teacher &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; t_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;张三&amp;#34;&lt;/span&gt;)) t
&lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; 
(&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; avg_score,c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; c_id) sco
&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; t.c_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sco.c_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; ss2 
&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; ss1.c_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ss2.sco_cid;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 更新上面的内连接表
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;update&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; ss1 &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; sco.c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; sco_cid,sco.avg_score &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; sco_avg_socre &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; 
(&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; t_id, c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Course &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; t_id &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; t_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Teacher &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; t_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;张三&amp;#34;&lt;/span&gt;)) t
&lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; 
(&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; avg_score,c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; c_id) sco
&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; t.c_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sco.c_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; ss2 
&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; ss1.c_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ss2.sco_cid 
&lt;span style=&#34;color:#66d9ef&#34;&gt;set&lt;/span&gt; ss1.s_score&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ss2.sco_avg_socre;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;按各科平均成绩从低到高和及格率的百分数从高到低排列，以如下形式显示: 课程号，课程名平均成绩，及格百分数&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 查询课程号与课程平均成绩
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; c_id, &lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; avg_score &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; c_id;

&lt;span style=&#34;color:#75715e&#34;&gt;-- 及格百分数
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s1.c_id, jige&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;all_chenji, s2.avg_score
&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; s1
&lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;sum&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;when&lt;/span&gt; s_score &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; jige,
&lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(s_id)all_chenji,
&lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; avg_score,
c_id
&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; c_id
) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; s2 
&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; s1.c_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;s2.c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s1.c_id 
&lt;span style=&#34;color:#66d9ef&#34;&gt;order&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s2.avg_score &lt;span style=&#34;color:#66d9ef&#34;&gt;ASC&lt;/span&gt;, jige&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;all_chenji &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询不同老师所教不同课程平均分从高到低显示&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; t.t_name, &lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Teacher &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; t
&lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt;
Course &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;c&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; t.t_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;c&lt;/span&gt;.t_id
&lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt;
Score &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; sco
&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;c&lt;/span&gt;.c_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sco.c_id &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; sco.c_id
&lt;span style=&#34;color:#66d9ef&#34;&gt;order&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;DESC&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询学生平均成绩及其名次&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id,&lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score),&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;curRank:&lt;span style=&#34;color:#f92672&#34;&gt;=@&lt;/span&gt;curRank &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score s1,(&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;curRank:&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) q &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询各科成绩前三名的记录（不考虑成绩并列情况）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;待解决&#34;&gt;待解决&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;查询所有学生的学号、姓名、选课数、总成绩&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;所有学生-用左连接-查到所有学生&#34;&gt;所有学生, 用左连接, 查到所有学生&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 学号,姓名在Student表中, 学号,选课数,总成绩在Score表中, 左连接起来
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s.s_id, s.s_name,&lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id),&lt;span style=&#34;color:#66d9ef&#34;&gt;sum&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; s
&lt;span style=&#34;color:#66d9ef&#34;&gt;left&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt;
Score &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; sco
&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; s.s_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sco.s_id
&lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询平均成绩大于85的所有学生的学号、姓名和平均成绩&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 学号,姓名在Student表中, 平均成绩,选课数在Score表中, 左连接起来
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s.s_id, s.s_name,&lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score) &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; s
&lt;span style=&#34;color:#66d9ef&#34;&gt;left&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;join&lt;/span&gt;
Score &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; sco
&lt;span style=&#34;color:#66d9ef&#34;&gt;on&lt;/span&gt; s.s_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sco.s_id
&lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id
&lt;span style=&#34;color:#66d9ef&#34;&gt;having&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;avg&lt;/span&gt;(s_score)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;85&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询有2门不同课程成绩相同的学生的学号、课程号、学生成绩&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s1.s_id,s1.c_id,s1.s_score &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score s1,Score s2
&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s1.s_id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;s2.s_id
&lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; s1.s_score&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;s2.s_score
&lt;span style=&#34;color:#66d9ef&#34;&gt;and&lt;/span&gt; s1.c_id&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt;s2.c_id
&lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s1.s_id,s1.c_id;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;查询选修了全部课程的学生信息&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Student &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Score &lt;span style=&#34;color:#66d9ef&#34;&gt;group&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;by&lt;/span&gt; s_id &lt;span style=&#34;color:#66d9ef&#34;&gt;having&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id)&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;count&lt;/span&gt;(c_id) &lt;span style=&#34;color:#66d9ef&#34;&gt;from&lt;/span&gt; Course));

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    </description>
    </item>
    
    <item>
    <title>下载安装JDK和设置JDK环境变量</title>
    <link>https://charles-one.github.io/actiger/blog/linux/%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85jdk%E5%92%8C%E8%AE%BE%E7%BD%AEjdk%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</link>
    <pubDate>Tue, 12 Mar 2019 16:20:56 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85jdk%E5%92%8C%E8%AE%BE%E7%BD%AEjdk%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</guid>
    <description>
        &lt;h3 id=&#34;0-准备工作&#34;&gt;0. 准备工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;root用户及密码&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-卸载原有jdk&#34;&gt;1. 卸载原有JDK&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;rpm -qa | grep &amp;quot;java&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;yum remove 上面筛选内容&lt;/p&gt;
&lt;h3 id=&#34;2-下载jdk-解压&#34;&gt;2. 下载JDK, 解压&lt;/h3&gt;
&lt;p&gt;进入https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
右键选择linux x64 jdk-8u201-linux-i586.tar.gz的下载地址
使用wget下载&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget --no-check-certificate --no-cookies --header &amp;quot;Cookie: oraclelicense=accept-securebackup-cookie&amp;quot; https://download.oracle.com/otn-pub/java/jdk/8u201-b09/42970487e3af4f5aa5bca3f542482c60/jdk-8u201-linux-x64.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;解压&lt;/p&gt;
&lt;p&gt;tar -zxvf jdk-8u201-linux-x64.tar.gz&lt;/p&gt;
&lt;h3 id=&#34;3-root移动文件-并设置java_home环境变量&#34;&gt;3. root移动文件, 并设置JAVA_HOME环境变量&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;移动文件夹&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;mv jdk1.8.0_201 /usr/local
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;设置JAVA_HOME环境变量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;vim /etc/profile 可以对所有用户生效
添加下列信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export JAVA_HOME=/usr/local/jdk1.8.0_201
export JRE_HOME=${JAVA_HOME}/jre
export CLASSPATH=.:${JAVA_HOME}/lib/dt.JAVA_HOME/lib/tools.jar:${JRE_HOME}/lib
export PATH=${JAVA_HOME}/bin:${PATH}
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;重新生效/etc/profile&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;source /etc/profile
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;检测&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;java -version
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;预期会弹出java的版本&lt;/p&gt;

    </description>
    </item>
    
    <item>
    <title>更改linux用户名</title>
    <link>https://charles-one.github.io/actiger/blog/linux/%E6%9B%B4%E6%94%B9linux%E7%94%A8%E6%88%B7%E5%90%8D/</link>
    <pubDate>Tue, 12 Mar 2019 15:27:58 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/%E6%9B%B4%E6%94%B9linux%E7%94%A8%E6%88%B7%E5%90%8D/</guid>
    <description>
        &lt;h3 id=&#34;0前提条件&#34;&gt;0.前提条件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;root用户及密码&lt;/li&gt;
&lt;li&gt;原用户ccc&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-更改用户ccc&#34;&gt;1. 更改用户ccc&lt;/h3&gt;
&lt;p&gt;使用root用户编辑更改&lt;/p&gt;
&lt;p&gt;/etc/passwd&lt;/p&gt;
&lt;p&gt;/etc/group&lt;/p&gt;
&lt;p&gt;/etc/shadow&lt;/p&gt;
&lt;p&gt;/etc/gshadow&lt;/p&gt;
&lt;p&gt;中&amp;quot;原用户名&amp;quot;为&amp;quot;新用户名&amp;quot;即可&lt;/p&gt;
&lt;p&gt;同时&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mv /home/olderuser /home/newuser
&lt;/code&gt;&lt;/pre&gt;
    </description>
    </item>
    
    <item>
    <title>更改ssh端口与禁止root登录增强服务器安全</title>
    <link>https://charles-one.github.io/actiger/blog/linux/%E6%9B%B4%E6%94%B9ssh%E7%AB%AF%E5%8F%A3%E4%B8%8E%E7%A6%81%E6%AD%A2root%E7%99%BB%E5%BD%95%E5%A2%9E%E5%BC%BA%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E5%85%A8/</link>
    <pubDate>Tue, 12 Mar 2019 14:39:09 +0800</pubDate>
    
    <guid>https://charles-one.github.io/actiger/blog/linux/%E6%9B%B4%E6%94%B9ssh%E7%AB%AF%E5%8F%A3%E4%B8%8E%E7%A6%81%E6%AD%A2root%E7%99%BB%E5%BD%95%E5%A2%9E%E5%BC%BA%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E5%85%A8/</guid>
    <description>
        &lt;h3 id=&#34;0前提条件&#34;&gt;0.前提条件&lt;/h3&gt;
&lt;h5 id=&#34;1安装软件centos7-版本761810-centos-7-x86_64-minimal-1810iso&#34;&gt;1.安装软件Centos7, 版本7.6.1810 CentOS-7-x86_64-Minimal-1810.iso&lt;/h5&gt;
&lt;h5 id=&#34;2root用户及密码-已联网&#34;&gt;2.root用户及密码, 已联网&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;如未联网,请打开网卡, 并重启
设置/etc/sysconfig/network-scripts/ifcfg-eth0 中ONBOOT =yes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;重启电脑&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reboot
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;1登录root&#34;&gt;1.登录root&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;需要查询当前Centos7的主机ip&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;ifconfig
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;提示无此命令&lt;/p&gt;
&lt;p&gt;yum -y install net-tools&lt;/p&gt;
&lt;p&gt;再次
ifconfig查询ip&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;使用ssh软件登录root用户, 默认使用22端口, 不用指定&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;ssh root@ip
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输入密码&lt;/p&gt;
&lt;h3 id=&#34;2更改ssh服务端口-防火墙端口-selinux端口&#34;&gt;2.更改ssh服务端口, 防火墙端口, SELINUX端口&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;更改sshd.service端口, 端口可选择&amp;gt;10000避免与其他软件冲突.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;vim /etc/ssh/sshd_config更改Port 12340&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl restart sshd
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;添加防火墙端口&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;firewall-cmd --zone=public --add-port=12340/tcp --permanent  (永久生效必须用--permanent)
firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;更改SELINUX端口, 因为SELINUX的原因, ssh被设定到22端口上了, 必须更改&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;借助软件来更改
安装 yum -y install policycoreutils-python
semanage port -a -t ssh_port_t -p tcp 12340&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;strong&gt;注意不要关闭当前窗口&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;另开一个窗口, 尝试登录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh root@ip -P 12340
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输入密码&lt;/p&gt;
&lt;h3 id=&#34;3设置root用户无法远程登录&#34;&gt;3.设置root用户无法远程登录&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;如果当且仅有一个root用户, 可直接添加一个add user ccc password hellocc&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设置root用户不能登录, &lt;strong&gt;注意不能关闭当前窗口&lt;/strong&gt;
vim /etc/ssh/sshd_config
更改
PermitRootLogin no&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;重启sshd服务
systemctl restart sshd&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;新建窗口检测root能否登录&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;ssh root@ip -P 12340
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这时登录失败的&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh ccc@ip -P 12340
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输入密码, 预期是登录成功的&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;su
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输入root密码即可变成root用户&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;需要2个用户密码才更改服务器设置,是不是安全了很多&lt;/strong&gt;&lt;/p&gt;

    </description>
    </item>
    
  </channel>
</rss>
